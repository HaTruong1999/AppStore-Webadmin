{"version":3,"sources":["webpack:///src/app/profile/profile/profile.component.html","webpack:///src/app/profile/profile/profile.component.ts","webpack:///src/app/profile/change-password/change-password.component.html","webpack:///src/app/profile/profile-routing.module.ts","webpack:///src/app/profile/change-password/change-password.component.ts","webpack:///src/app/profile/profile.module.ts"],"names":["ProfileComponent","apiUrl","environment","backEndApiURL","toast","translate","accountsService","authService","usersService","fb","isPageLoading","isConfirmLoading","dataForm","dataStatus","id","text","this","instant","isSpinning","dataOriginal","username","getCache","userId","validateForm","group","userFullname","value","disabled","required","userBirthday","userPhoneNumber","userEmail","userAddress","userGender","getData","account","subscribe","res","code","data","userAvatar","error","console","log","event","target","files","length","file","type","size","warning","changeAvatar","success","avatarSrc","i","controls","reset","key","markAsDirty","updateValueAndValidity","invalid","Date","userCreatedDate","userUpdatedDate","params","Update","selectFile","submitForm","cancle","ChangePasswordComponent","ProfileRoutingModule","ProfileModule","routes","path","component","confirmValidator","control","passwordNew","confirm","password","changePassword","clearData","msg","setTimeout","validateConfirmPassword","cancel","forChild"],"mappings":"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","file":"x","sourcesContent":["<div class=\"head-top marb10\">\n  <div class=\"pull-left\">\n    <div class=\"main-title\">\n      {{'auth_profile' | translate}}\n    </div>\n  </div>\n  <div class=\"clearfix\"></div>\n</div>\n<div class=\"content\">\n\n  <form nz-form [formGroup]=\"validateForm\">\n    <nz-form-item>\n      <nz-form-label [nzSpan]=\"4\">{{'accounts_avatar' | translate}}</nz-form-label>\n      <nz-form-control [nzSpan]=\"10\">\n        <div class=\"avatar-container\">\n          <nz-spin [nzSpinning]=\"isSpinning\">\n            <nz-avatar [nzSrc]=\"dataForm.userAvatar\"></nz-avatar>\n            <i class=\"fa fa-edit avatar-edit\" (click)=\"file.click()\"></i>\n          </nz-spin>\n\n\n          <input type=\"file\" #file style=\"display:none\" (change)=\"selectFile($event)\" name=\"image\" />\n        </div>\n      </nz-form-control>\n\n    </nz-form-item>\n\n    <nz-form-item>\n      <nz-form-label [nzSpan]=\"4\" nzRequired nzFor=\"userFullname\">{{'accounts_fullname' | translate}}</nz-form-label>\n      <nz-form-control [nzSpan]=\"10\" nzErrorTip=\"{{'accounts_fullname_require' | translate}}\">\n        <input nz-input formControlName=\"userFullname\" id=\"userFullname\" [(ngModel)]=\"dataForm.userFullname\" />\n      </nz-form-control>\n    </nz-form-item>\n\n    <nz-form-item>\n      <nz-form-label [nzSpan]=\"4\" nzFor=\"userBirthday\">{{'accounts_birthday' | translate}}</nz-form-label>\n      <nz-form-control [nzSpan]=\"10\">\n        <nz-date-picker nzFormat=\"dd/MM/yyyy\" formControlName=\"userBirthday\" id=\"userBirthday\" nzAllowClear=\"false\"\n          [(ngModel)]=\"dataForm.userBirthday\" class=\"w100p\" nzPlaceHolder=\" \"></nz-date-picker>\n      </nz-form-control>\n    </nz-form-item>\n\n    <nz-form-item>\n      <nz-form-label [nzSpan]=\"4\" nzFor=\"userGender\">{{'accounts_gender' | translate}}</nz-form-label>\n      <nz-form-control [nzSpan]=\"10\">\n        <nz-radio-group nzName=\"radiogroup\" formControlName=\"userGender\" id=\"userGender\"\n          [(ngModel)]=\"dataForm.userGender\">\n          <label nz-radio nzValue=\"1\">{{'accounts_gender_male' | translate}}</label>\n          <label nz-radio nzValue=\"0\"> {{'accounts_gender_female' | translate}}</label>\n        </nz-radio-group>\n      </nz-form-control>\n    </nz-form-item>\n\n    <nz-form-item>\n      <nz-form-label [nzSpan]=\"4\" nzRequired nzFor=\"userPhoneNumber\">{{'accounts_phone' | translate}}</nz-form-label>\n      <nz-form-control [nzSpan]=\"10\" [nzErrorTip]=\"errorPhone\">\n        <input nz-input formControlName=\"userPhoneNumber\" id=\"userPhoneNumber\" [(ngModel)]=\"dataForm.userPhoneNumber\" />\n        <ng-template #errorPhone let-control>\n          <ng-container *ngIf=\"control.hasError('required')\">\n            {{'accounts_phone_require' | translate}}\n          </ng-container>\n          <ng-container *ngIf=\"control.hasError('notPhoneNumber')\">\n            {{'global_phone_invalid' | translate}}\n          </ng-container>\n        </ng-template>\n      </nz-form-control>\n    </nz-form-item>\n\n    <nz-form-item>\n      <nz-form-label [nzSpan]=\"4\" nzFor=\"userEmail\">{{'accounts_email' | translate}}</nz-form-label>\n      <nz-form-control [nzSpan]=\"10\" [nzErrorTip]=\"errorEmail\">\n        <input nz-input type=\"email\" formControlName=\"userEmail\" id=\"userEmail\" [(ngModel)]=\"dataForm.userEmail\" />\n        <ng-template #errorEmail let-control>\n          <ng-container *ngIf=\"control.hasError('email')\">\n            {{'global_email_invalid' | translate}}\n          </ng-container>\n        </ng-template>\n      </nz-form-control>\n    </nz-form-item>\n\n    <nz-form-item>\n      <nz-form-label [nzSpan]=\"4\" nzFor=\"userAddress\">{{'accounts_address' | translate}}</nz-form-label>\n      <nz-form-control [nzSpan]=\"10\">\n        <textarea nz-input formControlName=\"userAddress\" id=\"userAddress\" [(ngModel)]=\"dataForm.userAddress\"></textarea>\n      </nz-form-control>\n    </nz-form-item>\n\n    <nz-form-item>\n      <nz-form-control [nzOffset]=\"4\" [nzSpan]=\"12\">\n        <button nz-button nzType=\"primary\" (click)=\"submitForm()\" [nzLoading]=\"isConfirmLoading\"><i nz-icon\n            nzType=\"save\"></i>{{ 'global_edit' | translate}}</button>\n        <button nz-button nzType=\"default\" (click)=\"cancle()\"><i nz-icon nzType=\"close\"></i>{{'global_cancel' |\n          translate}}</button>\n      </nz-form-control>\n    </nz-form-item>\n  </form>\n</div>\n<div class=\"clearfix\"></div>\n<loading-page [isPageLoading]=\"isPageLoading\">\n</loading-page>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { TranslateService } from '@ngx-translate/core';\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { UsersDto } from '~/app/shared/models/users.model';\nimport { AccountsService } from '~/app/core/services/manager/accounts.service';\nimport { AuthService } from '~/app/core/services/auth/auth.service';\nimport { dateTimeToJsonStringNotTime, stringToDateTime } from '~/app/shared/helper/convert/dateTime.helper';\nimport { Cache } from '~/app/core/lib/cache';\nimport { notPhoneNumber } from \"~/app/shared/helper/validator/validator\";\nimport { UsersService } from '~/app/core/services/manager/users.service';\nimport { environment } from '~/environments/environment';\nconst apiUrl = environment.backEndApiURL;\nconst MAX_SIZE = 5242880; // 5MB\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  isPageLoading = false;\n  isConfirmLoading = false;\n  dataForm: UsersDto = new UsersDto();\n  validateForm!: FormGroup;\n  dataStatus = [\n    { id: 0, text: this.translate.instant('global_unactive') },\n    { id: 1, text: this.translate.instant('global_active') },\n    { id: 2, text: this.translate.instant('global_lock') }\n  ];\n  isSpinning = false;\n  dataOriginal: any = null;\n  username: string = Cache.getCache(\"username\");\n  userId: string = Cache.getCache(\"userId\");\n\n  constructor(\n    public toast: ToastrService,\n    public translate: TranslateService,\n    public accountsService: AccountsService,\n    public authService: AuthService,\n    public usersService: UsersService,\n    private fb: FormBuilder) {\n    //this.authService.checkToken();\n    this.isPageLoading = true;\n  }\n\n  ngOnInit() {\n    this.isPageLoading = false;\n    this.validateForm = this.fb.group({\n      userFullname: [{ value: null, disabled: false }, [Validators.required]],\n      userBirthday: [{ value: null, disabled: false }],\n      userPhoneNumber: [{ value: null, disabled: false }, [Validators.required, notPhoneNumber()]],\n      userEmail: [{ value: null, disabled: false }],\n      userAddress: [{ value: null, disabled: false }],\n      userGender: [{ value: 'Nam', disabled: false }],\n    });\n    this.getData();\n  }\n\n  getData() {\n    if (this.userId == null) return;\n\n    this.authService.account()\n      .subscribe((res: any) => {\n        if (res.code == 1) {\n          this.dataForm = this.dataOriginal = res.data;\n          this.dataForm.userBirthday = stringToDateTime(res.data.userBirthday);\n          if (this.dataForm.userAvatar == null)\n            this.dataForm.userAvatar = \"assets/uploads/avatar-default.png\";\n          else //apiUrl\n            this.dataForm.userAvatar =  apiUrl + this.dataForm.userAvatar;\n        }\n        else {\n          this.toast.error(this.translate.instant('global_fail'));\n        }\n      }, error => {\n        console.log(error)\n        this.toast.error(this.translate.instant('global_error_fail'));\n      });\n  }\n\n  selectFile(event: any): void {\n    this.isSpinning = true;\n    if (event.target.files.length == 0) {\n      this.isSpinning = false;\n      return;\n    }\n    let file = event.target.files[0]; \n    const isType = file.type === 'image/png' || file.type === 'image/jpg' || file.type === 'image/jpeg' || file.type === 'image/webp' ;\n    if (!isType) {\n      this.toast.warning(this.translate.instant('auth_avatar_type_invalid'));\n      this.isSpinning = false;\n      return;\n    }\n    //512KB\n    if (file.size > MAX_SIZE) {\n      this.toast.warning(this.translate.instant('auth_avatar_size_invalid'));\n      this.isSpinning = false;\n      return;\n    }\n\n    this.authService.changeAvatar(Cache.getCache(\"userId\"), file)\n      .subscribe((res: any) => {\n        if (res.code == 1) {\n          this.toast.success(this.translate.instant('global_edit_success'));\n          if (res.data != null && res.data.avatarSrc != null)\n            this.dataForm.userAvatar = apiUrl + res.data.avatarSrc;\n        }\n        else {\n          this.toast.error(this.translate.instant('global_fail'));\n        }\n        this.isSpinning = false;\n      }, error => {\n        console.log(error)\n        this.toast.error(this.translate.instant('global_error_fail'));\n        this.isSpinning = false;\n      });\n  }\n\n  cancle() {\n    for (const i in this.validateForm.controls) {\n      this.validateForm.controls[i].reset();\n    }\n    this.getData();\n    this.isConfirmLoading = false;\n  }\n\n  submitForm() {\n    for (const key in this.validateForm.controls) {\n      this.validateForm.controls[key].markAsDirty();\n      this.validateForm.controls[key].updateValueAndValidity();\n    }\n\n    if (this.validateForm.invalid) return;\n    let data = this.validateForm.value;\n\n    data.userId = this.userId;\n    if (data.userBirthday != null)\n      data.userBirthday = new Date(dateTimeToJsonStringNotTime(data.userBirthday));\n    data.userCreatedDate = new Date(dateTimeToJsonStringNotTime(data.userCreatedDate));\n    data.userUpdatedDate = new Date(dateTimeToJsonStringNotTime(data.userUpdatedDate));\n    const params = { ...this.dataOriginal, ...data };\n    this.isConfirmLoading = true;\n    this.authService.Update(params)\n      .subscribe((res: any) => {\n        if (res.code === 1) {\n          this.toast.success(this.translate.instant('global_edit_success'));\n        }\n        else {\n          this.toast.warning(this.translate.instant('global_edit_fail'));\n        }\n        this.isConfirmLoading = false;\n      }, error => {\n        console.log(error)\n        this.toast.error(this.translate.instant('global_error_fail'));\n        this.isConfirmLoading = false;\n      });\n  }\n}\n","<div class=\"head-top marb10\">\n  <div class=\"pull-left\">\n    <div class=\"main-title\">\n      {{'auth_change_password' | translate}}\n    </div>\n  </div>\n  <div class=\"clearfix\"></div>\n</div>\n<div class=\"content\">\n  <form nz-form [formGroup]=\"validateForm\">\n    <nz-form-item>\n      <nz-form-label [nzSpan]=\"4\" nzRequired>{{'auth_password_current' | translate}}</nz-form-label>\n      <nz-form-control [nzSpan]=\"10\" nzDisableAutoTips nzErrorTip=\"{{'auth_password_current_require' | translate}}\">\n        <input nz-input type=\"password\" formControlName=\"password\" [(ngModel)]=\"dataForm.password\"  placeholder=\"{{'auth_password_current_placeholder' | translate}}\" />\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-label [nzSpan]=\"4\" nzRequired>{{'auth_password_new' | translate}}</nz-form-label>\n      <nz-form-control [nzSpan]=\"10\" nzDisableAutoTips nzErrorTip=\"{{'auth_password_new_require' | translate}}\">\n        <input nz-input type=\"password\" formControlName=\"passwordNew\" [(ngModel)]=\"dataForm.passwordNew\" placeholder=\"{{'auth_password_new_placeholder' | translate}}\" (ngModelChange)=\"validateConfirmPassword()\" />\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-label [nzSpan]=\"4\" nzRequired>{{'auth_password_confirm' | translate}}</nz-form-label>\n      <nz-form-control [nzSpan]=\"10\" nzDisableAutoTips [nzErrorTip]=\"passwordErrorTpl\">\n        <input nz-input type=\"password\" formControlName=\"confirm\" [(ngModel)]=\"dataForm.confirm\" placeholder=\"{{'auth_password_confirm_placeholder' | translate}}\" />\n        <ng-template #passwordErrorTpl let-control>\n          <ng-container *ngIf=\"control.hasError('required')\">\n            {{'auth_password_confirm_require' | translate}}\n          </ng-container>\n          <ng-container *ngIf=\"control.hasError('confirm')\">\n            {{'auth_password_confirm_invalid' | translate}}\n          </ng-container>\n        </ng-template>\n      </nz-form-control>\n    </nz-form-item>\n    <nz-form-item>\n      <nz-form-control [nzOffset]=\"4\" [nzSpan]=\"10\">\n        <button nz-button nzType=\"primary\" (click)=\"submitForm()\" [nzLoading]=\"isConfirmLoading\"><i nz-icon nzType=\"save\"></i>{{ 'auth_change_password' | translate}}</button>\n        <button nz-button nzType=\"default\"  (click)=\"cancel()\"><i nz-icon nzType=\"close\"></i>{{'global_cancel' | translate}}</button>\n      </nz-form-control>\n    </nz-form-item>\n  </form>\n</div>\n<loading-page [isPageLoading]=\"isPageLoading\">\n</loading-page>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\n\nconst routes: Routes = [\n  { path: '', component: ProfileComponent },\n  { path: 'profile', component: ProfileComponent },\n  { path: 'change-password', component: ChangePasswordComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProfileRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {ToastrService} from 'ngx-toastr';\nimport {TranslateService } from '@ngx-translate/core';\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { AuthService } from '~/app/core/services/auth/auth.service';\nimport { ChangePasswordDto } from '../../shared/models/auth.model';\nimport {Cache} from '~/app/core/lib/cache';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\n  \n  isPageLoading: boolean = true;\n  isConfirmLoading = false;\n  validateForm!: FormGroup;\n  dataForm: ChangePasswordDto = new ChangePasswordDto();\n\n  constructor(\n    public authService: AuthService, \n    public toast: ToastrService,\n    public translate: TranslateService,\n    private fb: FormBuilder\n    ) { \n    //this.authService.checkToken();\n  }\n\n  ngOnInit() {\n    this.isPageLoading = false;\n   // this.authService.checkToken();\n    this.validateForm = this.fb.group({\n      password: ['', [Validators.required]],\n      passwordNew: ['', [Validators.required]],\n      confirm: ['', [this.confirmValidator]]\n    });\n  }\n  clearData()\n  {\n    this.dataForm = {\n      username: null,\n      password: null,\n      passwordNew: null,\n      confirm: null\n    };\n    for (const i in this.validateForm.controls) {\n      this.validateForm.controls[i].reset();\n    }\n  }\n  submitForm(): void {\n    for (const key in this.validateForm.controls) {\n      this.validateForm.controls[key].markAsDirty();\n      this.validateForm.controls[key].updateValueAndValidity();\n    }\n    \n    if(this.validateForm.invalid) return;\n    \n    let data = this.validateForm.value;\n    data.username = Cache.getCache(\"userCode\");\n    console.log('data:', data);\n    this.isConfirmLoading = true;\n    this.authService.changePassword(data)\n    .subscribe((res: any) => {\n      this.isConfirmLoading = false;\n      if(res.code == 1)\n      {\n        this.toast.success(this.translate.instant('global_edit_success'));\n        this.clearData();\n      }\n      else\n      {\n        this.toast.warning(res.msg);\n      }\n    }, error => {\n      this.isConfirmLoading = false;\n      console.log(error)\n      this.toast.error(this.translate.instant('global_error_fail'));\n    });\n  }\n\n  cancel()\n  {\n    this.clearData();\n  }\n\n  confirmValidator = (control: FormControl): { [s: string]: boolean } => {\n    if (!control.value) {\n      return { error: true, required: true };\n    } else if (control.value !== this.validateForm.controls.passwordNew.value) {\n      return { confirm: true, error: true };\n    }\n    return {};\n  };\n  \n  validateConfirmPassword(): void {\n    setTimeout(() => this.validateForm.controls.confirm.updateValueAndValidity());\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProfileRoutingModule } from './profile-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { NzSwitchModule } from 'ng-zorro-antd/switch';\nimport { NzAvatarModule } from 'ng-zorro-antd/avatar';\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\n\nimport { ProfileComponent } from './profile/profile.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\n\n\n@NgModule({\n  declarations: [ProfileComponent, ChangePasswordComponent],\n  imports: [\n    CommonModule,\n    ProfileRoutingModule,\n    SharedModule,\n    NzButtonModule,\n    NzIconModule,\n    NzInputModule,\n    NzFormModule,\n    NzSelectModule,\n    NzRadioModule,\n    NzDatePickerModule,\n    NzSwitchModule,\n    NzAvatarModule,\n    NzSpinModule\n  ]\n})\nexport class ProfileModule { }\n"]}