{"version":3,"sources":["webpack:///src/app/core/services/manager/workplaces.service.ts","webpack:///node_modules/ng-zorro-antd/__ivy_ngcc__/fesm2015/ng-zorro-antd-tree-select.js","webpack:///node_modules/ng-zorro-antd/__ivy_ngcc__/fesm2015/ng-zorro-antd-core-tree.js","webpack:///node_modules/ng-zorro-antd/__ivy_ngcc__/fesm2015/ng-zorro-antd-core-highlight.js","webpack:///node_modules/ng-zorro-antd/__ivy_ngcc__/fesm2015/ng-zorro-antd-tree.js"],"names":["WorkplacesService","http","router","toast","authService","translate","apiUrl","backEndApiURL","this","getWithExpiry","redirectToLoginPage","page","limit","search","custId","sort","url","concat","Workplaces","get","id","req","dataRequest","post","patch","delete","wpCode","item","type","code","name","wpName","key","wpId","title","expanded","disabled","isLeaf","children","length","status","wpStatus","forEach","element","setWorkplacesTree","wpNode","wpOrder","wpParent","_c0","_c1","NzTreeSelectComponent_ng_template_1_span_6_Template","rf","ctx","ctx_r7","nzNotFoundContent","_c2","NzTreeSelectComponent_ng_template_1_Template","_r9","$event","onExpandedKeysChange","nzTreeClick","emit","updateSelectedNodes","nzTreeCheckBoxChange","setSearchValues","ctx_r0","dropDownPosition","dir","dropdownClassName","noAnimation","nzNoAnimation","nzDropdownStyle","isNotFound","nzNodes","nzMultiple","inputValue","nzHideUnMatched","nzShowIcon","nzCheckable","nzAsyncData","nzShowExpand","nzShowLine","nzExpandedIcon","nzDefaultExpandAll","expandedKeys","value","treeTemplate","nzCheckStrictly","nzVirtualItemSize","nzVirtualMaxBufferPx","nzVirtualMinBufferPx","nzVirtualHeight","NzTreeSelectComponent_ng_container_5_nz_select_item_2_Template","_r19","node_r17","$implicit","removeSelected","ctx_r15","isDisabled","nzDisabled","nzDisplayWith","NzTreeSelectComponent_ng_container_5_nz_select_item_5_Template","ctx_r16","nzMaxTagPlaceholder","selectedNodes","nzMaxTagCount","NzTreeSelectComponent_ng_container_5_Template","ctx_r1","trackValue","NzTreeSelectComponent_nz_select_placeholder_9_Template","ctx_r2","placeHolderDisplay","nzPlaceHolder","NzTreeSelectComponent_nz_select_item_11_Template","ctx_r3","NzTreeSelectComponent_nz_select_arrow_13_Template","NzTreeSelectComponent_nz_select_clear_15_Template","_r21","onClearSelection","NzTreeSelectService","ɵfac","t","ɵNzTreeSelectService_BaseFactory","ɵprov","token","factory","higherOrderServiceFactory","injector","NzTreeSelectComponent","nzTreeService","nzConfigService","renderer","cdr","elementRef","directionality","focusMonitor","super","_nzModuleName","nzId","nzAllowClear","nzDropdownMatchSelectWidth","nzShowSearch","nzOpen","nzSize","nzBackdrop","node","nzOpenChange","nzCleared","nzRemoved","nzExpandChange","isComposing","isDestroy","focused","destroy$","onChange","_value","onTouched","nativeElement","classList","add","addClass","nzTreeTemplate","nzTreeTemplateChild","_a","subscribeSelectionChange","change","pipe","subscribe","direction","detectChanges","monitor","focusOrigin","markForCheck","Promise","resolve","then","closeDropDown","next","complete","changes","nzDropdownClassName","className","trim","isMultiple","Array","isArray","fn","event","keyCode","openDropdown","updateCdkConnectedOverlayStatus","focusOnInput","e","target","preventDefault","keys","updatePosition","isSelected","isChecked","conduct","setSelectedNodeList","nzSelectSearchComponent","focus","isDisableCheckbox","isHalfChecked","isSelectable","map","init","nodes","coerceTreeNodes","isCheckStrictly","initTree","conductCheck","conductSelectedKeys","getCheckedNodeList","getSelectedNodeList","_b","cdkConnectedOverlay","overlayRef","position","connectionPair","originY","contains","matchedKeys","triggerWidth","cdkOverlayOrigin","getBoundingClientRect","width","_index","option","ɵcmp","selectors","contentQueries","dirIndex","_t","first","viewQuery","treeRef","hostVars","hostBindings","trigger","onKeydown","inputs","nzExpandedKeys","outputs","exportAs","features","provide","useFactory","deps","useExisting","multi","decls","vars","consts","template","onClickOutside","onPositionChange","onKeyDownInput","setInputValue","directives","pipes","encapsulation","data","animation","Boolean","prototype","Object","String","NzTreeSelectModule","ɵmod","ɵinj","imports","NzTreeNode","parent","service","_title","level","parentNode","_icon","_children","_isLeaf","_isChecked","_isSelectable","_isDisabled","_isDisableCheckbox","_isExpanded","_isHalfChecked","_isSelected","_isLoading","canHide","isMatched","origin","icon","checked","selectable","disableCheckbox","selected","nodeOptions","s","treeService","push","update","afterValueChange","halfChecked","setChecked","childPos","refreshLevel","n","getChildren","c","getParentNode","child","splice","v","isLoading","filter","setCheckedNodeList","setHalfCheckedNodeList","setExpandedNodeList","setNodeActive","afterRemove","flattenTreeData","rootNodes","getExpandedNodeList","component","isCheckDisabled","isInArray","needle","haystack","indexOf","treeNodeList","expandedKeySet","Set","flattenList","dig","list","treeNode","index","pos","mergedKey","isStart","isEnd","flattenNode","has","isExpanded","NzTreeBaseService","DRAG_SIDE_RANGE","DRAG_MIN_GAP","flattenNodes$","selectedNodeList","expandedNodeList","checkedNodeList","halfCheckedNodeList","matchedNodeList","selectedNode","conductNodeState","every","getIndexOfArray","resultNodesList","isIgnore","findIndex","conductUp","conductDown","some","loopNode","refreshCheckState","refreshDragNode","resetNodeLevel","clientY","top","bottom","height","des","Math","max","targetNode","dragPos","targetParent","isSelectedRootNode","addChildren","tIndex","targetIndex","eventName","emitStructure","assign","dragNode","getSelectedNode","selectedKeys","checkedKeys","getMatchedNodeList","checkStrictly","calc","setExpanded","isMulti","NzTreeHigherOrderServiceToken","NzTreeBase","isArrayOfNzTreeNode","getNode","getTreeNodes","find","getHalfCheckedNodeList","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","NzHighlightPipe","UNIQUE_WRAPPERS","highlightValue","flags","klass","searchValue","RegExp","replace","match","charCodeAt","ɵpipe","pure","NzHighlightModule","NzTreeIndentComponent_span_0_Template","i_r2","nzSelectMode","nzIsStart","nzIsEnd","NzTreeNodeSwitcherComponent_ng_container_0_ng_container_1_ng_container_1_Template","ctx_r5","a0","a1","NzTreeNodeSwitcherComponent_ng_container_0_ng_container_1_Template","ctx_r4","context","NzTreeNodeSwitcherComponent_ng_container_0_Template","_r2","NzTreeNodeSwitcherComponent_ng_container_1_ng_container_1_ng_container_1_i_1_Template","ctx_r8","isSwitcherOpen","NzTreeNodeSwitcherComponent_ng_container_1_ng_container_1_ng_container_1_i_2_Template","NzTreeNodeSwitcherComponent_ng_container_1_ng_container_1_ng_container_1_Template","isShowLineIcon","NzTreeNodeSwitcherComponent_ng_container_1_ng_container_1_Template","ctx_r6","NzTreeNodeSwitcherComponent_ng_container_1_Template","NzTreeNodeSwitcherComponent_ng_template_2_Template","NzTreeNodeTitleComponent_ng_template_0_Template","NzTreeNodeTitleComponent_ng_container_1_span_1_i_2_Template","NzTreeNodeTitleComponent_ng_container_1_span_1_Template","isSwitcherClose","selectMode","NzTreeNodeTitleComponent_ng_container_1_nz_tree_drop_indicator_4_Template","dragPosition","NzTreeNodeTitleComponent_ng_container_1_Template","showIcon","matchedValue","showIndicator","NzTreeNodeBuiltinComponent_nz_tree_node_switcher_1_Template","_r3","clickExpand","nzTreeNode","NzTreeNodeBuiltinComponent_nz_tree_node_checkbox_2_Template","_r5","clickCheckBox","NzTreeComponent_cdk_virtual_scroll_viewport_10_ng_container_2_ng_template_2_Template","_c3","NzTreeComponent_cdk_virtual_scroll_viewport_10_ng_container_2_Template","node_r5","NzTreeComponent_cdk_virtual_scroll_viewport_10_Template","nzFlattenNodes","trackByFlattenNode","NzTreeComponent_div_12_ng_container_2_ng_template_2_Template","NzTreeComponent_div_12_ng_container_2_Template","node_r8","NzTreeComponent_div_12_Template","beforeInit","NzTreeComponent_ng_template_16_Template","_r12","eventTriggerChanged","treeNode_r10","nzDraggable","nzSearchValue","nzBeforeDrop","NzTreeDropIndicatorComponent","style","_changes","renderIndicator","dropPosition","startPosition","display","changeDetection","NzTreeIndentComponent","nzTreeLevel","listOfUnit","currentValue","NzTreeNodeBuiltinCheckboxComponent","attrs","NzTreeNodeSwitcherComponent","isShowSwitchIcon","NzTreeNodeTitleComponent","draggable","canDraggable","NzTreeNodeBuiltinComponent","ngZone","nzClick","nzDblClick","nzContextMenu","nzCheckBoxChange","nzOnDragStart","nzOnDragEnter","nzOnDragOver","nzOnDragLeave","nzOnDrop","nzOnDragEnd","Subject","dragPosClass","eventNext","formatEvent","removeClass","dataTransfer","setData","error","setSelectedNode","run","calcDropPosition","clearDragClass","dropEvent","dragEndEvent","canDrop","dropAndApply","runOutsideAngular","fromEvent","takeUntil","handleDragStart","handleDragEnter","handleDragOver","handleDragLeave","handleDragDrop","handleDragEnd","handDragEvent","onMousedown","displayStyle","dblClick","clickSelect","contextMenu","NzTreeService","NzTreeServiceFactory","higherOrderService","NzTreeComponent","nzBlockNode","nzExpandAll","nzData","nzSelectedKeys","nzCheckedKeys","nzExpandedKeysChange","nzSelectedKeysChange","nzCheckedKeysChange","nzSearchValueChange","HIDDEN_STYLE","overflow","opacity","border","padding","margin","handleNzData","useDefaultExpandedKeys","expandAll","handleCheckedKeys","handleExpandedKeys","handleSelectedKeys","firstChange","handleSearchValue","nzSearchFunc","currentExpandedKeys","handleFlattenNodes","_","expandKeys","conductExpandedKeys","searchFunc","toLowerCase","includes","expandNodeAllParentBySearch","setMatchedNodeList","renderTree","renderTreeProperties","cdkVirtualScrollViewport","NzTreeModule"],"mappings":"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","file":"x","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { environment } from '../../../../environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Constant } from '../../Constant';\nimport { ToastrService } from 'ngx-toastr';\nimport { TranslateService } from '@ngx-translate/core';\nimport { UsersDto, UsersImportDto } from '~/app/shared/models/users.model';\nimport { cloneObject } from '~/app/shared/helper/object/clone.object';\nimport { AuthService } from '~/app/core/services/auth/auth.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\n\nexport class WorkplacesService {\n\n\t//global config\n\tapiUrl = environment.backEndApiURL;\n\n\tconstructor(\n\t\tprivate http: HttpClient,\n\t\tpublic router: Router,\n\t\tpublic toast: ToastrService,\n\t\tpublic authService: AuthService,\n\t\tpublic translate: TranslateService) {\n\t\tlet token = this.authService.getWithExpiry(\"token\");\n\t\tif (!token) {\n\t\t\tthis.authService.redirectToLoginPage();\n\t\t}\n\t}\n\tWorkplaces(page: number, limit: number, search: string, custId: string, sort: string) {\n\t\tconst url = this.apiUrl.concat(Constant.Workplaces) + \"?page=\" + page + \"&limit=\" + limit + \"&search=\" + search + \"&custId=\" + custId + \"&sort=\" + sort;\n\t\treturn this.http.get<any>(url);\n\t}\n\n\tGetOne(id: string) {\n\t\tconst url = this.apiUrl.concat(Constant.Workplaces) + \"/\" + id;\n\t\treturn this.http.get<any>(url);\n\t}\n\n\tCreate(req: any) {\n\t\tconst url = this.apiUrl.concat(Constant.Workplaces) + \"/create\";\n\t\tlet dataRequest = cloneObject(req)\n\t\treturn this.http.post<any>(url, dataRequest);\n\t}\n\n\tUpdate(id: string, req: any) {\n\t\tconst url = this.apiUrl.concat(Constant.Workplaces) + \"/\" + id;\n\t\tlet dataRequest = cloneObject(req)\n\t\treturn this.http.patch<any>(url, dataRequest);\n\t}\n\n\tDelete(id: string) {\n\t\tconst url = this.apiUrl.concat(Constant.Workplaces) + \"/\" + id;\n\t\tlet dataRequest = cloneObject({ id: id })\n\t\treturn this.http.delete<any>(url, dataRequest);\n\t}\n\n\tExist(req: any[]) {\n\t\tconst url = this.apiUrl.concat(Constant.Workplaces) + \"/checkExist\";\n\t\tlet dataRequest = cloneObject(req)\n\t\treturn this.http.post<any>(url, dataRequest);\n\t}\n\n\tImport(req: any[]) {\n\t\tconst url = this.apiUrl.concat(Constant.Workplaces) + \"/import\";\n\t\tlet dataRequest = cloneObject(req)\n\t\treturn this.http.post<any>(url, dataRequest);\n\t}\n\n\tGetListWorkplaces() {\n\t\tconst url = this.apiUrl.concat(Constant.Workplaces) + \"/getListWorkplaces\";\n\t\treturn this.http.get<any>(url);\n\t}\n\n\tGetListWorkplacesAsTree() {\n\t\tconst url = this.apiUrl.concat(Constant.Workplaces) + \"/getListWorkplacesAsTree\";\n\t\treturn this.http.get<any>(url);\n\t}\n\n\tcheckWorkplaceCode(wpCode: string) {\n\t\tconst url = this.apiUrl.concat(Constant.Workplaces) + \"/checkWorkplaceCode?wpCode=\" + wpCode;\n\t\treturn this.http.get<any>(url);\n\t}\n\n\tsetWorkplacesTree(item: any, type: string) {\n\t\titem.code = item.wpCode;\n\t\titem.name = item.wpName;\n\t\titem.key = item.wpId;\n\t\titem.title = item.wpName;\n\t\titem.expanded = true;\n\t\titem.disabled = false;\n\t\titem.isLeaf = item.children && item.children.length > 0 ? false : true;\n\t\titem.status = item.wpStatus;\n\t\tif (item.children && item.children.length > 0) {\n\t\t\tif(type === 'DISABLED') item.disabled = true;\n\t\t\titem.children.forEach((element) => {\n\t\t\t\tthis.setWorkplacesTree(element, type);\n\t\t\t});\n\t\t} else {\n\t\t  item.children = null;\n\t\t}\n\t\tdelete item.wpCode;\n\t\tdelete item.wpName;\n\t\tdelete item.wpId;\n\t\tdelete item.wpStatus;\n\t\tdelete item.wpNode;\n\t\tdelete item.wpOrder;\n\t\tdelete item.wpParent;\n\t}\n}\n","import { __decorate, __metadata } from 'tslib';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { TAB, ESCAPE, BACKSPACE } from '@angular/cdk/keycodes';\nimport { CdkOverlayOrigin, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { Injectable, EventEmitter, Component, Self, Injector, forwardRef, Renderer2, ChangeDetectorRef, ElementRef, Optional, Host, Input, Output, ViewChild, ContentChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { slideMotion } from 'ng-zorro-antd/core/animation';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzNoAnimationDirective, NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { reqAnimFrame } from 'ng-zorro-antd/core/polyfill';\nimport { NzTreeBaseService, NzTreeBase, NzTreeHigherOrderServiceToken } from 'ng-zorro-antd/core/tree';\nimport { isNotNil, InputBoolean } from 'ng-zorro-antd/core/util';\nimport { NzSelectSearchComponent, NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzTreeModule } from 'ng-zorro-antd/tree';\nimport { Subject, merge, of } from 'rxjs';\nimport { takeUntil, tap, filter } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { NzOverlayModule } from 'ng-zorro-antd/core/overlay';\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from 'ng-zorro-antd/core/no-animation';\nimport * as ɵngcc5 from '@angular/cdk/overlay';\nimport * as ɵngcc6 from 'ng-zorro-antd/core/overlay';\nimport * as ɵngcc7 from '@angular/common';\nimport * as ɵngcc8 from 'ng-zorro-antd/select';\nimport * as ɵngcc9 from 'ng-zorro-antd/tree';\nimport * as ɵngcc10 from 'ng-zorro-antd/empty';\n\nconst _c0 = [\"nzTreeTemplate\"];\nconst _c1 = [\"treeRef\"];\nfunction NzTreeSelectComponent_ng_template_1_span_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 11);\n    ɵngcc0.ɵɵtext(1, \"\\n          \");\n    ɵngcc0.ɵɵelement(2, \"nz-embed-empty\", 12);\n    ɵngcc0.ɵɵtext(3, \"\\n        \");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"nzComponentName\", \"tree-select\")(\"specificContent\", ctx_r7.nzNotFoundContent);\n} }\nconst _c2 = function () { return []; };\nfunction NzTreeSelectComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵtext(0, \"\\n      \");\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtext(2, \"\\n        \");\n    ɵngcc0.ɵɵelementStart(3, \"nz-tree\", 8, 9);\n    ɵngcc0.ɵɵlistener(\"nzExpandChange\", function NzTreeSelectComponent_ng_template_1_Template_nz_tree_nzExpandChange_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.onExpandedKeysChange($event); })(\"nzClick\", function NzTreeSelectComponent_ng_template_1_Template_nz_tree_nzClick_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.nzTreeClick.emit($event); })(\"nzCheckedKeysChange\", function NzTreeSelectComponent_ng_template_1_Template_nz_tree_nzCheckedKeysChange_3_listener() { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.updateSelectedNodes(); })(\"nzSelectedKeysChange\", function NzTreeSelectComponent_ng_template_1_Template_nz_tree_nzSelectedKeysChange_3_listener() { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.updateSelectedNodes(); })(\"nzCheckBoxChange\", function NzTreeSelectComponent_ng_template_1_Template_nz_tree_nzCheckBoxChange_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.nzTreeCheckBoxChange.emit($event); })(\"nzSearchValueChange\", function NzTreeSelectComponent_ng_template_1_Template_nz_tree_nzSearchValueChange_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.setSearchValues($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(5, \"\\n        \");\n    ɵngcc0.ɵɵtemplate(6, NzTreeSelectComponent_ng_template_1_span_6_Template, 4, 2, \"span\", 10);\n    ɵngcc0.ɵɵtext(7, \"\\n      \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(8, \"\\n    \");\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"ant-select-dropdown-placement-bottomLeft\", ctx_r0.dropDownPosition === \"bottom\")(\"ant-select-dropdown-placement-topLeft\", ctx_r0.dropDownPosition === \"top\")(\"ant-tree-select-dropdown-rtl\", ctx_r0.dir === \"rtl\");\n    ɵngcc0.ɵɵproperty(\"@slideMotion\", \"enter\")(\"ngClass\", ctx_r0.dropdownClassName)(\"@.disabled\", ctx_r0.noAnimation == null ? null : ctx_r0.noAnimation.nzNoAnimation)(\"nzNoAnimation\", ctx_r0.noAnimation == null ? null : ctx_r0.noAnimation.nzNoAnimation)(\"dir\", ctx_r0.dir)(\"ngStyle\", ctx_r0.nzDropdownStyle);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"hidden\", ctx_r0.isNotFound)(\"nzData\", ctx_r0.nzNodes)(\"nzMultiple\", ctx_r0.nzMultiple)(\"nzSearchValue\", ctx_r0.inputValue)(\"nzHideUnMatched\", ctx_r0.nzHideUnMatched)(\"nzShowIcon\", ctx_r0.nzShowIcon)(\"nzCheckable\", ctx_r0.nzCheckable)(\"nzAsyncData\", ctx_r0.nzAsyncData)(\"nzShowExpand\", ctx_r0.nzShowExpand)(\"nzShowLine\", ctx_r0.nzShowLine)(\"nzExpandedIcon\", ctx_r0.nzExpandedIcon)(\"nzExpandAll\", ctx_r0.nzDefaultExpandAll)(\"nzExpandedKeys\", ctx_r0.expandedKeys)(\"nzCheckedKeys\", ctx_r0.nzCheckable ? ctx_r0.value : ɵngcc0.ɵɵpureFunction0(34, _c2))(\"nzSelectedKeys\", !ctx_r0.nzCheckable ? ctx_r0.value : ɵngcc0.ɵɵpureFunction0(35, _c2))(\"nzTreeTemplate\", ctx_r0.treeTemplate)(\"nzCheckStrictly\", ctx_r0.nzCheckStrictly)(\"nzVirtualItemSize\", ctx_r0.nzVirtualItemSize)(\"nzVirtualMaxBufferPx\", ctx_r0.nzVirtualMaxBufferPx)(\"nzVirtualMinBufferPx\", ctx_r0.nzVirtualMinBufferPx)(\"nzVirtualHeight\", ctx_r0.nzVirtualHeight);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.nzNodes.length === 0 || ctx_r0.isNotFound);\n} }\nfunction NzTreeSelectComponent_ng_container_5_nz_select_item_2_Template(rf, ctx) { if (rf & 1) {\n    const _r19 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"nz-select-item\", 15);\n    ɵngcc0.ɵɵlistener(\"delete\", function NzTreeSelectComponent_ng_container_5_nz_select_item_2_Template_nz_select_item_delete_0_listener() { ɵngcc0.ɵɵrestoreView(_r19); const node_r17 = ctx.$implicit; const ctx_r18 = ɵngcc0.ɵɵnextContext(2); return ctx_r18.removeSelected(node_r17, true); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const node_r17 = ctx.$implicit;\n    const ctx_r15 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"deletable\", true)(\"disabled\", node_r17.isDisabled || ctx_r15.nzDisabled)(\"label\", ctx_r15.nzDisplayWith(node_r17));\n} }\nfunction NzTreeSelectComponent_ng_container_5_nz_select_item_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nz-select-item\", 16);\n    ɵngcc0.ɵɵpipe(1, \"slice\");\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"contentTemplateOutlet\", ctx_r16.nzMaxTagPlaceholder)(\"contentTemplateOutletContext\", ɵngcc0.ɵɵpipeBind2(1, 5, ctx_r16.selectedNodes, ctx_r16.nzMaxTagCount))(\"deletable\", false)(\"disabled\", false)(\"label\", \"+ \" + (ctx_r16.selectedNodes.length - ctx_r16.nzMaxTagCount) + \" ...\");\n} }\nfunction NzTreeSelectComponent_ng_container_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1, \"\\n        \");\n    ɵngcc0.ɵɵtemplate(2, NzTreeSelectComponent_ng_container_5_nz_select_item_2_Template, 1, 3, \"nz-select-item\", 13);\n    ɵngcc0.ɵɵpipe(3, \"slice\");\n    ɵngcc0.ɵɵtext(4, \"\\n\\n        \");\n    ɵngcc0.ɵɵtemplate(5, NzTreeSelectComponent_ng_container_5_nz_select_item_5_Template, 2, 8, \"nz-select-item\", 14);\n    ɵngcc0.ɵɵtext(6, \"\\n      \");\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind3(3, 3, ctx_r1.selectedNodes, 0, ctx_r1.nzMaxTagCount))(\"ngForTrackBy\", ctx_r1.trackValue);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.selectedNodes.length > ctx_r1.nzMaxTagCount);\n} }\nfunction NzTreeSelectComponent_nz_select_placeholder_9_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nz-select-placeholder\", 17);\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"display\", ctx_r2.placeHolderDisplay);\n    ɵngcc0.ɵɵproperty(\"placeholder\", ctx_r2.nzPlaceHolder);\n} }\nfunction NzTreeSelectComponent_nz_select_item_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nz-select-item\", 18);\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"deletable\", false)(\"disabled\", false)(\"label\", ctx_r3.nzDisplayWith(ctx_r3.selectedNodes[0]));\n} }\nfunction NzTreeSelectComponent_nz_select_arrow_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nz-select-arrow\");\n} }\nfunction NzTreeSelectComponent_nz_select_clear_15_Template(rf, ctx) { if (rf & 1) {\n    const _r21 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"nz-select-clear\", 19);\n    ɵngcc0.ɵɵlistener(\"clear\", function NzTreeSelectComponent_nz_select_clear_15_Template_nz_select_clear_clear_0_listener() { ɵngcc0.ɵɵrestoreView(_r21); const ctx_r20 = ɵngcc0.ɵɵnextContext(); return ctx_r20.onClearSelection(); });\n    ɵngcc0.ɵɵelementEnd();\n} }\nclass NzTreeSelectService extends NzTreeBaseService {\n}\nNzTreeSelectService.ɵfac = function NzTreeSelectService_Factory(t) { return ɵNzTreeSelectService_BaseFactory(t || NzTreeSelectService); };\nNzTreeSelectService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NzTreeSelectService, factory: NzTreeSelectService.ɵfac });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nfunction higherOrderServiceFactory(injector) {\n    return injector.get(NzTreeSelectService);\n}\nconst NZ_CONFIG_MODULE_NAME = 'treeSelect';\nconst TREE_SELECT_DEFAULT_CLASS = 'ant-select-dropdown ant-select-tree-dropdown';\nclass NzTreeSelectComponent extends NzTreeBase {\n    constructor(nzTreeService, nzConfigService, renderer, cdr, elementRef, directionality, focusMonitor, noAnimation) {\n        super(nzTreeService);\n        this.nzConfigService = nzConfigService;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.elementRef = elementRef;\n        this.directionality = directionality;\n        this.focusMonitor = focusMonitor;\n        this.noAnimation = noAnimation;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n        this.nzId = null;\n        this.nzAllowClear = true;\n        this.nzShowExpand = true;\n        this.nzShowLine = false;\n        this.nzDropdownMatchSelectWidth = true;\n        this.nzCheckable = false;\n        this.nzHideUnMatched = false;\n        this.nzShowIcon = false;\n        this.nzShowSearch = false;\n        this.nzDisabled = false;\n        this.nzAsyncData = false;\n        this.nzMultiple = false;\n        this.nzDefaultExpandAll = false;\n        this.nzCheckStrictly = false;\n        this.nzVirtualItemSize = 28;\n        this.nzVirtualMaxBufferPx = 500;\n        this.nzVirtualMinBufferPx = 28;\n        this.nzVirtualHeight = null;\n        this.nzNodes = [];\n        this.nzOpen = false;\n        this.nzSize = 'default';\n        this.nzPlaceHolder = '';\n        this.nzDropdownStyle = null;\n        this.nzBackdrop = false;\n        this.nzDisplayWith = (node) => node.title;\n        this.nzMaxTagPlaceholder = null;\n        this.nzOpenChange = new EventEmitter();\n        this.nzCleared = new EventEmitter();\n        this.nzRemoved = new EventEmitter();\n        this.nzExpandChange = new EventEmitter();\n        this.nzTreeClick = new EventEmitter();\n        this.nzTreeCheckBoxChange = new EventEmitter();\n        this.dropdownClassName = TREE_SELECT_DEFAULT_CLASS;\n        this.isComposing = false;\n        this.isDestroy = true;\n        this.isNotFound = false;\n        this.focused = false;\n        this.inputValue = '';\n        this.dropDownPosition = 'bottom';\n        this.selectedNodes = [];\n        this.expandedKeys = [];\n        this.value = [];\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n        this.onChange = _value => { };\n        this.onTouched = () => { };\n        // TODO: move to host after View Engine deprecation\n        this.elementRef.nativeElement.classList.add('ant-select');\n        this.renderer.addClass(this.elementRef.nativeElement, 'ant-select');\n        this.renderer.addClass(this.elementRef.nativeElement, 'ant-tree-select');\n    }\n    set nzExpandedKeys(value) {\n        this.expandedKeys = value;\n    }\n    get nzExpandedKeys() {\n        return this.expandedKeys;\n    }\n    get treeTemplate() {\n        return this.nzTreeTemplate || this.nzTreeTemplateChild;\n    }\n    get placeHolderDisplay() {\n        return this.inputValue || this.isComposing || this.selectedNodes.length ? 'none' : 'block';\n    }\n    get isMultiple() {\n        return this.nzMultiple || this.nzCheckable;\n    }\n    ngOnInit() {\n        var _a;\n        this.isDestroy = false;\n        this.subscribeSelectionChange();\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n        this.focusMonitor\n            .monitor(this.elementRef, true)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                this.focused = false;\n                this.cdr.markForCheck();\n                Promise.resolve().then(() => {\n                    this.onTouched();\n                });\n            }\n            else {\n                this.focused = true;\n                this.cdr.markForCheck();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this.isDestroy = true;\n        this.closeDropDown();\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    isComposingChange(isComposing) {\n        this.isComposing = isComposing;\n    }\n    setDisabledState(isDisabled) {\n        this.nzDisabled = isDisabled;\n        this.closeDropDown();\n    }\n    ngOnChanges(changes) {\n        const { nzNodes, nzDropdownClassName } = changes;\n        if (nzNodes) {\n            this.updateSelectedNodes(true);\n        }\n        if (nzDropdownClassName) {\n            const className = this.nzDropdownClassName && this.nzDropdownClassName.trim();\n            this.dropdownClassName = className ? `${TREE_SELECT_DEFAULT_CLASS} ${className}` : TREE_SELECT_DEFAULT_CLASS;\n        }\n    }\n    writeValue(value) {\n        if (isNotNil(value)) {\n            if (this.isMultiple && Array.isArray(value)) {\n                this.value = value;\n            }\n            else {\n                this.value = [value];\n            }\n            this.updateSelectedNodes(true);\n        }\n        else {\n            this.value = [];\n            this.selectedNodes.forEach(node => {\n                this.removeSelected(node, false);\n            });\n            this.selectedNodes = [];\n        }\n        this.cdr.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    onKeydown(event) {\n        if (this.nzDisabled) {\n            return;\n        }\n        switch (event.keyCode) {\n            case ESCAPE:\n                /**\n                 * Skip the ESCAPE processing, it will be handled in {@link onOverlayKeyDown}.\n                 */\n                break;\n            case TAB:\n                this.closeDropDown();\n                break;\n            default:\n                if (!this.nzOpen) {\n                    this.openDropdown();\n                }\n        }\n    }\n    trigger() {\n        if (this.nzDisabled || (!this.nzDisabled && this.nzOpen)) {\n            this.closeDropDown();\n        }\n        else {\n            this.openDropdown();\n        }\n    }\n    openDropdown() {\n        if (!this.nzDisabled) {\n            this.nzOpen = true;\n            this.nzOpenChange.emit(this.nzOpen);\n            this.updateCdkConnectedOverlayStatus();\n            if (this.nzShowSearch || this.isMultiple) {\n                this.focusOnInput();\n            }\n        }\n    }\n    closeDropDown() {\n        this.onTouched();\n        this.nzOpen = false;\n        this.inputValue = '';\n        this.isNotFound = false;\n        this.nzOpenChange.emit(this.nzOpen);\n        this.cdr.markForCheck();\n    }\n    onKeyDownInput(e) {\n        const keyCode = e.keyCode;\n        const eventTarget = e.target;\n        if (this.isMultiple && !eventTarget.value && keyCode === BACKSPACE) {\n            e.preventDefault();\n            if (this.selectedNodes.length) {\n                const removeNode = this.selectedNodes[this.selectedNodes.length - 1];\n                this.removeSelected(removeNode);\n            }\n        }\n    }\n    onExpandedKeysChange(value) {\n        this.nzExpandChange.emit(value);\n        this.expandedKeys = [...value.keys];\n    }\n    setInputValue(value) {\n        this.inputValue = value;\n        this.updatePosition();\n    }\n    removeSelected(node, emit = true) {\n        node.isSelected = false;\n        node.isChecked = false;\n        if (this.nzCheckable) {\n            this.nzTreeService.conduct(node, this.nzCheckStrictly);\n        }\n        else {\n            this.nzTreeService.setSelectedNodeList(node, this.nzMultiple);\n        }\n        if (emit) {\n            this.nzRemoved.emit(node);\n        }\n    }\n    focusOnInput() {\n        if (this.nzSelectSearchComponent) {\n            this.nzSelectSearchComponent.focus();\n        }\n    }\n    subscribeSelectionChange() {\n        merge(this.nzTreeClick.pipe(tap((event) => {\n            const node = event.node;\n            if (this.nzCheckable && !node.isDisabled && !node.isDisableCheckbox) {\n                node.isChecked = !node.isChecked;\n                node.isHalfChecked = false;\n                if (!this.nzCheckStrictly) {\n                    this.nzTreeService.conduct(node);\n                }\n            }\n            if (this.nzCheckable) {\n                node.isSelected = false;\n            }\n        }), filter((event) => {\n            const node = event.node;\n            return this.nzCheckable ? !node.isDisabled && !node.isDisableCheckbox : !node.isDisabled && node.isSelectable;\n        })), this.nzCheckable ? this.nzTreeCheckBoxChange : of(), this.nzCleared, this.nzRemoved)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => {\n            this.updateSelectedNodes();\n            const value = this.selectedNodes.map(node => node.key);\n            this.value = [...value];\n            if (this.nzShowSearch || this.isMultiple) {\n                this.inputValue = '';\n                this.isNotFound = false;\n            }\n            if (this.isMultiple) {\n                this.onChange(value);\n                this.focusOnInput();\n                this.updatePosition();\n            }\n            else {\n                this.closeDropDown();\n                this.onChange(value.length ? value[0] : null);\n            }\n        });\n    }\n    updateSelectedNodes(init = false) {\n        if (init) {\n            const nodes = this.coerceTreeNodes(this.nzNodes);\n            this.nzTreeService.isMultiple = this.isMultiple;\n            this.nzTreeService.isCheckStrictly = this.nzCheckStrictly;\n            this.nzTreeService.initTree(nodes);\n            if (this.nzCheckable) {\n                this.nzTreeService.conductCheck(this.value, this.nzCheckStrictly);\n            }\n            else {\n                this.nzTreeService.conductSelectedKeys(this.value, this.isMultiple);\n            }\n        }\n        this.selectedNodes = [...(this.nzCheckable ? this.getCheckedNodeList() : this.getSelectedNodeList())];\n    }\n    updatePosition() {\n        reqAnimFrame(() => {\n            var _a, _b;\n            (_b = (_a = this.cdkConnectedOverlay) === null || _a === void 0 ? void 0 : _a.overlayRef) === null || _b === void 0 ? void 0 : _b.updatePosition();\n        });\n    }\n    onPositionChange(position) {\n        this.dropDownPosition = position.connectionPair.originY;\n    }\n    onClearSelection() {\n        this.selectedNodes.forEach(node => {\n            this.removeSelected(node, false);\n        });\n        this.nzCleared.emit();\n    }\n    onClickOutside(event) {\n        if (!this.elementRef.nativeElement.contains(event.target)) {\n            this.closeDropDown();\n        }\n    }\n    setSearchValues($event) {\n        Promise.resolve().then(() => {\n            this.isNotFound = (this.nzShowSearch || this.isMultiple) && !!this.inputValue && $event.matchedKeys.length === 0;\n        });\n    }\n    updateCdkConnectedOverlayStatus() {\n        this.triggerWidth = this.cdkOverlayOrigin.elementRef.nativeElement.getBoundingClientRect().width;\n    }\n    trackValue(_index, option) {\n        return option.key;\n    }\n}\nNzTreeSelectComponent.ɵfac = function NzTreeSelectComponent_Factory(t) { return new (t || NzTreeSelectComponent)(ɵngcc0.ɵɵdirectiveInject(NzTreeSelectService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NzNoAnimationDirective, 9)); };\nNzTreeSelectComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzTreeSelectComponent, selectors: [[\"nz-tree-select\"]], contentQueries: function NzTreeSelectComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _c0, 3);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nzTreeTemplateChild = _t.first);\n    } }, viewQuery: function NzTreeSelectComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(NzSelectSearchComponent, 1);\n        ɵngcc0.ɵɵviewQuery(_c1, 1);\n        ɵngcc0.ɵɵviewQuery(CdkOverlayOrigin, 3);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nzSelectSearchComponent = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.treeRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cdkOverlayOrigin = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cdkConnectedOverlay = _t.first);\n    } }, hostVars: 22, hostBindings: function NzTreeSelectComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NzTreeSelectComponent_click_HostBindingHandler() { return ctx.trigger(); })(\"keydown\", function NzTreeSelectComponent_keydown_HostBindingHandler($event) { return ctx.onKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ant-select-lg\", ctx.nzSize === \"large\")(\"ant-select-rtl\", ctx.dir === \"rtl\")(\"ant-select-sm\", ctx.nzSize === \"small\")(\"ant-select-disabled\", ctx.nzDisabled)(\"ant-select-single\", !ctx.isMultiple)(\"ant-select-show-arrow\", !ctx.isMultiple)(\"ant-select-show-search\", !ctx.isMultiple)(\"ant-select-multiple\", ctx.isMultiple)(\"ant-select-allow-clear\", ctx.nzAllowClear)(\"ant-select-open\", ctx.nzOpen)(\"ant-select-focused\", ctx.nzOpen || ctx.focused);\n    } }, inputs: { nzId: \"nzId\", nzAllowClear: \"nzAllowClear\", nzShowExpand: \"nzShowExpand\", nzShowLine: \"nzShowLine\", nzDropdownMatchSelectWidth: \"nzDropdownMatchSelectWidth\", nzCheckable: \"nzCheckable\", nzHideUnMatched: \"nzHideUnMatched\", nzShowIcon: \"nzShowIcon\", nzShowSearch: \"nzShowSearch\", nzDisabled: \"nzDisabled\", nzAsyncData: \"nzAsyncData\", nzMultiple: \"nzMultiple\", nzDefaultExpandAll: \"nzDefaultExpandAll\", nzCheckStrictly: \"nzCheckStrictly\", nzVirtualItemSize: \"nzVirtualItemSize\", nzVirtualMaxBufferPx: \"nzVirtualMaxBufferPx\", nzVirtualMinBufferPx: \"nzVirtualMinBufferPx\", nzVirtualHeight: \"nzVirtualHeight\", nzNodes: \"nzNodes\", nzOpen: \"nzOpen\", nzSize: \"nzSize\", nzPlaceHolder: \"nzPlaceHolder\", nzDropdownStyle: \"nzDropdownStyle\", nzBackdrop: \"nzBackdrop\", nzDisplayWith: \"nzDisplayWith\", nzMaxTagPlaceholder: \"nzMaxTagPlaceholder\", nzExpandedKeys: \"nzExpandedKeys\", nzExpandedIcon: \"nzExpandedIcon\", nzNotFoundContent: \"nzNotFoundContent\", nzDropdownClassName: \"nzDropdownClassName\", nzMaxTagCount: \"nzMaxTagCount\", nzTreeTemplate: \"nzTreeTemplate\" }, outputs: { nzOpenChange: \"nzOpenChange\", nzCleared: \"nzCleared\", nzRemoved: \"nzRemoved\", nzExpandChange: \"nzExpandChange\", nzTreeClick: \"nzTreeClick\", nzTreeCheckBoxChange: \"nzTreeCheckBoxChange\" }, exportAs: [\"nzTreeSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            NzTreeSelectService,\n            {\n                provide: NzTreeHigherOrderServiceToken,\n                useFactory: higherOrderServiceFactory,\n                deps: [[new Self(), Injector]]\n            },\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => NzTreeSelectComponent),\n                multi: true\n            }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], decls: 18, vars: 17, consts: [[\"cdkConnectedOverlay\", \"\", \"nzConnectedOverlay\", \"\", 3, \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayWidth\", \"overlayOutsideClick\", \"detach\", \"positionChange\"], [\"cdkOverlayOrigin\", \"\", 1, \"ant-select-selector\"], [4, \"ngIf\"], [3, \"nzId\", \"showInput\", \"value\", \"mirrorSync\", \"disabled\", \"focusTrigger\", \"keydown\", \"isComposingChange\", \"valueChange\"], [3, \"placeholder\", \"display\", 4, \"ngIf\"], [3, \"deletable\", \"disabled\", \"label\", 4, \"ngIf\"], [3, \"clear\", 4, \"ngIf\"], [3, \"ngClass\", \"nzNoAnimation\", \"dir\", \"ngStyle\"], [\"nzNoAnimation\", \"\", \"nzSelectMode\", \"\", \"nzBlockNode\", \"\", 3, \"hidden\", \"nzData\", \"nzMultiple\", \"nzSearchValue\", \"nzHideUnMatched\", \"nzShowIcon\", \"nzCheckable\", \"nzAsyncData\", \"nzShowExpand\", \"nzShowLine\", \"nzExpandedIcon\", \"nzExpandAll\", \"nzExpandedKeys\", \"nzCheckedKeys\", \"nzSelectedKeys\", \"nzTreeTemplate\", \"nzCheckStrictly\", \"nzVirtualItemSize\", \"nzVirtualMaxBufferPx\", \"nzVirtualMinBufferPx\", \"nzVirtualHeight\", \"nzExpandChange\", \"nzClick\", \"nzCheckedKeysChange\", \"nzSelectedKeysChange\", \"nzCheckBoxChange\", \"nzSearchValueChange\"], [\"treeRef\", \"\"], [\"class\", \"ant-select-not-found\", 4, \"ngIf\"], [1, \"ant-select-not-found\"], [3, \"nzComponentName\", \"specificContent\"], [3, \"deletable\", \"disabled\", \"label\", \"delete\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"contentTemplateOutlet\", \"contentTemplateOutletContext\", \"deletable\", \"disabled\", \"label\", 4, \"ngIf\"], [3, \"deletable\", \"disabled\", \"label\", \"delete\"], [3, \"contentTemplateOutlet\", \"contentTemplateOutletContext\", \"deletable\", \"disabled\", \"label\"], [3, \"placeholder\"], [3, \"deletable\", \"disabled\", \"label\"], [3, \"clear\"]], template: function NzTreeSelectComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtext(0, \"\\n    \");\n        ɵngcc0.ɵɵtemplate(1, NzTreeSelectComponent_ng_template_1_Template, 9, 36, \"ng-template\", 0);\n        ɵngcc0.ɵɵlistener(\"overlayOutsideClick\", function NzTreeSelectComponent_Template_ng_template_overlayOutsideClick_1_listener($event) { return ctx.onClickOutside($event); })(\"detach\", function NzTreeSelectComponent_Template_ng_template_detach_1_listener() { return ctx.closeDropDown(); })(\"positionChange\", function NzTreeSelectComponent_Template_ng_template_positionChange_1_listener($event) { return ctx.onPositionChange($event); });\n        ɵngcc0.ɵɵtext(2, \"\\n\\n    \");\n        ɵngcc0.ɵɵelementStart(3, \"div\", 1);\n        ɵngcc0.ɵɵtext(4, \"\\n      \");\n        ɵngcc0.ɵɵtemplate(5, NzTreeSelectComponent_ng_container_5_Template, 7, 7, \"ng-container\", 2);\n        ɵngcc0.ɵɵtext(6, \"\\n\\n      \");\n        ɵngcc0.ɵɵelementStart(7, \"nz-select-search\", 3);\n        ɵngcc0.ɵɵlistener(\"keydown\", function NzTreeSelectComponent_Template_nz_select_search_keydown_7_listener($event) { return ctx.onKeyDownInput($event); })(\"isComposingChange\", function NzTreeSelectComponent_Template_nz_select_search_isComposingChange_7_listener($event) { return ctx.isComposing = $event; })(\"valueChange\", function NzTreeSelectComponent_Template_nz_select_search_valueChange_7_listener($event) { return ctx.setInputValue($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtext(8, \"\\n\\n      \");\n        ɵngcc0.ɵɵtemplate(9, NzTreeSelectComponent_nz_select_placeholder_9_Template, 1, 3, \"nz-select-placeholder\", 4);\n        ɵngcc0.ɵɵtext(10, \"\\n\\n      \");\n        ɵngcc0.ɵɵtemplate(11, NzTreeSelectComponent_nz_select_item_11_Template, 1, 3, \"nz-select-item\", 5);\n        ɵngcc0.ɵɵtext(12, \"\\n\\n      \");\n        ɵngcc0.ɵɵtemplate(13, NzTreeSelectComponent_nz_select_arrow_13_Template, 1, 0, \"nz-select-arrow\", 2);\n        ɵngcc0.ɵɵtext(14, \"\\n\\n      \");\n        ɵngcc0.ɵɵtemplate(15, NzTreeSelectComponent_nz_select_clear_15_Template, 1, 0, \"nz-select-clear\", 6);\n        ɵngcc0.ɵɵtext(16, \"\\n    \");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtext(17, \"\\n  \");\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayHasBackdrop\", ctx.nzBackdrop)(\"cdkConnectedOverlayOrigin\", ctx.cdkOverlayOrigin)(\"cdkConnectedOverlayOpen\", ctx.nzOpen)(\"cdkConnectedOverlayTransformOriginOn\", \".ant-select-tree-dropdown\")(\"cdkConnectedOverlayMinWidth\", ctx.nzDropdownMatchSelectWidth ? null : ctx.triggerWidth)(\"cdkConnectedOverlayWidth\", ctx.nzDropdownMatchSelectWidth ? ctx.triggerWidth : null);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isMultiple);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"nzId\", ctx.nzId)(\"showInput\", ctx.nzShowSearch)(\"value\", ctx.inputValue)(\"mirrorSync\", ctx.isMultiple)(\"disabled\", ctx.nzDisabled)(\"focusTrigger\", ctx.nzOpen);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzPlaceHolder && ctx.selectedNodes.length === 0);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isMultiple && ctx.selectedNodes.length === 1 && !ctx.isComposing && ctx.inputValue === \"\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isMultiple);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzAllowClear && !ctx.nzDisabled && ctx.selectedNodes.length);\n    } }, directives: [ɵngcc5.CdkConnectedOverlay, ɵngcc6.NzConnectedOverlayDirective, ɵngcc5.CdkOverlayOrigin, ɵngcc7.NgIf, ɵngcc8.NzSelectSearchComponent, ɵngcc7.NgClass, ɵngcc4.NzNoAnimationDirective, ɵngcc2.Dir, ɵngcc7.NgStyle, ɵngcc9.NzTreeComponent, ɵngcc10.NzEmbedEmptyComponent, ɵngcc7.NgForOf, ɵngcc8.NzSelectItemComponent, ɵngcc8.NzSelectPlaceholderComponent, ɵngcc8.NzSelectArrowComponent, ɵngcc8.NzSelectClearComponent], pipes: [ɵngcc7.SlicePipe], encapsulation: 2, data: { animation: [slideMotion] } });\nNzTreeSelectComponent.ctorParameters = () => [\n    { type: NzTreeSelectService },\n    { type: NzConfigService },\n    { type: Renderer2 },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: FocusMonitor },\n    { type: NzNoAnimationDirective, decorators: [{ type: Host }, { type: Optional }] }\n];\nNzTreeSelectComponent.propDecorators = {\n    nzId: [{ type: Input }],\n    nzAllowClear: [{ type: Input }],\n    nzShowExpand: [{ type: Input }],\n    nzShowLine: [{ type: Input }],\n    nzDropdownMatchSelectWidth: [{ type: Input }],\n    nzCheckable: [{ type: Input }],\n    nzHideUnMatched: [{ type: Input }],\n    nzShowIcon: [{ type: Input }],\n    nzShowSearch: [{ type: Input }],\n    nzDisabled: [{ type: Input }],\n    nzAsyncData: [{ type: Input }],\n    nzMultiple: [{ type: Input }],\n    nzDefaultExpandAll: [{ type: Input }],\n    nzCheckStrictly: [{ type: Input }],\n    nzVirtualItemSize: [{ type: Input }],\n    nzVirtualMaxBufferPx: [{ type: Input }],\n    nzVirtualMinBufferPx: [{ type: Input }],\n    nzVirtualHeight: [{ type: Input }],\n    nzExpandedIcon: [{ type: Input }],\n    nzNotFoundContent: [{ type: Input }],\n    nzNodes: [{ type: Input }],\n    nzOpen: [{ type: Input }],\n    nzSize: [{ type: Input }],\n    nzPlaceHolder: [{ type: Input }],\n    nzDropdownStyle: [{ type: Input }],\n    nzDropdownClassName: [{ type: Input }],\n    nzBackdrop: [{ type: Input }],\n    nzExpandedKeys: [{ type: Input }],\n    nzDisplayWith: [{ type: Input }],\n    nzMaxTagCount: [{ type: Input }],\n    nzMaxTagPlaceholder: [{ type: Input }],\n    nzOpenChange: [{ type: Output }],\n    nzCleared: [{ type: Output }],\n    nzRemoved: [{ type: Output }],\n    nzExpandChange: [{ type: Output }],\n    nzTreeClick: [{ type: Output }],\n    nzTreeCheckBoxChange: [{ type: Output }],\n    nzSelectSearchComponent: [{ type: ViewChild, args: [NzSelectSearchComponent, { static: false },] }],\n    treeRef: [{ type: ViewChild, args: ['treeRef', { static: false },] }],\n    cdkOverlayOrigin: [{ type: ViewChild, args: [CdkOverlayOrigin, { static: true },] }],\n    cdkConnectedOverlay: [{ type: ViewChild, args: [CdkConnectedOverlay, { static: false },] }],\n    nzTreeTemplate: [{ type: Input }],\n    nzTreeTemplateChild: [{ type: ContentChild, args: ['nzTreeTemplate', { static: true },] }]\n};\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzTreeSelectComponent.prototype, \"nzAllowClear\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzTreeSelectComponent.prototype, \"nzShowExpand\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzTreeSelectComponent.prototype, \"nzShowLine\", void 0);\n__decorate([\n    InputBoolean(),\n    WithConfig(),\n    __metadata(\"design:type\", Boolean)\n], NzTreeSelectComponent.prototype, \"nzDropdownMatchSelectWidth\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzTreeSelectComponent.prototype, \"nzCheckable\", void 0);\n__decorate([\n    InputBoolean(),\n    WithConfig(),\n    __metadata(\"design:type\", Boolean)\n], NzTreeSelectComponent.prototype, \"nzHideUnMatched\", void 0);\n__decorate([\n    InputBoolean(),\n    WithConfig(),\n    __metadata(\"design:type\", Boolean)\n], NzTreeSelectComponent.prototype, \"nzShowIcon\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzTreeSelectComponent.prototype, \"nzShowSearch\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzTreeSelectComponent.prototype, \"nzDisabled\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzTreeSelectComponent.prototype, \"nzAsyncData\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzTreeSelectComponent.prototype, \"nzMultiple\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzTreeSelectComponent.prototype, \"nzDefaultExpandAll\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzTreeSelectComponent.prototype, \"nzCheckStrictly\", void 0);\n__decorate([\n    WithConfig(),\n    __metadata(\"design:type\", String)\n], NzTreeSelectComponent.prototype, \"nzSize\", void 0);\n__decorate([\n    WithConfig(),\n    __metadata(\"design:type\", Object)\n], NzTreeSelectComponent.prototype, \"nzBackdrop\", void 0);\nconst ɵNzTreeSelectService_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(NzTreeSelectService);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTreeSelectService, [{\n        type: Injectable\n    }], null, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTreeSelectComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-tree-select',\n                exportAs: 'nzTreeSelect',\n                animations: [slideMotion],\n                template: `\n    <ng-template\n      cdkConnectedOverlay\n      nzConnectedOverlay\n      [cdkConnectedOverlayHasBackdrop]=\"nzBackdrop\"\n      [cdkConnectedOverlayOrigin]=\"cdkOverlayOrigin\"\n      [cdkConnectedOverlayOpen]=\"nzOpen\"\n      [cdkConnectedOverlayTransformOriginOn]=\"'.ant-select-tree-dropdown'\"\n      [cdkConnectedOverlayMinWidth]=\"$any(nzDropdownMatchSelectWidth ? null : triggerWidth)\"\n      [cdkConnectedOverlayWidth]=\"$any(nzDropdownMatchSelectWidth ? triggerWidth : null)\"\n      (overlayOutsideClick)=\"onClickOutside($event)\"\n      (detach)=\"closeDropDown()\"\n      (positionChange)=\"onPositionChange($event)\"\n    >\n      <div\n        [@slideMotion]=\"'enter'\"\n        [ngClass]=\"dropdownClassName\"\n        [@.disabled]=\"noAnimation?.nzNoAnimation\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        [class.ant-select-dropdown-placement-bottomLeft]=\"dropDownPosition === 'bottom'\"\n        [class.ant-select-dropdown-placement-topLeft]=\"dropDownPosition === 'top'\"\n        [class.ant-tree-select-dropdown-rtl]=\"dir === 'rtl'\"\n        [dir]=\"dir\"\n        [ngStyle]=\"nzDropdownStyle\"\n      >\n        <nz-tree\n          #treeRef\n          [hidden]=\"isNotFound\"\n          nzNoAnimation\n          nzSelectMode\n          nzBlockNode\n          [nzData]=\"nzNodes\"\n          [nzMultiple]=\"nzMultiple\"\n          [nzSearchValue]=\"inputValue\"\n          [nzHideUnMatched]=\"nzHideUnMatched\"\n          [nzShowIcon]=\"nzShowIcon\"\n          [nzCheckable]=\"nzCheckable\"\n          [nzAsyncData]=\"nzAsyncData\"\n          [nzShowExpand]=\"nzShowExpand\"\n          [nzShowLine]=\"nzShowLine\"\n          [nzExpandedIcon]=\"nzExpandedIcon\"\n          [nzExpandAll]=\"nzDefaultExpandAll\"\n          [nzExpandedKeys]=\"expandedKeys\"\n          [nzCheckedKeys]=\"nzCheckable ? value : []\"\n          [nzSelectedKeys]=\"!nzCheckable ? value : []\"\n          [nzTreeTemplate]=\"treeTemplate\"\n          [nzCheckStrictly]=\"nzCheckStrictly\"\n          [nzVirtualItemSize]=\"nzVirtualItemSize\"\n          [nzVirtualMaxBufferPx]=\"nzVirtualMaxBufferPx\"\n          [nzVirtualMinBufferPx]=\"nzVirtualMinBufferPx\"\n          [nzVirtualHeight]=\"nzVirtualHeight\"\n          (nzExpandChange)=\"onExpandedKeysChange($event)\"\n          (nzClick)=\"nzTreeClick.emit($event)\"\n          (nzCheckedKeysChange)=\"updateSelectedNodes()\"\n          (nzSelectedKeysChange)=\"updateSelectedNodes()\"\n          (nzCheckBoxChange)=\"nzTreeCheckBoxChange.emit($event)\"\n          (nzSearchValueChange)=\"setSearchValues($event)\"\n        ></nz-tree>\n        <span *ngIf=\"nzNodes.length === 0 || isNotFound\" class=\"ant-select-not-found\">\n          <nz-embed-empty [nzComponentName]=\"'tree-select'\" [specificContent]=\"nzNotFoundContent\"></nz-embed-empty>\n        </span>\n      </div>\n    </ng-template>\n\n    <div cdkOverlayOrigin class=\"ant-select-selector\">\n      <ng-container *ngIf=\"isMultiple\">\n        <nz-select-item\n          *ngFor=\"let node of selectedNodes | slice: 0:nzMaxTagCount; trackBy: trackValue\"\n          [deletable]=\"true\"\n          [disabled]=\"node.isDisabled || nzDisabled\"\n          [label]=\"nzDisplayWith(node)\"\n          (delete)=\"removeSelected(node, true)\"\n        ></nz-select-item>\n\n        <nz-select-item\n          *ngIf=\"selectedNodes.length > nzMaxTagCount\"\n          [contentTemplateOutlet]=\"nzMaxTagPlaceholder\"\n          [contentTemplateOutletContext]=\"selectedNodes | slice: nzMaxTagCount\"\n          [deletable]=\"false\"\n          [disabled]=\"false\"\n          [label]=\"'+ ' + (selectedNodes.length - nzMaxTagCount) + ' ...'\"\n        ></nz-select-item>\n      </ng-container>\n\n      <nz-select-search\n        [nzId]=\"nzId\"\n        [showInput]=\"nzShowSearch\"\n        (keydown)=\"onKeyDownInput($event)\"\n        (isComposingChange)=\"isComposing = $event\"\n        (valueChange)=\"setInputValue($event)\"\n        [value]=\"inputValue\"\n        [mirrorSync]=\"isMultiple\"\n        [disabled]=\"nzDisabled\"\n        [focusTrigger]=\"nzOpen\"\n      ></nz-select-search>\n\n      <nz-select-placeholder\n        *ngIf=\"nzPlaceHolder && selectedNodes.length === 0\"\n        [placeholder]=\"nzPlaceHolder\"\n        [style.display]=\"placeHolderDisplay\"\n      ></nz-select-placeholder>\n\n      <nz-select-item\n        *ngIf=\"!isMultiple && selectedNodes.length === 1 && !isComposing && inputValue === ''\"\n        [deletable]=\"false\"\n        [disabled]=\"false\"\n        [label]=\"nzDisplayWith(selectedNodes[0])\"\n      ></nz-select-item>\n\n      <nz-select-arrow *ngIf=\"!isMultiple\"></nz-select-arrow>\n\n      <nz-select-clear *ngIf=\"nzAllowClear && !nzDisabled && selectedNodes.length\" (clear)=\"onClearSelection()\"></nz-select-clear>\n    </div>\n  `,\n                providers: [\n                    NzTreeSelectService,\n                    {\n                        provide: NzTreeHigherOrderServiceToken,\n                        useFactory: higherOrderServiceFactory,\n                        deps: [[new Self(), Injector]]\n                    },\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef(() => NzTreeSelectComponent),\n                        multi: true\n                    }\n                ],\n                host: {\n                    '[class.ant-select-lg]': 'nzSize===\"large\"',\n                    '[class.ant-select-rtl]': 'dir===\"rtl\"',\n                    '[class.ant-select-sm]': 'nzSize===\"small\"',\n                    '[class.ant-select-disabled]': 'nzDisabled',\n                    '[class.ant-select-single]': '!isMultiple',\n                    '[class.ant-select-show-arrow]': '!isMultiple',\n                    '[class.ant-select-show-search]': '!isMultiple',\n                    '[class.ant-select-multiple]': 'isMultiple',\n                    '[class.ant-select-allow-clear]': 'nzAllowClear',\n                    '[class.ant-select-open]': 'nzOpen',\n                    '[class.ant-select-focused]': 'nzOpen || focused',\n                    '(click)': 'trigger()',\n                    '(keydown)': 'onKeydown($event)'\n                }\n            }]\n    }], function () { return [{ type: NzTreeSelectService }, { type: ɵngcc1.NzConfigService }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.FocusMonitor }, { type: ɵngcc4.NzNoAnimationDirective, decorators: [{\n                type: Host\n            }, {\n                type: Optional\n            }] }]; }, { nzId: [{\n            type: Input\n        }], nzAllowClear: [{\n            type: Input\n        }], nzShowExpand: [{\n            type: Input\n        }], nzShowLine: [{\n            type: Input\n        }], nzDropdownMatchSelectWidth: [{\n            type: Input\n        }], nzCheckable: [{\n            type: Input\n        }], nzHideUnMatched: [{\n            type: Input\n        }], nzShowIcon: [{\n            type: Input\n        }], nzShowSearch: [{\n            type: Input\n        }], nzDisabled: [{\n            type: Input\n        }], nzAsyncData: [{\n            type: Input\n        }], nzMultiple: [{\n            type: Input\n        }], nzDefaultExpandAll: [{\n            type: Input\n        }], nzCheckStrictly: [{\n            type: Input\n        }], nzVirtualItemSize: [{\n            type: Input\n        }], nzVirtualMaxBufferPx: [{\n            type: Input\n        }], nzVirtualMinBufferPx: [{\n            type: Input\n        }], nzVirtualHeight: [{\n            type: Input\n        }], nzNodes: [{\n            type: Input\n        }], nzOpen: [{\n            type: Input\n        }], nzSize: [{\n            type: Input\n        }], nzPlaceHolder: [{\n            type: Input\n        }], nzDropdownStyle: [{\n            type: Input\n        }], nzBackdrop: [{\n            type: Input\n        }], nzDisplayWith: [{\n            type: Input\n        }], nzMaxTagPlaceholder: [{\n            type: Input\n        }], nzOpenChange: [{\n            type: Output\n        }], nzCleared: [{\n            type: Output\n        }], nzRemoved: [{\n            type: Output\n        }], nzExpandChange: [{\n            type: Output\n        }], nzTreeClick: [{\n            type: Output\n        }], nzTreeCheckBoxChange: [{\n            type: Output\n        }], nzExpandedKeys: [{\n            type: Input\n        }], nzExpandedIcon: [{\n            type: Input\n        }], nzNotFoundContent: [{\n            type: Input\n        }], nzDropdownClassName: [{\n            type: Input\n        }], nzMaxTagCount: [{\n            type: Input\n        }], nzSelectSearchComponent: [{\n            type: ViewChild,\n            args: [NzSelectSearchComponent, { static: false }]\n        }], treeRef: [{\n            type: ViewChild,\n            args: ['treeRef', { static: false }]\n        }], cdkOverlayOrigin: [{\n            type: ViewChild,\n            args: [CdkOverlayOrigin, { static: true }]\n        }], cdkConnectedOverlay: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay, { static: false }]\n        }], nzTreeTemplate: [{\n            type: Input\n        }], nzTreeTemplateChild: [{\n            type: ContentChild,\n            args: ['nzTreeTemplate', { static: true }]\n        }] }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeSelectModule {\n}\nNzTreeSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NzTreeSelectModule });\nNzTreeSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NzTreeSelectModule_Factory(t) { return new (t || NzTreeSelectModule)(); }, imports: [[\n            BidiModule,\n            CommonModule,\n            OverlayModule,\n            FormsModule,\n            NzSelectModule,\n            NzTreeModule,\n            NzIconModule,\n            NzEmptyModule,\n            NzOverlayModule,\n            NzNoAnimationModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzTreeSelectModule, { declarations: function () { return [NzTreeSelectComponent]; }, imports: function () { return [BidiModule,\n        CommonModule,\n        OverlayModule,\n        FormsModule,\n        NzSelectModule,\n        NzTreeModule,\n        NzIconModule,\n        NzEmptyModule,\n        NzOverlayModule,\n        NzNoAnimationModule]; }, exports: function () { return [NzTreeSelectComponent]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTreeSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    BidiModule,\n                    CommonModule,\n                    OverlayModule,\n                    FormsModule,\n                    NzSelectModule,\n                    NzTreeModule,\n                    NzIconModule,\n                    NzEmptyModule,\n                    NzOverlayModule,\n                    NzNoAnimationModule\n                ],\n                declarations: [NzTreeSelectComponent],\n                exports: [NzTreeSelectComponent]\n            }]\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzTreeSelectComponent, NzTreeSelectModule, NzTreeSelectService, higherOrderServiceFactory };\n\n//# sourceMappingURL=ng-zorro-antd-tree-select.js.map","import { Injectable, InjectionToken } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport * as ɵngcc0 from '@angular/core';\nclass NzTreeNode {\n    /**\n     * Init nzTreeNode\n     * @param option: user's input\n     * @param parent\n     * @param service: base nzTreeService\n     */\n    constructor(option, parent = null, service = null) {\n        this._title = '';\n        this.level = 0;\n        // Parent Node\n        this.parentNode = null;\n        this._icon = '';\n        this._children = [];\n        this._isLeaf = false;\n        this._isChecked = false;\n        this._isSelectable = false;\n        this._isDisabled = false;\n        this._isDisableCheckbox = false;\n        this._isExpanded = false;\n        this._isHalfChecked = false;\n        this._isSelected = false;\n        this._isLoading = false;\n        this.canHide = false;\n        this.isMatched = false;\n        this.service = null;\n        if (option instanceof NzTreeNode) {\n            return option;\n        }\n        this.service = service || null;\n        this.origin = option;\n        this.key = option.key;\n        this.parentNode = parent;\n        this._title = option.title || '---';\n        this._icon = option.icon || '';\n        this._isLeaf = option.isLeaf || false;\n        this._children = [];\n        // option params\n        this._isChecked = option.checked || false;\n        this._isSelectable = option.disabled || option.selectable !== false;\n        this._isDisabled = option.disabled || false;\n        this._isDisableCheckbox = option.disableCheckbox || false;\n        this._isExpanded = option.isLeaf ? false : option.expanded || false;\n        this._isHalfChecked = false;\n        this._isSelected = (!option.disabled && option.selected) || false;\n        this._isLoading = false;\n        this.isMatched = false;\n        /**\n         * parent's checked status will affect children while initializing\n         */\n        if (parent) {\n            this.level = parent.level + 1;\n        }\n        else {\n            this.level = 0;\n        }\n        if (typeof option.children !== 'undefined' && option.children !== null) {\n            option.children.forEach(nodeOptions => {\n                const s = this.treeService;\n                if (s && !s.isCheckStrictly && option.checked && !option.disabled && !nodeOptions.disabled && !nodeOptions.disableCheckbox) {\n                    nodeOptions.checked = option.checked;\n                }\n                this._children.push(new NzTreeNode(nodeOptions, this));\n            });\n        }\n    }\n    get treeService() {\n        return this.service || (this.parentNode && this.parentNode.treeService);\n    }\n    /**\n     * auto generate\n     * get\n     * set\n     */\n    get title() {\n        return this._title;\n    }\n    set title(value) {\n        this._title = value;\n        this.update();\n    }\n    get icon() {\n        return this._icon;\n    }\n    set icon(value) {\n        this._icon = value;\n        this.update();\n    }\n    get children() {\n        return this._children;\n    }\n    set children(value) {\n        this._children = value;\n        this.update();\n    }\n    get isLeaf() {\n        return this._isLeaf;\n    }\n    set isLeaf(value) {\n        this._isLeaf = value;\n        this.update();\n    }\n    get isChecked() {\n        return this._isChecked;\n    }\n    set isChecked(value) {\n        this._isChecked = value;\n        this.origin.checked = value;\n        this.afterValueChange('isChecked');\n    }\n    get isHalfChecked() {\n        return this._isHalfChecked;\n    }\n    set isHalfChecked(value) {\n        this._isHalfChecked = value;\n        this.afterValueChange('isHalfChecked');\n    }\n    get isSelectable() {\n        return this._isSelectable;\n    }\n    set isSelectable(value) {\n        this._isSelectable = value;\n        this.update();\n    }\n    get isDisabled() {\n        return this._isDisabled;\n    }\n    set isDisabled(value) {\n        this._isDisabled = value;\n        this.update();\n    }\n    get isDisableCheckbox() {\n        return this._isDisableCheckbox;\n    }\n    set isDisableCheckbox(value) {\n        this._isDisableCheckbox = value;\n        this.update();\n    }\n    get isExpanded() {\n        return this._isExpanded;\n    }\n    set isExpanded(value) {\n        this._isExpanded = value;\n        this.origin.expanded = value;\n        this.afterValueChange('isExpanded');\n        this.afterValueChange('reRender');\n    }\n    get isSelected() {\n        return this._isSelected;\n    }\n    set isSelected(value) {\n        this._isSelected = value;\n        this.origin.selected = value;\n        this.afterValueChange('isSelected');\n    }\n    get isLoading() {\n        return this._isLoading;\n    }\n    set isLoading(value) {\n        this._isLoading = value;\n        this.update();\n    }\n    setSyncChecked(checked = false, halfChecked = false) {\n        this.setChecked(checked, halfChecked);\n        if (this.treeService && !this.treeService.isCheckStrictly) {\n            this.treeService.conduct(this);\n        }\n    }\n    setChecked(checked = false, halfChecked = false) {\n        this.origin.checked = checked;\n        this.isChecked = checked;\n        this.isHalfChecked = halfChecked;\n    }\n    setExpanded(value) {\n        this._isExpanded = value;\n        this.origin.expanded = value;\n        this.afterValueChange('isExpanded');\n    }\n    getParentNode() {\n        return this.parentNode;\n    }\n    getChildren() {\n        return this.children;\n    }\n    /**\n     * Support appending child nodes by position. Leaf node cannot be appended.\n     */\n    addChildren(children, childPos = -1) {\n        if (!this.isLeaf) {\n            children.forEach(node => {\n                const refreshLevel = (n) => {\n                    n.getChildren().forEach(c => {\n                        c.level = c.getParentNode().level + 1;\n                        // flush origin\n                        c.origin.level = c.level;\n                        refreshLevel(c);\n                    });\n                };\n                let child = node;\n                if (child instanceof NzTreeNode) {\n                    child.parentNode = this;\n                }\n                else {\n                    child = new NzTreeNode(node, this);\n                }\n                child.level = this.level + 1;\n                child.origin.level = child.level;\n                refreshLevel(child);\n                try {\n                    childPos === -1 ? this.children.push(child) : this.children.splice(childPos, 0, child);\n                    // flush origin\n                }\n                catch (e) { }\n            });\n            this.origin.children = this.getChildren().map(v => v.origin);\n            // remove loading state\n            this.isLoading = false;\n        }\n        this.afterValueChange('addChildren');\n        this.afterValueChange('reRender');\n    }\n    clearChildren() {\n        // refresh checked state\n        this.afterValueChange('clearChildren');\n        this.children = [];\n        this.origin.children = [];\n        this.afterValueChange('reRender');\n    }\n    remove() {\n        const parentNode = this.getParentNode();\n        if (parentNode) {\n            parentNode.children = parentNode.getChildren().filter(v => v.key !== this.key);\n            parentNode.origin.children = parentNode.origin.children.filter(v => v.key !== this.key);\n            this.afterValueChange('remove');\n            this.afterValueChange('reRender');\n        }\n    }\n    afterValueChange(key) {\n        if (this.treeService) {\n            switch (key) {\n                case 'isChecked':\n                    this.treeService.setCheckedNodeList(this);\n                    break;\n                case 'isHalfChecked':\n                    this.treeService.setHalfCheckedNodeList(this);\n                    break;\n                case 'isExpanded':\n                    this.treeService.setExpandedNodeList(this);\n                    break;\n                case 'isSelected':\n                    this.treeService.setNodeActive(this);\n                    break;\n                case 'clearChildren':\n                    this.treeService.afterRemove(this.getChildren());\n                    break;\n                case 'remove':\n                    this.treeService.afterRemove([this]);\n                    break;\n                case 'reRender':\n                    this.treeService.flattenTreeData(this.treeService.rootNodes, this.treeService.getExpandedNodeList().map(v => v.key));\n                    break;\n            }\n        }\n        this.update();\n    }\n    update() {\n        if (this.component) {\n            this.component.markForCheck();\n        }\n    }\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nfunction isCheckDisabled(node) {\n    const { isDisabled, isDisableCheckbox } = node;\n    return !!(isDisabled || isDisableCheckbox);\n}\nfunction isInArray(needle, haystack) {\n    return haystack.length > 0 && haystack.indexOf(needle) > -1;\n}\nfunction getPosition(level, index) {\n    return `${level}-${index}`;\n}\nfunction getKey(key, pos) {\n    if (key !== null && key !== undefined) {\n        return key;\n    }\n    return pos;\n}\n/**\n * Flat nest tree data into flatten list. This is used for virtual list render.\n * @param treeNodeList Origin data node list\n * @param expandedKeys\n * need expanded keys, provides `true` means all expanded (used in `rc-tree-select`).\n */\nfunction flattenTreeData(treeNodeList = [], expandedKeys = []) {\n    const expandedKeySet = new Set(expandedKeys === true ? [] : expandedKeys);\n    const flattenList = [];\n    function dig(list, parent = null) {\n        return list.map((treeNode, index) => {\n            const pos = getPosition(parent ? parent.pos : '0', index);\n            const mergedKey = getKey(treeNode.key, pos);\n            treeNode.isStart = [...(parent ? parent.isStart : []), index === 0];\n            treeNode.isEnd = [...(parent ? parent.isEnd : []), index === list.length - 1];\n            // Add FlattenDataNode into list\n            // TODO: only need data here.\n            const flattenNode = {\n                parent,\n                pos,\n                children: [],\n                data: treeNode,\n                isStart: [...(parent ? parent.isStart : []), index === 0],\n                isEnd: [...(parent ? parent.isEnd : []), index === list.length - 1]\n            };\n            flattenList.push(flattenNode);\n            // Loop treeNode children\n            if (expandedKeys === true || expandedKeySet.has(mergedKey) || treeNode.isExpanded) {\n                flattenNode.children = dig(treeNode.children || [], flattenNode);\n            }\n            else {\n                flattenNode.children = [];\n            }\n            return flattenNode;\n        });\n    }\n    dig(treeNodeList);\n    return flattenList;\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeBaseService {\n    constructor() {\n        this.DRAG_SIDE_RANGE = 0.25;\n        this.DRAG_MIN_GAP = 2;\n        this.isCheckStrictly = false;\n        this.isMultiple = false;\n        this.rootNodes = [];\n        this.flattenNodes$ = new BehaviorSubject([]);\n        this.selectedNodeList = [];\n        this.expandedNodeList = [];\n        this.checkedNodeList = [];\n        this.halfCheckedNodeList = [];\n        this.matchedNodeList = [];\n    }\n    /**\n     * reset tree nodes will clear default node list\n     */\n    initTree(nzNodes) {\n        this.rootNodes = nzNodes;\n        this.expandedNodeList = [];\n        this.selectedNodeList = [];\n        this.halfCheckedNodeList = [];\n        this.checkedNodeList = [];\n        this.matchedNodeList = [];\n    }\n    flattenTreeData(nzNodes, expandedKeys = []) {\n        this.flattenNodes$.next(flattenTreeData(nzNodes, expandedKeys).map(item => item.data));\n    }\n    getSelectedNode() {\n        return this.selectedNode;\n    }\n    /**\n     * get some list\n     */\n    getSelectedNodeList() {\n        return this.conductNodeState('select');\n    }\n    /**\n     * return checked nodes\n     */\n    getCheckedNodeList() {\n        return this.conductNodeState('check');\n    }\n    getHalfCheckedNodeList() {\n        return this.conductNodeState('halfCheck');\n    }\n    /**\n     * return expanded nodes\n     */\n    getExpandedNodeList() {\n        return this.conductNodeState('expand');\n    }\n    /**\n     * return search matched nodes\n     */\n    getMatchedNodeList() {\n        return this.conductNodeState('match');\n    }\n    isArrayOfNzTreeNode(value) {\n        return value.every(item => item instanceof NzTreeNode);\n    }\n    /**\n     * set drag node\n     */\n    setSelectedNode(node) {\n        this.selectedNode = node;\n    }\n    /**\n     * set node selected status\n     */\n    setNodeActive(node) {\n        if (!this.isMultiple && node.isSelected) {\n            this.selectedNodeList.forEach(n => {\n                if (node.key !== n.key) {\n                    // reset other nodes\n                    n.isSelected = false;\n                }\n            });\n            // single mode: remove pre node\n            this.selectedNodeList = [];\n        }\n        this.setSelectedNodeList(node, this.isMultiple);\n    }\n    /**\n     * add or remove node to selectedNodeList\n     */\n    setSelectedNodeList(node, isMultiple = false) {\n        const index = this.getIndexOfArray(this.selectedNodeList, node.key);\n        if (isMultiple) {\n            if (node.isSelected && index === -1) {\n                this.selectedNodeList.push(node);\n            }\n        }\n        else {\n            if (node.isSelected && index === -1) {\n                this.selectedNodeList = [node];\n            }\n        }\n        if (!node.isSelected) {\n            this.selectedNodeList = this.selectedNodeList.filter(n => n.key !== node.key);\n        }\n    }\n    /**\n     * merge checked nodes\n     */\n    setHalfCheckedNodeList(node) {\n        const index = this.getIndexOfArray(this.halfCheckedNodeList, node.key);\n        if (node.isHalfChecked && index === -1) {\n            this.halfCheckedNodeList.push(node);\n        }\n        else if (!node.isHalfChecked && index > -1) {\n            this.halfCheckedNodeList = this.halfCheckedNodeList.filter(n => node.key !== n.key);\n        }\n    }\n    setCheckedNodeList(node) {\n        const index = this.getIndexOfArray(this.checkedNodeList, node.key);\n        if (node.isChecked && index === -1) {\n            this.checkedNodeList.push(node);\n        }\n        else if (!node.isChecked && index > -1) {\n            this.checkedNodeList = this.checkedNodeList.filter(n => node.key !== n.key);\n        }\n    }\n    /**\n     * conduct checked/selected/expanded keys\n     */\n    conductNodeState(type = 'check') {\n        let resultNodesList = [];\n        switch (type) {\n            case 'select':\n                resultNodesList = this.selectedNodeList;\n                break;\n            case 'expand':\n                resultNodesList = this.expandedNodeList;\n                break;\n            case 'match':\n                resultNodesList = this.matchedNodeList;\n                break;\n            case 'check':\n                resultNodesList = this.checkedNodeList;\n                const isIgnore = (node) => {\n                    const parentNode = node.getParentNode();\n                    if (parentNode) {\n                        if (this.checkedNodeList.findIndex(n => n.key === parentNode.key) > -1) {\n                            return true;\n                        }\n                        else {\n                            return isIgnore(parentNode);\n                        }\n                    }\n                    return false;\n                };\n                // merge checked\n                if (!this.isCheckStrictly) {\n                    resultNodesList = this.checkedNodeList.filter(n => !isIgnore(n));\n                }\n                break;\n            case 'halfCheck':\n                if (!this.isCheckStrictly) {\n                    resultNodesList = this.halfCheckedNodeList;\n                }\n                break;\n        }\n        return resultNodesList;\n    }\n    /**\n     * set expanded nodes\n     */\n    setExpandedNodeList(node) {\n        if (node.isLeaf) {\n            return;\n        }\n        const index = this.getIndexOfArray(this.expandedNodeList, node.key);\n        if (node.isExpanded && index === -1) {\n            this.expandedNodeList.push(node);\n        }\n        else if (!node.isExpanded && index > -1) {\n            this.expandedNodeList.splice(index, 1);\n        }\n    }\n    setMatchedNodeList(node) {\n        const index = this.getIndexOfArray(this.matchedNodeList, node.key);\n        if (node.isMatched && index === -1) {\n            this.matchedNodeList.push(node);\n        }\n        else if (!node.isMatched && index > -1) {\n            this.matchedNodeList.splice(index, 1);\n        }\n    }\n    /**\n     * check state\n     * @param isCheckStrictly\n     */\n    refreshCheckState(isCheckStrictly = false) {\n        if (isCheckStrictly) {\n            return;\n        }\n        this.checkedNodeList.forEach(node => {\n            this.conduct(node, isCheckStrictly);\n        });\n    }\n    // reset other node checked state based current node\n    conduct(node, isCheckStrictly = false) {\n        const isChecked = node.isChecked;\n        if (node && !isCheckStrictly) {\n            this.conductUp(node);\n            this.conductDown(node, isChecked);\n        }\n    }\n    /**\n     * 1、children half checked\n     * 2、children all checked, parent checked\n     * 3、no children checked\n     */\n    conductUp(node) {\n        const parentNode = node.getParentNode();\n        if (parentNode) {\n            if (!isCheckDisabled(parentNode)) {\n                if (parentNode.children.every(child => isCheckDisabled(child) || (!child.isHalfChecked && child.isChecked))) {\n                    parentNode.isChecked = true;\n                    parentNode.isHalfChecked = false;\n                }\n                else if (parentNode.children.some(child => child.isHalfChecked || child.isChecked)) {\n                    parentNode.isChecked = false;\n                    parentNode.isHalfChecked = true;\n                }\n                else {\n                    parentNode.isChecked = false;\n                    parentNode.isHalfChecked = false;\n                }\n            }\n            this.setCheckedNodeList(parentNode);\n            this.setHalfCheckedNodeList(parentNode);\n            this.conductUp(parentNode);\n        }\n    }\n    /**\n     * reset child check state\n     */\n    conductDown(node, value) {\n        if (!isCheckDisabled(node)) {\n            node.isChecked = value;\n            node.isHalfChecked = false;\n            this.setCheckedNodeList(node);\n            this.setHalfCheckedNodeList(node);\n            node.children.forEach(n => {\n                this.conductDown(n, value);\n            });\n        }\n    }\n    /**\n     * flush after delete node\n     */\n    afterRemove(nodes) {\n        // to reset selectedNodeList & expandedNodeList\n        const loopNode = (node) => {\n            // remove selected node\n            this.selectedNodeList = this.selectedNodeList.filter(n => n.key !== node.key);\n            // remove expanded node\n            this.expandedNodeList = this.expandedNodeList.filter(n => n.key !== node.key);\n            // remove checked node\n            this.checkedNodeList = this.checkedNodeList.filter(n => n.key !== node.key);\n            if (node.children) {\n                node.children.forEach(child => {\n                    loopNode(child);\n                });\n            }\n        };\n        nodes.forEach(n => {\n            loopNode(n);\n        });\n        this.refreshCheckState(this.isCheckStrictly);\n    }\n    /**\n     * drag event\n     */\n    refreshDragNode(node) {\n        if (node.children.length === 0) {\n            // until root\n            this.conductUp(node);\n        }\n        else {\n            node.children.forEach(child => {\n                this.refreshDragNode(child);\n            });\n        }\n    }\n    // reset node level\n    resetNodeLevel(node) {\n        const parentNode = node.getParentNode();\n        if (parentNode) {\n            node.level = parentNode.level + 1;\n        }\n        else {\n            node.level = 0;\n        }\n        for (const child of node.children) {\n            this.resetNodeLevel(child);\n        }\n    }\n    calcDropPosition(event) {\n        const { clientY } = event;\n        // to fix firefox undefined\n        const { top, bottom, height } = event.target.getBoundingClientRect();\n        const des = Math.max(height * this.DRAG_SIDE_RANGE, this.DRAG_MIN_GAP);\n        if (clientY <= top + des) {\n            return -1;\n        }\n        else if (clientY >= bottom - des) {\n            return 1;\n        }\n        return 0;\n    }\n    /**\n     * drop\n     * 0: inner -1: pre 1: next\n     */\n    dropAndApply(targetNode, dragPos = -1) {\n        if (!targetNode || dragPos > 1) {\n            return;\n        }\n        const treeService = targetNode.treeService;\n        const targetParent = targetNode.getParentNode();\n        const isSelectedRootNode = this.selectedNode.getParentNode();\n        // remove the dragNode\n        if (isSelectedRootNode) {\n            isSelectedRootNode.children = isSelectedRootNode.children.filter(n => n.key !== this.selectedNode.key);\n        }\n        else {\n            this.rootNodes = this.rootNodes.filter(n => n.key !== this.selectedNode.key);\n        }\n        switch (dragPos) {\n            case 0:\n                targetNode.addChildren([this.selectedNode]);\n                this.resetNodeLevel(targetNode);\n                break;\n            case -1:\n            case 1:\n                const tIndex = dragPos === 1 ? 1 : 0;\n                if (targetParent) {\n                    targetParent.addChildren([this.selectedNode], targetParent.children.indexOf(targetNode) + tIndex);\n                    const parentNode = this.selectedNode.getParentNode();\n                    if (parentNode) {\n                        this.resetNodeLevel(parentNode);\n                    }\n                }\n                else {\n                    const targetIndex = this.rootNodes.indexOf(targetNode) + tIndex;\n                    // Insert root node.\n                    this.rootNodes.splice(targetIndex, 0, this.selectedNode);\n                    this.rootNodes[targetIndex].parentNode = null;\n                    this.resetNodeLevel(this.rootNodes[targetIndex]);\n                }\n                break;\n        }\n        // flush all nodes\n        this.rootNodes.forEach(child => {\n            if (!child.treeService) {\n                child.service = treeService;\n            }\n            this.refreshDragNode(child);\n        });\n    }\n    /**\n     * emit Structure\n     * eventName\n     * node\n     * event: MouseEvent / DragEvent\n     * dragNode\n     */\n    formatEvent(eventName, node, event) {\n        const emitStructure = {\n            eventName: eventName,\n            node: node,\n            event: event\n        };\n        switch (eventName) {\n            case 'dragstart':\n            case 'dragenter':\n            case 'dragover':\n            case 'dragleave':\n            case 'drop':\n            case 'dragend':\n                Object.assign(emitStructure, { dragNode: this.getSelectedNode() });\n                break;\n            case 'click':\n            case 'dblclick':\n                Object.assign(emitStructure, { selectedKeys: this.selectedNodeList });\n                Object.assign(emitStructure, { nodes: this.selectedNodeList });\n                Object.assign(emitStructure, { keys: this.selectedNodeList.map(n => n.key) });\n                break;\n            case 'check':\n                const checkedNodeList = this.getCheckedNodeList();\n                Object.assign(emitStructure, { checkedKeys: checkedNodeList });\n                Object.assign(emitStructure, { nodes: checkedNodeList });\n                Object.assign(emitStructure, { keys: checkedNodeList.map(n => n.key) });\n                break;\n            case 'search':\n                Object.assign(emitStructure, { matchedKeys: this.getMatchedNodeList() });\n                Object.assign(emitStructure, { nodes: this.getMatchedNodeList() });\n                Object.assign(emitStructure, { keys: this.getMatchedNodeList().map(n => n.key) });\n                break;\n            case 'expand':\n                Object.assign(emitStructure, { nodes: this.expandedNodeList });\n                Object.assign(emitStructure, { keys: this.expandedNodeList.map(n => n.key) });\n                break;\n        }\n        return emitStructure;\n    }\n    /**\n     * New functions for flatten nodes\n     */\n    getIndexOfArray(list, key) {\n        return list.findIndex(v => v.key === key);\n    }\n    /**\n     * Render by nzCheckedKeys\n     * When keys equals null, just render with checkStrictly\n     * @param keys\n     * @param checkStrictly\n     */\n    conductCheck(keys, checkStrictly) {\n        this.checkedNodeList = [];\n        this.halfCheckedNodeList = [];\n        const calc = (nodes) => {\n            nodes.forEach(node => {\n                if (keys === null) {\n                    // render tree if no default checked keys found\n                    node.isChecked = !!node.origin.checked;\n                }\n                else {\n                    if (isInArray(node.key, keys || [])) {\n                        node.isChecked = true;\n                        node.isHalfChecked = false;\n                    }\n                    else {\n                        node.isChecked = false;\n                        node.isHalfChecked = false;\n                    }\n                }\n                if (node.children.length > 0) {\n                    calc(node.children);\n                }\n            });\n        };\n        calc(this.rootNodes);\n        this.refreshCheckState(checkStrictly);\n    }\n    conductExpandedKeys(keys = []) {\n        const expandedKeySet = new Set(keys === true ? [] : keys);\n        this.expandedNodeList = [];\n        const calc = (nodes) => {\n            nodes.forEach(node => {\n                node.setExpanded(keys === true || expandedKeySet.has(node.key) || node.isExpanded === true);\n                if (node.isExpanded) {\n                    this.setExpandedNodeList(node);\n                }\n                if (node.children.length > 0) {\n                    calc(node.children);\n                }\n            });\n        };\n        calc(this.rootNodes);\n    }\n    conductSelectedKeys(keys, isMulti) {\n        this.selectedNodeList.forEach(node => (node.isSelected = false));\n        this.selectedNodeList = [];\n        const calc = (nodes) => {\n            return nodes.every(node => {\n                if (isInArray(node.key, keys)) {\n                    node.isSelected = true;\n                    this.setSelectedNodeList(node);\n                    if (!isMulti) {\n                        // if not support multi select\n                        return false;\n                    }\n                }\n                else {\n                    node.isSelected = false;\n                }\n                if (node.children.length > 0) {\n                    // Recursion\n                    return calc(node.children);\n                }\n                return true;\n            });\n        };\n        calc(this.rootNodes);\n    }\n    /**\n     * Expand parent nodes by child node\n     * @param node\n     */\n    expandNodeAllParentBySearch(node) {\n        const calc = (n) => {\n            if (n) {\n                n.canHide = false;\n                n.setExpanded(true);\n                this.setExpandedNodeList(n);\n                if (n.getParentNode()) {\n                    return calc(n.getParentNode());\n                }\n            }\n        };\n        calc(node.getParentNode());\n    }\n}\nNzTreeBaseService.ɵfac = function NzTreeBaseService_Factory(t) { return new (t || NzTreeBaseService)(); };\nNzTreeBaseService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NzTreeBaseService, factory: NzTreeBaseService.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTreeBaseService, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst NzTreeHigherOrderServiceToken = new InjectionToken('NzTreeHigherOrder');\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeBase {\n    constructor(nzTreeService) {\n        this.nzTreeService = nzTreeService;\n    }\n    /**\n     * Coerces a value({@link any[]}) to a TreeNodes({@link NzTreeNode[]})\n     */\n    coerceTreeNodes(value) {\n        let nodes = [];\n        if (!this.nzTreeService.isArrayOfNzTreeNode(value)) {\n            // has not been new NzTreeNode\n            nodes = value.map(item => new NzTreeNode(item, null, this.nzTreeService));\n        }\n        else {\n            nodes = value.map((item) => {\n                item.service = this.nzTreeService;\n                return item;\n            });\n        }\n        return nodes;\n    }\n    /**\n     * Get all nodes({@link NzTreeNode})\n     */\n    getTreeNodes() {\n        return this.nzTreeService.rootNodes;\n    }\n    /**\n     * Get {@link NzTreeNode} with key\n     */\n    getTreeNodeByKey(key) {\n        // flat tree nodes\n        const nodes = [];\n        const getNode = (node) => {\n            nodes.push(node);\n            node.getChildren().forEach(n => {\n                getNode(n);\n            });\n        };\n        this.getTreeNodes().forEach(n => {\n            getNode(n);\n        });\n        return nodes.find(n => n.key === key) || null;\n    }\n    /**\n     * Get checked nodes(merged)\n     */\n    getCheckedNodeList() {\n        return this.nzTreeService.getCheckedNodeList();\n    }\n    /**\n     * Get selected nodes\n     */\n    getSelectedNodeList() {\n        return this.nzTreeService.getSelectedNodeList();\n    }\n    /**\n     * Get half checked nodes\n     */\n    getHalfCheckedNodeList() {\n        return this.nzTreeService.getHalfCheckedNodeList();\n    }\n    /**\n     * Get expanded nodes\n     */\n    getExpandedNodeList() {\n        return this.nzTreeService.getExpandedNodeList();\n    }\n    /**\n     * Get matched nodes(if nzSearchValue is not null)\n     */\n    getMatchedNodeList() {\n        return this.nzTreeService.getMatchedNodeList();\n    }\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzTreeBase, NzTreeBaseService, NzTreeHigherOrderServiceToken, NzTreeNode, flattenTreeData, getKey, getPosition, isCheckDisabled, isInArray };\n\n//# sourceMappingURL=ng-zorro-antd-core-tree.js.map","import { Pipe, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n// Regular Expressions for parsing tags and attributes\nimport * as ɵngcc0 from '@angular/core';\nconst SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n// ! to ~ is the ASCII range.\nconst NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n */\nfunction encodeEntities(value) {\n    return value\n        .replace(/&/g, '&amp;')\n        .replace(SURROGATE_PAIR_REGEXP, (match) => {\n        const hi = match.charCodeAt(0);\n        const low = match.charCodeAt(1);\n        return `&#${(hi - 0xd800) * 0x400 + (low - 0xdc00) + 0x10000};`;\n    })\n        .replace(NON_ALPHANUMERIC_REGEXP, (match) => `&#${match.charCodeAt(0)};`)\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n}\nclass NzHighlightPipe {\n    constructor() {\n        this.UNIQUE_WRAPPERS = ['##==-open_tag-==##', '##==-close_tag-==##'];\n    }\n    transform(value, highlightValue, flags, klass) {\n        if (!highlightValue) {\n            return value;\n        }\n        // Escapes regex keyword to interpret these characters literally\n        const searchValue = new RegExp(highlightValue.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$&'), flags);\n        const wrapValue = value.replace(searchValue, `${this.UNIQUE_WRAPPERS[0]}$&${this.UNIQUE_WRAPPERS[1]}`);\n        return encodeEntities(wrapValue)\n            .replace(new RegExp(this.UNIQUE_WRAPPERS[0], 'g'), klass ? `<span class=\"${klass}\">` : '<span>')\n            .replace(new RegExp(this.UNIQUE_WRAPPERS[1], 'g'), '</span>');\n    }\n}\nNzHighlightPipe.ɵfac = function NzHighlightPipe_Factory(t) { return new (t || NzHighlightPipe)(); };\nNzHighlightPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"nzHighlight\", type: NzHighlightPipe, pure: true });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzHighlightPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'nzHighlight',\n                pure: true\n            }]\n    }], function () { return []; }, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzHighlightModule {\n}\nNzHighlightModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NzHighlightModule });\nNzHighlightModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NzHighlightModule_Factory(t) { return new (t || NzHighlightModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzHighlightModule, { declarations: function () { return [NzHighlightPipe]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NzHighlightPipe]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzHighlightModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: [NzHighlightPipe],\n                declarations: [NzHighlightPipe]\n            }]\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzHighlightModule, NzHighlightPipe };\n\n//# sourceMappingURL=ng-zorro-antd-core-highlight.js.map","import { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { Component, ChangeDetectionStrategy, ChangeDetectorRef, Input, EventEmitter, NgZone, Renderer2, ElementRef, Host, Optional, Output, Injectable, SkipSelf, forwardRef, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { NzHighlightModule } from 'ng-zorro-antd/core/highlight';\nimport { NzNoAnimationDirective, NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzTreeBaseService, NzTreeBase, flattenTreeData, NzTreeHigherOrderServiceToken } from 'ng-zorro-antd/core/tree';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'ng-zorro-antd/core/outlet';\nimport * as ɵngcc3 from 'ng-zorro-antd/icon';\nimport * as ɵngcc4 from 'ng-zorro-antd/core/highlight';\nimport * as ɵngcc5 from 'ng-zorro-antd/core/tree';\nimport * as ɵngcc6 from 'ng-zorro-antd/core/no-animation';\nimport * as ɵngcc7 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc8 from '@angular/cdk/bidi';\nimport * as ɵngcc9 from '@angular/cdk/scrolling';\n\nfunction NzTreeIndentComponent_span_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\");\n} if (rf & 2) {\n    const i_r2 = ctx.index;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"ant-tree-indent-unit\", !ctx_r0.nzSelectMode)(\"ant-select-tree-indent-unit\", ctx_r0.nzSelectMode)(\"ant-select-tree-indent-unit-start\", ctx_r0.nzSelectMode && ctx_r0.nzIsStart[i_r2])(\"ant-tree-indent-unit-start\", !ctx_r0.nzSelectMode && ctx_r0.nzIsStart[i_r2])(\"ant-select-tree-indent-unit-end\", ctx_r0.nzSelectMode && ctx_r0.nzIsEnd[i_r2])(\"ant-tree-indent-unit-end\", !ctx_r0.nzSelectMode && ctx_r0.nzIsEnd[i_r2]);\n} }\nconst _c0 = [\"builtin\", \"\"];\nfunction NzTreeNodeSwitcherComponent_ng_container_0_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"i\", 4);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"ant-select-tree-switcher-icon\", ctx_r5.nzSelectMode)(\"ant-tree-switcher-icon\", !ctx_r5.nzSelectMode);\n} }\nconst _c1 = function (a0, a1) { return { $implicit: a0, origin: a1 }; };\nfunction NzTreeNodeSwitcherComponent_ng_container_0_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzTreeNodeSwitcherComponent_ng_container_0_ng_container_1_ng_container_1_Template, 2, 4, \"ng-container\", 3);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r4.nzExpandedIcon)(\"nzStringTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(2, _c1, ctx_r4.context, ctx_r4.context.origin));\n} }\nfunction NzTreeNodeSwitcherComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzTreeNodeSwitcherComponent_ng_container_0_ng_container_1_Template, 2, 5, \"ng-container\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    const _r2 = ɵngcc0.ɵɵreference(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.isLoading)(\"ngIfElse\", _r2);\n} }\nfunction NzTreeNodeSwitcherComponent_ng_container_1_ng_container_1_ng_container_1_i_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 7);\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵproperty(\"nzType\", ctx_r8.isSwitcherOpen ? \"minus-square\" : \"plus-square\");\n} }\nfunction NzTreeNodeSwitcherComponent_ng_container_1_ng_container_1_ng_container_1_i_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 8);\n} }\nfunction NzTreeNodeSwitcherComponent_ng_container_1_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzTreeNodeSwitcherComponent_ng_container_1_ng_container_1_ng_container_1_i_1_Template, 1, 1, \"i\", 5);\n    ɵngcc0.ɵɵtemplate(2, NzTreeNodeSwitcherComponent_ng_container_1_ng_container_1_ng_container_1_i_2_Template, 1, 0, \"i\", 6);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r7.isShowLineIcon);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r7.isShowLineIcon);\n} }\nfunction NzTreeNodeSwitcherComponent_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzTreeNodeSwitcherComponent_ng_container_1_ng_container_1_ng_container_1_Template, 3, 2, \"ng-container\", 3);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r6.nzExpandedIcon)(\"nzStringTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(2, _c1, ctx_r6.context, ctx_r6.context.origin));\n} }\nfunction NzTreeNodeSwitcherComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzTreeNodeSwitcherComponent_ng_container_1_ng_container_1_Template, 2, 5, \"ng-container\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    const _r2 = ɵngcc0.ɵɵreference(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r1.isLoading)(\"ngIfElse\", _r2);\n} }\nfunction NzTreeNodeSwitcherComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 9);\n} if (rf & 2) {\n    ɵngcc0.ɵɵproperty(\"nzSpin\", true);\n} }\nfunction NzTreeNodeTitleComponent_ng_template_0_Template(rf, ctx) { }\nfunction NzTreeNodeTitleComponent_ng_container_1_span_1_i_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 6);\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"nzType\", ctx_r4.icon);\n} }\nfunction NzTreeNodeTitleComponent_ng_container_1_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵelementStart(1, \"span\");\n    ɵngcc0.ɵɵtemplate(2, NzTreeNodeTitleComponent_ng_container_1_span_1_i_2_Template, 1, 1, \"i\", 5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"ant-tree-icon__open\", ctx_r2.isSwitcherOpen)(\"ant-tree-icon__close\", ctx_r2.isSwitcherClose)(\"ant-tree-icon_loading\", ctx_r2.isLoading)(\"ant-select-tree-iconEle\", ctx_r2.selectMode)(\"ant-tree-iconEle\", !ctx_r2.selectMode);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"ant-select-tree-iconEle\", ctx_r2.selectMode)(\"ant-select-tree-icon__customize\", ctx_r2.selectMode)(\"ant-tree-iconEle\", !ctx_r2.selectMode)(\"ant-tree-icon__customize\", !ctx_r2.selectMode);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.icon);\n} }\nfunction NzTreeNodeTitleComponent_ng_container_1_nz_tree_drop_indicator_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nz-tree-drop-indicator\", 7);\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"dropPosition\", ctx_r3.dragPosition)(\"level\", ctx_r3.context.level);\n} }\nfunction NzTreeNodeTitleComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzTreeNodeTitleComponent_ng_container_1_span_1_Template, 3, 19, \"span\", 2);\n    ɵngcc0.ɵɵelement(2, \"span\", 3);\n    ɵngcc0.ɵɵpipe(3, \"nzHighlight\");\n    ɵngcc0.ɵɵtemplate(4, NzTreeNodeTitleComponent_ng_container_1_nz_tree_drop_indicator_4_Template, 1, 2, \"nz-tree-drop-indicator\", 4);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.icon && ctx_r1.showIcon);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ɵngcc0.ɵɵpipeBind4(3, 3, ctx_r1.title, ctx_r1.matchedValue, \"i\", \"font-highlight\"), ɵngcc0.ɵɵsanitizeHtml);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.showIndicator);\n} }\nfunction NzTreeNodeBuiltinComponent_nz_tree_node_switcher_1_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"nz-tree-node-switcher\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTreeNodeBuiltinComponent_nz_tree_node_switcher_1_Template_nz_tree_node_switcher_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.clickExpand($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"nzShowExpand\", ctx_r0.nzShowExpand)(\"nzShowLine\", ctx_r0.nzShowLine)(\"nzExpandedIcon\", ctx_r0.nzExpandedIcon)(\"nzSelectMode\", ctx_r0.nzSelectMode)(\"context\", ctx_r0.nzTreeNode)(\"isLeaf\", ctx_r0.isLeaf)(\"isExpanded\", ctx_r0.isExpanded)(\"isLoading\", ctx_r0.isLoading);\n} }\nfunction NzTreeNodeBuiltinComponent_nz_tree_node_checkbox_2_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"nz-tree-node-checkbox\", 5);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTreeNodeBuiltinComponent_nz_tree_node_checkbox_2_Template_nz_tree_node_checkbox_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.clickCheckBox($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"nzSelectMode\", ctx_r1.nzSelectMode)(\"isChecked\", ctx_r1.isChecked)(\"isHalfChecked\", ctx_r1.isHalfChecked)(\"isDisabled\", ctx_r1.isDisabled)(\"isDisableCheckbox\", ctx_r1.isDisableCheckbox);\n} }\nconst _c2 = [\"nzTreeTemplate\"];\nfunction NzTreeComponent_cdk_virtual_scroll_viewport_10_ng_container_2_ng_template_2_Template(rf, ctx) { }\nconst _c3 = function (a0) { return { $implicit: a0 }; };\nfunction NzTreeComponent_cdk_virtual_scroll_viewport_10_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1, \"\\n            \");\n    ɵngcc0.ɵɵtemplate(2, NzTreeComponent_cdk_virtual_scroll_viewport_10_ng_container_2_ng_template_2_Template, 0, 0, \"ng-template\", 8);\n    ɵngcc0.ɵɵtext(3, \"\\n          \");\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const node_r5 = ctx.$implicit;\n    ɵngcc0.ɵɵnextContext(2);\n    const _r2 = ɵngcc0.ɵɵreference(17);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r2)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c3, node_r5));\n} }\nfunction NzTreeComponent_cdk_virtual_scroll_viewport_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"cdk-virtual-scroll-viewport\", 6);\n    ɵngcc0.ɵɵtext(1, \"\\n          \");\n    ɵngcc0.ɵɵtemplate(2, NzTreeComponent_cdk_virtual_scroll_viewport_10_ng_container_2_Template, 4, 4, \"ng-container\", 7);\n    ɵngcc0.ɵɵtext(3, \"\\n        \");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"height\", ctx_r0.nzVirtualHeight);\n    ɵngcc0.ɵɵclassProp(\"ant-select-tree-list-holder-inner\", ctx_r0.nzSelectMode)(\"ant-tree-list-holder-inner\", !ctx_r0.nzSelectMode);\n    ɵngcc0.ɵɵproperty(\"itemSize\", ctx_r0.nzVirtualItemSize)(\"minBufferPx\", ctx_r0.nzVirtualMinBufferPx)(\"maxBufferPx\", ctx_r0.nzVirtualMaxBufferPx);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"cdkVirtualForOf\", ctx_r0.nzFlattenNodes)(\"cdkVirtualForTrackBy\", ctx_r0.trackByFlattenNode);\n} }\nfunction NzTreeComponent_div_12_ng_container_2_ng_template_2_Template(rf, ctx) { }\nfunction NzTreeComponent_div_12_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1, \"\\n            \");\n    ɵngcc0.ɵɵtemplate(2, NzTreeComponent_div_12_ng_container_2_ng_template_2_Template, 0, 0, \"ng-template\", 8);\n    ɵngcc0.ɵɵtext(3, \"\\n          \");\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const node_r8 = ctx.$implicit;\n    ɵngcc0.ɵɵnextContext(2);\n    const _r2 = ɵngcc0.ɵɵreference(17);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r2)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c3, node_r8));\n} }\nfunction NzTreeComponent_div_12_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 9);\n    ɵngcc0.ɵɵtext(1, \"\\n          \");\n    ɵngcc0.ɵɵtemplate(2, NzTreeComponent_div_12_ng_container_2_Template, 4, 4, \"ng-container\", 10);\n    ɵngcc0.ɵɵtext(3, \"\\n        \");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"ant-select-tree-list-holder-inner\", ctx_r1.nzSelectMode)(\"ant-tree-list-holder-inner\", !ctx_r1.nzSelectMode);\n    ɵngcc0.ɵɵproperty(\"@.disabled\", ctx_r1.beforeInit || (ctx_r1.noAnimation == null ? null : ctx_r1.noAnimation.nzNoAnimation))(\"nzNoAnimation\", ctx_r1.noAnimation == null ? null : ctx_r1.noAnimation.nzNoAnimation)(\"@treeCollapseMotion\", ctx_r1.nzFlattenNodes.length);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.nzFlattenNodes)(\"ngForTrackBy\", ctx_r1.trackByFlattenNode);\n} }\nfunction NzTreeComponent_ng_template_16_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵtext(0, \"\\n      \");\n    ɵngcc0.ɵɵelementStart(1, \"nz-tree-node\", 11);\n    ɵngcc0.ɵɵlistener(\"nzExpandChange\", function NzTreeComponent_ng_template_16_Template_nz_tree_node_nzExpandChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.eventTriggerChanged($event); })(\"nzClick\", function NzTreeComponent_ng_template_16_Template_nz_tree_node_nzClick_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.eventTriggerChanged($event); })(\"nzDblClick\", function NzTreeComponent_ng_template_16_Template_nz_tree_node_nzDblClick_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.eventTriggerChanged($event); })(\"nzContextMenu\", function NzTreeComponent_ng_template_16_Template_nz_tree_node_nzContextMenu_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15.eventTriggerChanged($event); })(\"nzCheckBoxChange\", function NzTreeComponent_ng_template_16_Template_nz_tree_node_nzCheckBoxChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16.eventTriggerChanged($event); })(\"nzOnDragStart\", function NzTreeComponent_ng_template_16_Template_nz_tree_node_nzOnDragStart_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17.eventTriggerChanged($event); })(\"nzOnDragEnter\", function NzTreeComponent_ng_template_16_Template_nz_tree_node_nzOnDragEnter_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.eventTriggerChanged($event); })(\"nzOnDragOver\", function NzTreeComponent_ng_template_16_Template_nz_tree_node_nzOnDragOver_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r19 = ɵngcc0.ɵɵnextContext(); return ctx_r19.eventTriggerChanged($event); })(\"nzOnDragLeave\", function NzTreeComponent_ng_template_16_Template_nz_tree_node_nzOnDragLeave_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r20 = ɵngcc0.ɵɵnextContext(); return ctx_r20.eventTriggerChanged($event); })(\"nzOnDragEnd\", function NzTreeComponent_ng_template_16_Template_nz_tree_node_nzOnDragEnd_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r21 = ɵngcc0.ɵɵnextContext(); return ctx_r21.eventTriggerChanged($event); })(\"nzOnDrop\", function NzTreeComponent_ng_template_16_Template_nz_tree_node_nzOnDrop_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r22 = ɵngcc0.ɵɵnextContext(); return ctx_r22.eventTriggerChanged($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(2, \"\\n    \");\n} if (rf & 2) {\n    const treeNode_r10 = ctx.$implicit;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"icon\", treeNode_r10.icon)(\"title\", treeNode_r10.title)(\"isLoading\", treeNode_r10.isLoading)(\"isSelected\", treeNode_r10.isSelected)(\"isDisabled\", treeNode_r10.isDisabled)(\"isMatched\", treeNode_r10.isMatched)(\"isExpanded\", treeNode_r10.isExpanded)(\"isLeaf\", treeNode_r10.isLeaf)(\"isStart\", treeNode_r10.isStart)(\"isEnd\", treeNode_r10.isEnd)(\"isChecked\", treeNode_r10.isChecked)(\"isHalfChecked\", treeNode_r10.isHalfChecked)(\"isDisableCheckbox\", treeNode_r10.isDisableCheckbox)(\"isSelectable\", treeNode_r10.isSelectable)(\"canHide\", treeNode_r10.canHide)(\"nzTreeNode\", treeNode_r10)(\"nzSelectMode\", ctx_r3.nzSelectMode)(\"nzShowLine\", ctx_r3.nzShowLine)(\"nzExpandedIcon\", ctx_r3.nzExpandedIcon)(\"nzDraggable\", ctx_r3.nzDraggable)(\"nzCheckable\", ctx_r3.nzCheckable)(\"nzShowExpand\", ctx_r3.nzShowExpand)(\"nzAsyncData\", ctx_r3.nzAsyncData)(\"nzSearchValue\", ctx_r3.nzSearchValue)(\"nzHideUnMatched\", ctx_r3.nzHideUnMatched)(\"nzBeforeDrop\", ctx_r3.nzBeforeDrop)(\"nzShowIcon\", ctx_r3.nzShowIcon)(\"nzTreeTemplate\", ctx_r3.nzTreeTemplate || ctx_r3.nzTreeTemplateChild);\n} }\nexport { NzTreeNode } from 'ng-zorro-antd/core/tree';\nimport { __decorate, __metadata } from 'tslib';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { treeCollapseMotion } from 'ng-zorro-antd/core/animation';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeDropIndicatorComponent {\n    constructor(cdr) {\n        this.cdr = cdr;\n        this.level = 1;\n        this.direction = 'ltr';\n        this.style = {};\n    }\n    ngOnChanges(_changes) {\n        this.renderIndicator(this.dropPosition, this.direction);\n    }\n    renderIndicator(dropPosition, direction = 'ltr') {\n        const offset = 4;\n        const startPosition = direction === 'ltr' ? 'left' : 'right';\n        const endPosition = direction === 'ltr' ? 'right' : 'left';\n        const style = {\n            [startPosition]: `${offset}px`,\n            [endPosition]: '0px'\n        };\n        switch (dropPosition) {\n            case -1:\n                style.top = `${-3}px`;\n                break;\n            case 1:\n                style.bottom = `${-3}px`;\n                break;\n            case 0:\n                // dropPosition === 0\n                style.bottom = `${-3}px`;\n                style[startPosition] = `${offset + 24}px`;\n                break;\n            default:\n                style.display = 'none';\n                break;\n        }\n        this.style = style;\n        this.cdr.markForCheck();\n    }\n}\nNzTreeDropIndicatorComponent.ɵfac = function NzTreeDropIndicatorComponent_Factory(t) { return new (t || NzTreeDropIndicatorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nNzTreeDropIndicatorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzTreeDropIndicatorComponent, selectors: [[\"nz-tree-drop-indicator\"]], hostVars: 4, hostBindings: function NzTreeDropIndicatorComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleMap(ctx.style);\n        ɵngcc0.ɵɵclassProp(\"ant-tree-drop-indicator\", true);\n    } }, inputs: { level: \"level\", direction: \"direction\", dropPosition: \"dropPosition\" }, exportAs: [\"NzTreeDropIndicator\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function NzTreeDropIndicatorComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\nNzTreeDropIndicatorComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNzTreeDropIndicatorComponent.propDecorators = {\n    dropPosition: [{ type: Input }],\n    level: [{ type: Input }],\n    direction: [{ type: Input }]\n};\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeIndentComponent {\n    constructor() {\n        this.nzTreeLevel = 0;\n        this.nzIsStart = [];\n        this.nzIsEnd = [];\n        this.nzSelectMode = false;\n        this.listOfUnit = [];\n    }\n    ngOnInit() { }\n    ngOnChanges(changes) {\n        const { nzTreeLevel } = changes;\n        if (nzTreeLevel) {\n            this.listOfUnit = [...new Array(nzTreeLevel.currentValue || 0)];\n        }\n    }\n}\nNzTreeIndentComponent.ɵfac = function NzTreeIndentComponent_Factory(t) { return new (t || NzTreeIndentComponent)(); };\nNzTreeIndentComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzTreeIndentComponent, selectors: [[\"nz-tree-indent\"]], hostVars: 5, hostBindings: function NzTreeIndentComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-hidden\", true);\n        ɵngcc0.ɵɵclassProp(\"ant-tree-indent\", !ctx.nzSelectMode)(\"ant-select-tree-indent\", ctx.nzSelectMode);\n    } }, inputs: { nzTreeLevel: \"nzTreeLevel\", nzIsStart: \"nzIsStart\", nzIsEnd: \"nzIsEnd\", nzSelectMode: \"nzSelectMode\" }, exportAs: [\"nzTreeIndent\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [[3, \"ant-tree-indent-unit\", \"ant-select-tree-indent-unit\", \"ant-select-tree-indent-unit-start\", \"ant-tree-indent-unit-start\", \"ant-select-tree-indent-unit-end\", \"ant-tree-indent-unit-end\", 4, \"ngFor\", \"ngForOf\"]], template: function NzTreeIndentComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NzTreeIndentComponent_span_0_Template, 1, 12, \"span\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.listOfUnit);\n    } }, directives: [ɵngcc1.NgForOf], encapsulation: 2, changeDetection: 0 });\nNzTreeIndentComponent.propDecorators = {\n    nzTreeLevel: [{ type: Input }],\n    nzIsStart: [{ type: Input }],\n    nzIsEnd: [{ type: Input }],\n    nzSelectMode: [{ type: Input }]\n};\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeNodeBuiltinCheckboxComponent {\n    constructor() {\n        this.nzSelectMode = false;\n    }\n}\nNzTreeNodeBuiltinCheckboxComponent.ɵfac = function NzTreeNodeBuiltinCheckboxComponent_Factory(t) { return new (t || NzTreeNodeBuiltinCheckboxComponent)(); };\nNzTreeNodeBuiltinCheckboxComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzTreeNodeBuiltinCheckboxComponent, selectors: [[\"nz-tree-node-checkbox\", \"builtin\", \"\"]], hostVars: 16, hostBindings: function NzTreeNodeBuiltinCheckboxComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ant-select-tree-checkbox\", ctx.nzSelectMode)(\"ant-select-tree-checkbox-checked\", ctx.nzSelectMode && ctx.isChecked)(\"ant-select-tree-checkbox-indeterminate\", ctx.nzSelectMode && ctx.isHalfChecked)(\"ant-select-tree-checkbox-disabled\", ctx.nzSelectMode && (ctx.isDisabled || ctx.isDisableCheckbox))(\"ant-tree-checkbox\", !ctx.nzSelectMode)(\"ant-tree-checkbox-checked\", !ctx.nzSelectMode && ctx.isChecked)(\"ant-tree-checkbox-indeterminate\", !ctx.nzSelectMode && ctx.isHalfChecked)(\"ant-tree-checkbox-disabled\", !ctx.nzSelectMode && (ctx.isDisabled || ctx.isDisableCheckbox));\n    } }, inputs: { nzSelectMode: \"nzSelectMode\", isChecked: \"isChecked\", isHalfChecked: \"isHalfChecked\", isDisabled: \"isDisabled\", isDisableCheckbox: \"isDisableCheckbox\" }, attrs: _c0, decls: 1, vars: 4, template: function NzTreeNodeBuiltinCheckboxComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"span\");\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ant-tree-checkbox-inner\", !ctx.nzSelectMode)(\"ant-select-tree-checkbox-inner\", ctx.nzSelectMode);\n    } }, encapsulation: 2, changeDetection: 0 });\nNzTreeNodeBuiltinCheckboxComponent.propDecorators = {\n    nzSelectMode: [{ type: Input }],\n    isChecked: [{ type: Input }],\n    isHalfChecked: [{ type: Input }],\n    isDisabled: [{ type: Input }],\n    isDisableCheckbox: [{ type: Input }]\n};\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeNodeSwitcherComponent {\n    constructor() {\n        this.nzSelectMode = false;\n    }\n    get isShowLineIcon() {\n        return !this.isLeaf && !!this.nzShowLine;\n    }\n    get isShowSwitchIcon() {\n        return !this.isLeaf && !this.nzShowLine;\n    }\n    get isSwitcherOpen() {\n        return !!this.isExpanded && !this.isLeaf;\n    }\n    get isSwitcherClose() {\n        return !this.isExpanded && !this.isLeaf;\n    }\n}\nNzTreeNodeSwitcherComponent.ɵfac = function NzTreeNodeSwitcherComponent_Factory(t) { return new (t || NzTreeNodeSwitcherComponent)(); };\nNzTreeNodeSwitcherComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzTreeNodeSwitcherComponent, selectors: [[\"nz-tree-node-switcher\"]], hostVars: 16, hostBindings: function NzTreeNodeSwitcherComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ant-select-tree-switcher\", ctx.nzSelectMode)(\"ant-select-tree-switcher-noop\", ctx.nzSelectMode && ctx.isLeaf)(\"ant-select-tree-switcher_open\", ctx.nzSelectMode && ctx.isSwitcherOpen)(\"ant-select-tree-switcher_close\", ctx.nzSelectMode && ctx.isSwitcherClose)(\"ant-tree-switcher\", !ctx.nzSelectMode)(\"ant-tree-switcher-noop\", !ctx.nzSelectMode && ctx.isLeaf)(\"ant-tree-switcher_open\", !ctx.nzSelectMode && ctx.isSwitcherOpen)(\"ant-tree-switcher_close\", !ctx.nzSelectMode && ctx.isSwitcherClose);\n    } }, inputs: { nzSelectMode: \"nzSelectMode\", nzShowExpand: \"nzShowExpand\", nzShowLine: \"nzShowLine\", nzExpandedIcon: \"nzExpandedIcon\", context: \"context\", isLeaf: \"isLeaf\", isLoading: \"isLoading\", isExpanded: \"isExpanded\" }, decls: 4, vars: 2, consts: [[4, \"ngIf\"], [\"loadingTemplate\", \"\"], [4, \"ngIf\", \"ngIfElse\"], [4, \"nzStringTemplateOutlet\", \"nzStringTemplateOutletContext\"], [\"nz-icon\", \"\", \"nzType\", \"caret-down\"], [\"nz-icon\", \"\", \"class\", \"ant-tree-switcher-line-icon\", 3, \"nzType\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"file\", \"class\", \"ant-tree-switcher-line-icon\", 4, \"ngIf\"], [\"nz-icon\", \"\", 1, \"ant-tree-switcher-line-icon\", 3, \"nzType\"], [\"nz-icon\", \"\", \"nzType\", \"file\", 1, \"ant-tree-switcher-line-icon\"], [\"nz-icon\", \"\", \"nzType\", \"loading\", 1, \"ant-tree-switcher-loading-icon\", 3, \"nzSpin\"]], template: function NzTreeNodeSwitcherComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NzTreeNodeSwitcherComponent_ng_container_0_Template, 2, 2, \"ng-container\", 0);\n        ɵngcc0.ɵɵtemplate(1, NzTreeNodeSwitcherComponent_ng_container_1_Template, 2, 2, \"ng-container\", 0);\n        ɵngcc0.ɵɵtemplate(2, NzTreeNodeSwitcherComponent_ng_template_2_Template, 1, 1, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isShowSwitchIcon);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzShowLine);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.NzStringTemplateOutletDirective, ɵngcc3.NzIconDirective], encapsulation: 2, changeDetection: 0 });\nNzTreeNodeSwitcherComponent.propDecorators = {\n    nzShowExpand: [{ type: Input }],\n    nzShowLine: [{ type: Input }],\n    nzExpandedIcon: [{ type: Input }],\n    nzSelectMode: [{ type: Input }],\n    context: [{ type: Input }],\n    isLeaf: [{ type: Input }],\n    isLoading: [{ type: Input }],\n    isExpanded: [{ type: Input }]\n};\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeNodeTitleComponent {\n    constructor(cdr) {\n        this.cdr = cdr;\n        this.treeTemplate = null;\n        this.selectMode = false;\n        // Drag indicator\n        this.showIndicator = true;\n    }\n    get canDraggable() {\n        return this.draggable && !this.isDisabled ? true : null;\n    }\n    get matchedValue() {\n        return this.isMatched ? this.searchValue : '';\n    }\n    get isSwitcherOpen() {\n        return this.isExpanded && !this.isLeaf;\n    }\n    get isSwitcherClose() {\n        return !this.isExpanded && !this.isLeaf;\n    }\n    ngOnChanges(changes) {\n        const { showIndicator, dragPosition } = changes;\n        if (showIndicator || dragPosition) {\n            this.cdr.markForCheck();\n        }\n    }\n}\nNzTreeNodeTitleComponent.ɵfac = function NzTreeNodeTitleComponent_Factory(t) { return new (t || NzTreeNodeTitleComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nNzTreeNodeTitleComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzTreeNodeTitleComponent, selectors: [[\"nz-tree-node-title\"]], hostVars: 21, hostBindings: function NzTreeNodeTitleComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"title\", ctx.title)(\"draggable\", ctx.canDraggable)(\"aria-grabbed\", ctx.canDraggable);\n        ɵngcc0.ɵɵclassProp(\"draggable\", ctx.canDraggable)(\"ant-select-tree-node-content-wrapper\", ctx.selectMode)(\"ant-select-tree-node-content-wrapper-open\", ctx.selectMode && ctx.isSwitcherOpen)(\"ant-select-tree-node-content-wrapper-close\", ctx.selectMode && ctx.isSwitcherClose)(\"ant-select-tree-node-selected\", ctx.selectMode && ctx.isSelected)(\"ant-tree-node-content-wrapper\", !ctx.selectMode)(\"ant-tree-node-content-wrapper-open\", !ctx.selectMode && ctx.isSwitcherOpen)(\"ant-tree-node-content-wrapper-close\", !ctx.selectMode && ctx.isSwitcherClose)(\"ant-tree-node-selected\", !ctx.selectMode && ctx.isSelected);\n    } }, inputs: { treeTemplate: \"treeTemplate\", selectMode: \"selectMode\", showIndicator: \"showIndicator\", searchValue: \"searchValue\", draggable: \"draggable\", showIcon: \"showIcon\", context: \"context\", icon: \"icon\", title: \"title\", isLoading: \"isLoading\", isSelected: \"isSelected\", isDisabled: \"isDisabled\", isMatched: \"isMatched\", isExpanded: \"isExpanded\", isLeaf: \"isLeaf\", dragPosition: \"dragPosition\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 6, consts: [[3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [4, \"ngIf\"], [3, \"ant-tree-icon__open\", \"ant-tree-icon__close\", \"ant-tree-icon_loading\", \"ant-select-tree-iconEle\", \"ant-tree-iconEle\", 4, \"ngIf\"], [1, \"ant-tree-title\", 3, \"innerHTML\"], [3, \"dropPosition\", \"level\", 4, \"ngIf\"], [\"nz-icon\", \"\", 3, \"nzType\", 4, \"ngIf\"], [\"nz-icon\", \"\", 3, \"nzType\"], [3, \"dropPosition\", \"level\"]], template: function NzTreeNodeTitleComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NzTreeNodeTitleComponent_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n        ɵngcc0.ɵɵtemplate(1, NzTreeNodeTitleComponent_ng_container_1_Template, 5, 8, \"ng-container\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.treeTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(3, _c1, ctx.context, ctx.context.origin));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.treeTemplate);\n    } }, directives: [ɵngcc1.NgTemplateOutlet, ɵngcc1.NgIf, ɵngcc3.NzIconDirective, NzTreeDropIndicatorComponent], pipes: [ɵngcc4.NzHighlightPipe], encapsulation: 2, changeDetection: 0 });\nNzTreeNodeTitleComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nNzTreeNodeTitleComponent.propDecorators = {\n    searchValue: [{ type: Input }],\n    treeTemplate: [{ type: Input }],\n    draggable: [{ type: Input }],\n    showIcon: [{ type: Input }],\n    selectMode: [{ type: Input }],\n    context: [{ type: Input }],\n    icon: [{ type: Input }],\n    title: [{ type: Input }],\n    isLoading: [{ type: Input }],\n    isSelected: [{ type: Input }],\n    isDisabled: [{ type: Input }],\n    isMatched: [{ type: Input }],\n    isExpanded: [{ type: Input }],\n    isLeaf: [{ type: Input }],\n    showIndicator: [{ type: Input }],\n    dragPosition: [{ type: Input }]\n};\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeNodeBuiltinComponent {\n    constructor(nzTreeService, ngZone, renderer, elementRef, cdr, noAnimation) {\n        this.nzTreeService = nzTreeService;\n        this.ngZone = ngZone;\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.cdr = cdr;\n        this.noAnimation = noAnimation;\n        /**\n         * for global property\n         */\n        this.icon = '';\n        this.title = '';\n        this.isLoading = false;\n        this.isSelected = false;\n        this.isDisabled = false;\n        this.isMatched = false;\n        this.isStart = [];\n        this.isEnd = [];\n        this.nzHideUnMatched = false;\n        this.nzNoAnimation = false;\n        this.nzSelectMode = false;\n        this.nzShowIcon = false;\n        this.nzTreeTemplate = null;\n        this.nzSearchValue = '';\n        this.nzDraggable = false;\n        this.nzClick = new EventEmitter();\n        this.nzDblClick = new EventEmitter();\n        this.nzContextMenu = new EventEmitter();\n        this.nzCheckBoxChange = new EventEmitter();\n        this.nzExpandChange = new EventEmitter();\n        this.nzOnDragStart = new EventEmitter();\n        this.nzOnDragEnter = new EventEmitter();\n        this.nzOnDragOver = new EventEmitter();\n        this.nzOnDragLeave = new EventEmitter();\n        this.nzOnDrop = new EventEmitter();\n        this.nzOnDragEnd = new EventEmitter();\n        /**\n         * drag var\n         */\n        this.destroy$ = new Subject();\n        this.dragPos = 2;\n        this.dragPosClass = {\n            '0': 'drag-over',\n            '1': 'drag-over-gap-bottom',\n            '-1': 'drag-over-gap-top'\n        };\n        this.showIndicator = false;\n    }\n    /**\n     * default set\n     */\n    get displayStyle() {\n        // to hide unmatched nodes\n        return this.nzSearchValue && this.nzHideUnMatched && !this.isMatched && !this.isExpanded && this.canHide ? 'none' : '';\n    }\n    get isSwitcherOpen() {\n        return this.isExpanded && !this.isLeaf;\n    }\n    get isSwitcherClose() {\n        return !this.isExpanded && !this.isLeaf;\n    }\n    onMousedown(event) {\n        if (this.nzSelectMode) {\n            event.preventDefault();\n        }\n    }\n    /**\n     * collapse node\n     * @param event\n     */\n    clickExpand(event) {\n        event.preventDefault();\n        if (!this.isLoading && !this.isLeaf) {\n            // set async state\n            if (this.nzAsyncData && this.nzTreeNode.children.length === 0 && !this.isExpanded) {\n                this.nzTreeNode.isLoading = true;\n            }\n            this.nzTreeNode.setExpanded(!this.isExpanded);\n        }\n        this.nzTreeService.setExpandedNodeList(this.nzTreeNode);\n        const eventNext = this.nzTreeService.formatEvent('expand', this.nzTreeNode, event);\n        this.nzExpandChange.emit(eventNext);\n    }\n    clickSelect(event) {\n        event.preventDefault();\n        if (this.isSelectable && !this.isDisabled) {\n            this.nzTreeNode.isSelected = !this.nzTreeNode.isSelected;\n        }\n        this.nzTreeService.setSelectedNodeList(this.nzTreeNode);\n        const eventNext = this.nzTreeService.formatEvent('click', this.nzTreeNode, event);\n        this.nzClick.emit(eventNext);\n    }\n    dblClick(event) {\n        event.preventDefault();\n        const eventNext = this.nzTreeService.formatEvent('dblclick', this.nzTreeNode, event);\n        this.nzDblClick.emit(eventNext);\n    }\n    contextMenu(event) {\n        event.preventDefault();\n        const eventNext = this.nzTreeService.formatEvent('contextmenu', this.nzTreeNode, event);\n        this.nzContextMenu.emit(eventNext);\n    }\n    /**\n     * check node\n     * @param event\n     */\n    clickCheckBox(event) {\n        event.preventDefault();\n        // return if node is disabled\n        if (this.isDisabled || this.isDisableCheckbox) {\n            return;\n        }\n        this.nzTreeNode.isChecked = !this.nzTreeNode.isChecked;\n        this.nzTreeNode.isHalfChecked = false;\n        this.nzTreeService.setCheckedNodeList(this.nzTreeNode);\n        const eventNext = this.nzTreeService.formatEvent('check', this.nzTreeNode, event);\n        this.nzCheckBoxChange.emit(eventNext);\n    }\n    clearDragClass() {\n        const dragClass = ['drag-over-gap-top', 'drag-over-gap-bottom', 'drag-over', 'drop-target'];\n        dragClass.forEach(e => {\n            this.renderer.removeClass(this.elementRef.nativeElement, e);\n        });\n    }\n    /**\n     * drag event\n     * @param e\n     */\n    handleDragStart(e) {\n        try {\n            // ie throw error\n            // firefox-need-it\n            e.dataTransfer.setData('text/plain', this.nzTreeNode.key);\n        }\n        catch (error) {\n            // empty\n        }\n        this.nzTreeService.setSelectedNode(this.nzTreeNode);\n        const eventNext = this.nzTreeService.formatEvent('dragstart', this.nzTreeNode, e);\n        this.nzOnDragStart.emit(eventNext);\n    }\n    handleDragEnter(e) {\n        var _a;\n        e.preventDefault();\n        // reset position\n        this.showIndicator = this.nzTreeNode.key !== ((_a = this.nzTreeService.getSelectedNode()) === null || _a === void 0 ? void 0 : _a.key);\n        this.renderIndicator(2);\n        this.ngZone.run(() => {\n            const eventNext = this.nzTreeService.formatEvent('dragenter', this.nzTreeNode, e);\n            this.nzOnDragEnter.emit(eventNext);\n        });\n    }\n    handleDragOver(e) {\n        e.preventDefault();\n        const dropPosition = this.nzTreeService.calcDropPosition(e);\n        if (this.dragPos !== dropPosition) {\n            this.clearDragClass();\n            this.renderIndicator(dropPosition);\n            // leaf node will pass\n            if (!(this.dragPos === 0 && this.isLeaf)) {\n                this.renderer.addClass(this.elementRef.nativeElement, this.dragPosClass[this.dragPos]);\n                this.renderer.addClass(this.elementRef.nativeElement, 'drop-target');\n            }\n        }\n        const eventNext = this.nzTreeService.formatEvent('dragover', this.nzTreeNode, e);\n        this.nzOnDragOver.emit(eventNext);\n    }\n    handleDragLeave(e) {\n        e.preventDefault();\n        this.renderIndicator(2);\n        this.clearDragClass();\n        const eventNext = this.nzTreeService.formatEvent('dragleave', this.nzTreeNode, e);\n        this.nzOnDragLeave.emit(eventNext);\n    }\n    handleDragDrop(e) {\n        this.ngZone.run(() => {\n            this.showIndicator = false;\n            this.clearDragClass();\n            const node = this.nzTreeService.getSelectedNode();\n            if (!node || (node && node.key === this.nzTreeNode.key) || (this.dragPos === 0 && this.isLeaf)) {\n                return;\n            }\n            // pass if node is leafNo\n            const dropEvent = this.nzTreeService.formatEvent('drop', this.nzTreeNode, e);\n            const dragEndEvent = this.nzTreeService.formatEvent('dragend', this.nzTreeNode, e);\n            if (this.nzBeforeDrop) {\n                this.nzBeforeDrop({\n                    dragNode: this.nzTreeService.getSelectedNode(),\n                    node: this.nzTreeNode,\n                    pos: this.dragPos\n                }).subscribe((canDrop) => {\n                    if (canDrop) {\n                        this.nzTreeService.dropAndApply(this.nzTreeNode, this.dragPos);\n                    }\n                    this.nzOnDrop.emit(dropEvent);\n                    this.nzOnDragEnd.emit(dragEndEvent);\n                });\n            }\n            else if (this.nzTreeNode) {\n                this.nzTreeService.dropAndApply(this.nzTreeNode, this.dragPos);\n                this.nzOnDrop.emit(dropEvent);\n            }\n        });\n    }\n    handleDragEnd(e) {\n        e.preventDefault();\n        this.ngZone.run(() => {\n            // if user do not custom beforeDrop\n            if (!this.nzBeforeDrop) {\n                const eventNext = this.nzTreeService.formatEvent('dragend', this.nzTreeNode, e);\n                this.nzOnDragEnd.emit(eventNext);\n            }\n        });\n    }\n    /**\n     * Listening to dragging events.\n     */\n    handDragEvent() {\n        this.ngZone.runOutsideAngular(() => {\n            if (this.nzDraggable) {\n                const nativeElement = this.elementRef.nativeElement;\n                this.destroy$ = new Subject();\n                fromEvent(nativeElement, 'dragstart')\n                    .pipe(takeUntil(this.destroy$))\n                    .subscribe((e) => this.handleDragStart(e));\n                fromEvent(nativeElement, 'dragenter')\n                    .pipe(takeUntil(this.destroy$))\n                    .subscribe((e) => this.handleDragEnter(e));\n                fromEvent(nativeElement, 'dragover')\n                    .pipe(takeUntil(this.destroy$))\n                    .subscribe((e) => this.handleDragOver(e));\n                fromEvent(nativeElement, 'dragleave')\n                    .pipe(takeUntil(this.destroy$))\n                    .subscribe((e) => this.handleDragLeave(e));\n                fromEvent(nativeElement, 'drop')\n                    .pipe(takeUntil(this.destroy$))\n                    .subscribe((e) => this.handleDragDrop(e));\n                fromEvent(nativeElement, 'dragend')\n                    .pipe(takeUntil(this.destroy$))\n                    .subscribe((e) => this.handleDragEnd(e));\n            }\n            else {\n                this.destroy$.next();\n                this.destroy$.complete();\n            }\n        });\n    }\n    markForCheck() {\n        this.cdr.markForCheck();\n    }\n    ngOnInit() {\n        this.nzTreeNode.component = this;\n    }\n    ngOnChanges(changes) {\n        const { nzDraggable } = changes;\n        if (nzDraggable) {\n            this.handDragEvent();\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    renderIndicator(dropPosition) {\n        this.ngZone.run(() => {\n            var _a;\n            this.showIndicator = dropPosition !== 2;\n            if (this.nzTreeNode.key === ((_a = this.nzTreeService.getSelectedNode()) === null || _a === void 0 ? void 0 : _a.key) || (dropPosition === 0 && this.isLeaf)) {\n                return;\n            }\n            this.dragPos = dropPosition;\n            this.cdr.markForCheck();\n        });\n    }\n}\nNzTreeNodeBuiltinComponent.ɵfac = function NzTreeNodeBuiltinComponent_Factory(t) { return new (t || NzTreeNodeBuiltinComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc5.NzTreeBaseService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.NzNoAnimationDirective, 9)); };\nNzTreeNodeBuiltinComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzTreeNodeBuiltinComponent, selectors: [[\"nz-tree-node\", \"builtin\", \"\"]], hostVars: 34, hostBindings: function NzTreeNodeBuiltinComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function NzTreeNodeBuiltinComponent_mousedown_HostBindingHandler($event) { return ctx.onMousedown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"display\", ctx.displayStyle);\n        ɵngcc0.ɵɵclassProp(\"ant-select-tree-treenode\", ctx.nzSelectMode)(\"ant-select-tree-treenode-disabled\", ctx.nzSelectMode && ctx.isDisabled)(\"ant-select-tree-treenode-switcher-open\", ctx.nzSelectMode && ctx.isSwitcherOpen)(\"ant-select-tree-treenode-switcher-close\", ctx.nzSelectMode && ctx.isSwitcherClose)(\"ant-select-tree-treenode-checkbox-checked\", ctx.nzSelectMode && ctx.isChecked)(\"ant-select-tree-treenode-checkbox-indeterminate\", ctx.nzSelectMode && ctx.isHalfChecked)(\"ant-select-tree-treenode-selected\", ctx.nzSelectMode && ctx.isSelected)(\"ant-select-tree-treenode-loading\", ctx.nzSelectMode && ctx.isLoading)(\"ant-tree-treenode\", !ctx.nzSelectMode)(\"ant-tree-treenode-disabled\", !ctx.nzSelectMode && ctx.isDisabled)(\"ant-tree-treenode-switcher-open\", !ctx.nzSelectMode && ctx.isSwitcherOpen)(\"ant-tree-treenode-switcher-close\", !ctx.nzSelectMode && ctx.isSwitcherClose)(\"ant-tree-treenode-checkbox-checked\", !ctx.nzSelectMode && ctx.isChecked)(\"ant-tree-treenode-checkbox-indeterminate\", !ctx.nzSelectMode && ctx.isHalfChecked)(\"ant-tree-treenode-selected\", !ctx.nzSelectMode && ctx.isSelected)(\"ant-tree-treenode-loading\", !ctx.nzSelectMode && ctx.isLoading);\n    } }, inputs: { icon: \"icon\", title: \"title\", isLoading: \"isLoading\", isSelected: \"isSelected\", isDisabled: \"isDisabled\", isMatched: \"isMatched\", isStart: \"isStart\", isEnd: \"isEnd\", nzHideUnMatched: \"nzHideUnMatched\", nzNoAnimation: \"nzNoAnimation\", nzSelectMode: \"nzSelectMode\", nzShowIcon: \"nzShowIcon\", nzTreeTemplate: \"nzTreeTemplate\", nzSearchValue: \"nzSearchValue\", nzDraggable: \"nzDraggable\", isExpanded: \"isExpanded\", isLeaf: \"isLeaf\", isChecked: \"isChecked\", isHalfChecked: \"isHalfChecked\", isDisableCheckbox: \"isDisableCheckbox\", isSelectable: \"isSelectable\", canHide: \"canHide\", nzTreeNode: \"nzTreeNode\", nzShowLine: \"nzShowLine\", nzShowExpand: \"nzShowExpand\", nzCheckable: \"nzCheckable\", nzAsyncData: \"nzAsyncData\", nzExpandedIcon: \"nzExpandedIcon\", nzBeforeDrop: \"nzBeforeDrop\" }, outputs: { nzClick: \"nzClick\", nzDblClick: \"nzDblClick\", nzContextMenu: \"nzContextMenu\", nzCheckBoxChange: \"nzCheckBoxChange\", nzExpandChange: \"nzExpandChange\", nzOnDragStart: \"nzOnDragStart\", nzOnDragEnter: \"nzOnDragEnter\", nzOnDragOver: \"nzOnDragOver\", nzOnDragLeave: \"nzOnDragLeave\", nzOnDrop: \"nzOnDrop\", nzOnDragEnd: \"nzOnDragEnd\" }, exportAs: [\"nzTreeBuiltinNode\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], attrs: _c0, decls: 4, vars: 22, consts: [[3, \"nzTreeLevel\", \"nzSelectMode\", \"nzIsStart\", \"nzIsEnd\"], [3, \"nzShowExpand\", \"nzShowLine\", \"nzExpandedIcon\", \"nzSelectMode\", \"context\", \"isLeaf\", \"isExpanded\", \"isLoading\", \"click\", 4, \"ngIf\"], [\"builtin\", \"\", 3, \"nzSelectMode\", \"isChecked\", \"isHalfChecked\", \"isDisabled\", \"isDisableCheckbox\", \"click\", 4, \"ngIf\"], [3, \"icon\", \"title\", \"isLoading\", \"isSelected\", \"isDisabled\", \"isMatched\", \"isExpanded\", \"isLeaf\", \"searchValue\", \"treeTemplate\", \"draggable\", \"showIcon\", \"selectMode\", \"context\", \"showIndicator\", \"dragPosition\", \"dblclick\", \"click\", \"contextmenu\"], [3, \"nzShowExpand\", \"nzShowLine\", \"nzExpandedIcon\", \"nzSelectMode\", \"context\", \"isLeaf\", \"isExpanded\", \"isLoading\", \"click\"], [\"builtin\", \"\", 3, \"nzSelectMode\", \"isChecked\", \"isHalfChecked\", \"isDisabled\", \"isDisableCheckbox\", \"click\"]], template: function NzTreeNodeBuiltinComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"nz-tree-indent\", 0);\n        ɵngcc0.ɵɵtemplate(1, NzTreeNodeBuiltinComponent_nz_tree_node_switcher_1_Template, 1, 8, \"nz-tree-node-switcher\", 1);\n        ɵngcc0.ɵɵtemplate(2, NzTreeNodeBuiltinComponent_nz_tree_node_checkbox_2_Template, 1, 5, \"nz-tree-node-checkbox\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"nz-tree-node-title\", 3);\n        ɵngcc0.ɵɵlistener(\"dblclick\", function NzTreeNodeBuiltinComponent_Template_nz_tree_node_title_dblclick_3_listener($event) { return ctx.dblClick($event); })(\"click\", function NzTreeNodeBuiltinComponent_Template_nz_tree_node_title_click_3_listener($event) { return ctx.clickSelect($event); })(\"contextmenu\", function NzTreeNodeBuiltinComponent_Template_nz_tree_node_title_contextmenu_3_listener($event) { return ctx.contextMenu($event); });\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"nzTreeLevel\", ctx.nzTreeNode.level)(\"nzSelectMode\", ctx.nzSelectMode)(\"nzIsStart\", ctx.isStart)(\"nzIsEnd\", ctx.isEnd);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzShowExpand);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzCheckable);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"icon\", ctx.icon)(\"title\", ctx.title)(\"isLoading\", ctx.isLoading)(\"isSelected\", ctx.isSelected)(\"isDisabled\", ctx.isDisabled)(\"isMatched\", ctx.isMatched)(\"isExpanded\", ctx.isExpanded)(\"isLeaf\", ctx.isLeaf)(\"searchValue\", ctx.nzSearchValue)(\"treeTemplate\", ctx.nzTreeTemplate)(\"draggable\", ctx.nzDraggable)(\"showIcon\", ctx.nzShowIcon)(\"selectMode\", ctx.nzSelectMode)(\"context\", ctx.nzTreeNode)(\"showIndicator\", ctx.showIndicator)(\"dragPosition\", ctx.dragPos);\n    } }, directives: [NzTreeIndentComponent, ɵngcc1.NgIf, NzTreeNodeTitleComponent, NzTreeNodeSwitcherComponent, NzTreeNodeBuiltinCheckboxComponent], encapsulation: 2, changeDetection: 0 });\nNzTreeNodeBuiltinComponent.ctorParameters = () => [\n    { type: NzTreeBaseService },\n    { type: NgZone },\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: NzNoAnimationDirective, decorators: [{ type: Host }, { type: Optional }] }\n];\nNzTreeNodeBuiltinComponent.propDecorators = {\n    icon: [{ type: Input }],\n    title: [{ type: Input }],\n    isLoading: [{ type: Input }],\n    isSelected: [{ type: Input }],\n    isDisabled: [{ type: Input }],\n    isMatched: [{ type: Input }],\n    isExpanded: [{ type: Input }],\n    isLeaf: [{ type: Input }],\n    isChecked: [{ type: Input }],\n    isHalfChecked: [{ type: Input }],\n    isDisableCheckbox: [{ type: Input }],\n    isSelectable: [{ type: Input }],\n    canHide: [{ type: Input }],\n    isStart: [{ type: Input }],\n    isEnd: [{ type: Input }],\n    nzTreeNode: [{ type: Input }],\n    nzShowLine: [{ type: Input }],\n    nzShowExpand: [{ type: Input }],\n    nzCheckable: [{ type: Input }],\n    nzAsyncData: [{ type: Input }],\n    nzHideUnMatched: [{ type: Input }],\n    nzNoAnimation: [{ type: Input }],\n    nzSelectMode: [{ type: Input }],\n    nzShowIcon: [{ type: Input }],\n    nzExpandedIcon: [{ type: Input }],\n    nzTreeTemplate: [{ type: Input }],\n    nzBeforeDrop: [{ type: Input }],\n    nzSearchValue: [{ type: Input }],\n    nzDraggable: [{ type: Input }],\n    nzClick: [{ type: Output }],\n    nzDblClick: [{ type: Output }],\n    nzContextMenu: [{ type: Output }],\n    nzCheckBoxChange: [{ type: Output }],\n    nzExpandChange: [{ type: Output }],\n    nzOnDragStart: [{ type: Output }],\n    nzOnDragEnter: [{ type: Output }],\n    nzOnDragOver: [{ type: Output }],\n    nzOnDragLeave: [{ type: Output }],\n    nzOnDrop: [{ type: Output }],\n    nzOnDragEnd: [{ type: Output }]\n};\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzTreeNodeBuiltinComponent.prototype, \"nzShowLine\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzTreeNodeBuiltinComponent.prototype, \"nzShowExpand\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzTreeNodeBuiltinComponent.prototype, \"nzCheckable\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzTreeNodeBuiltinComponent.prototype, \"nzAsyncData\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzTreeNodeBuiltinComponent.prototype, \"nzHideUnMatched\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzTreeNodeBuiltinComponent.prototype, \"nzNoAnimation\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzTreeNodeBuiltinComponent.prototype, \"nzSelectMode\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzTreeNodeBuiltinComponent.prototype, \"nzShowIcon\", void 0);\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeService extends NzTreeBaseService {\n    constructor() {\n        super();\n    }\n}\nNzTreeService.ɵfac = function NzTreeService_Factory(t) { return new (t || NzTreeService)(); };\nNzTreeService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NzTreeService, factory: NzTreeService.ɵfac });\nNzTreeService.ctorParameters = () => [];\n\nfunction NzTreeServiceFactory(higherOrderService, treeService) {\n    return higherOrderService ? higherOrderService : treeService;\n}\nconst NZ_CONFIG_MODULE_NAME = 'tree';\nclass NzTreeComponent extends NzTreeBase {\n    // Handle emit event end\n    constructor(nzTreeService, nzConfigService, cdr, directionality, noAnimation) {\n        super(nzTreeService);\n        this.nzConfigService = nzConfigService;\n        this.cdr = cdr;\n        this.directionality = directionality;\n        this.noAnimation = noAnimation;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n        this.nzShowIcon = false;\n        this.nzHideUnMatched = false;\n        this.nzBlockNode = false;\n        this.nzExpandAll = false;\n        this.nzSelectMode = false;\n        this.nzCheckStrictly = false;\n        this.nzShowExpand = true;\n        this.nzShowLine = false;\n        this.nzCheckable = false;\n        this.nzAsyncData = false;\n        this.nzDraggable = false;\n        this.nzMultiple = false;\n        this.nzVirtualItemSize = 28;\n        this.nzVirtualMaxBufferPx = 500;\n        this.nzVirtualMinBufferPx = 28;\n        this.nzVirtualHeight = null;\n        this.nzData = [];\n        this.nzExpandedKeys = [];\n        this.nzSelectedKeys = [];\n        this.nzCheckedKeys = [];\n        this.nzSearchValue = '';\n        this.nzFlattenNodes = [];\n        this.beforeInit = true;\n        this.dir = 'ltr';\n        this.nzExpandedKeysChange = new EventEmitter();\n        this.nzSelectedKeysChange = new EventEmitter();\n        this.nzCheckedKeysChange = new EventEmitter();\n        this.nzSearchValueChange = new EventEmitter();\n        this.nzClick = new EventEmitter();\n        this.nzDblClick = new EventEmitter();\n        this.nzContextMenu = new EventEmitter();\n        this.nzCheckBoxChange = new EventEmitter();\n        this.nzExpandChange = new EventEmitter();\n        this.nzOnDragStart = new EventEmitter();\n        this.nzOnDragEnter = new EventEmitter();\n        this.nzOnDragOver = new EventEmitter();\n        this.nzOnDragLeave = new EventEmitter();\n        this.nzOnDrop = new EventEmitter();\n        this.nzOnDragEnd = new EventEmitter();\n        this.HIDDEN_STYLE = {\n            width: 0,\n            height: 0,\n            display: 'flex',\n            overflow: 'hidden',\n            opacity: 0,\n            border: 0,\n            padding: 0,\n            margin: 0\n        };\n        this.destroy$ = new Subject();\n        this.onChange = () => null;\n        this.onTouched = () => null;\n    }\n    writeValue(value) {\n        this.handleNzData(value);\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Render all properties of nzTree\n     * @param changes: all changes from @Input\n     */\n    renderTreeProperties(changes) {\n        let useDefaultExpandedKeys = false;\n        let expandAll = false;\n        const { nzData, nzExpandedKeys, nzSelectedKeys, nzCheckedKeys, nzCheckStrictly, nzExpandAll, nzMultiple, nzSearchValue } = changes;\n        if (nzExpandAll) {\n            useDefaultExpandedKeys = true;\n            expandAll = this.nzExpandAll;\n        }\n        if (nzMultiple) {\n            this.nzTreeService.isMultiple = this.nzMultiple;\n        }\n        if (nzCheckStrictly) {\n            this.nzTreeService.isCheckStrictly = this.nzCheckStrictly;\n        }\n        if (nzData) {\n            this.handleNzData(this.nzData);\n        }\n        if (nzCheckedKeys) {\n            this.handleCheckedKeys(this.nzCheckedKeys);\n        }\n        if (nzCheckStrictly) {\n            this.handleCheckedKeys(null);\n        }\n        if (nzExpandedKeys || nzExpandAll) {\n            useDefaultExpandedKeys = true;\n            this.handleExpandedKeys(expandAll || this.nzExpandedKeys);\n        }\n        if (nzSelectedKeys) {\n            this.handleSelectedKeys(this.nzSelectedKeys, this.nzMultiple);\n        }\n        if (nzSearchValue) {\n            if (!(nzSearchValue.firstChange && !this.nzSearchValue)) {\n                useDefaultExpandedKeys = false;\n                this.handleSearchValue(nzSearchValue.currentValue, this.nzSearchFunc);\n                this.nzSearchValueChange.emit(this.nzTreeService.formatEvent('search', null, null));\n            }\n        }\n        // flatten data\n        const currentExpandedKeys = this.getExpandedNodeList().map(v => v.key);\n        const newExpandedKeys = useDefaultExpandedKeys ? expandAll || this.nzExpandedKeys : currentExpandedKeys;\n        this.handleFlattenNodes(this.nzTreeService.rootNodes, newExpandedKeys);\n    }\n    trackByFlattenNode(_, node) {\n        return node.key;\n    }\n    // Deal with properties\n    /**\n     * nzData\n     * @param value\n     */\n    handleNzData(value) {\n        if (Array.isArray(value)) {\n            const data = this.coerceTreeNodes(value);\n            this.nzTreeService.initTree(data);\n        }\n    }\n    handleFlattenNodes(data, expandKeys = []) {\n        this.nzTreeService.flattenTreeData(data, expandKeys);\n    }\n    handleCheckedKeys(keys) {\n        this.nzTreeService.conductCheck(keys, this.nzCheckStrictly);\n    }\n    handleExpandedKeys(keys = []) {\n        this.nzTreeService.conductExpandedKeys(keys);\n    }\n    handleSelectedKeys(keys, isMulti) {\n        this.nzTreeService.conductSelectedKeys(keys, isMulti);\n    }\n    handleSearchValue(value, searchFunc) {\n        const dataList = flattenTreeData(this.nzTreeService.rootNodes, true).map(v => v.data);\n        const checkIfMatched = (node) => {\n            if (searchFunc) {\n                return searchFunc(node.origin);\n            }\n            return !value || !node.title.toLowerCase().includes(value.toLowerCase()) ? false : true;\n        };\n        dataList.forEach(v => {\n            v.isMatched = checkIfMatched(v);\n            v.canHide = !v.isMatched;\n            if (!v.isMatched) {\n                v.setExpanded(false);\n                this.nzTreeService.setExpandedNodeList(v);\n            }\n            else {\n                // expand\n                this.nzTreeService.expandNodeAllParentBySearch(v);\n            }\n            this.nzTreeService.setMatchedNodeList(v);\n        });\n    }\n    /**\n     * Handle emit event\n     * @param event\n     * handle each event\n     */\n    eventTriggerChanged(event) {\n        const node = event.node;\n        switch (event.eventName) {\n            case 'expand':\n                this.renderTree();\n                this.nzExpandChange.emit(event);\n                break;\n            case 'click':\n                this.nzClick.emit(event);\n                break;\n            case 'dblclick':\n                this.nzDblClick.emit(event);\n                break;\n            case 'contextmenu':\n                this.nzContextMenu.emit(event);\n                break;\n            case 'check':\n                // Render checked state with nodes' property `isChecked`\n                this.nzTreeService.setCheckedNodeList(node);\n                if (!this.nzCheckStrictly) {\n                    this.nzTreeService.conduct(node);\n                }\n                // Cause check method will rerender list, so we need recover it and next the new event to user\n                const eventNext = this.nzTreeService.formatEvent('check', node, event.event);\n                this.nzCheckBoxChange.emit(eventNext);\n                break;\n            case 'dragstart':\n                // if node is expanded\n                if (node.isExpanded) {\n                    node.setExpanded(!node.isExpanded);\n                    this.renderTree();\n                }\n                this.nzOnDragStart.emit(event);\n                break;\n            case 'dragenter':\n                const selectedNode = this.nzTreeService.getSelectedNode();\n                if (selectedNode && selectedNode.key !== node.key && !node.isExpanded && !node.isLeaf) {\n                    node.setExpanded(true);\n                    this.renderTree();\n                }\n                this.nzOnDragEnter.emit(event);\n                break;\n            case 'dragover':\n                this.nzOnDragOver.emit(event);\n                break;\n            case 'dragleave':\n                this.nzOnDragLeave.emit(event);\n                break;\n            case 'dragend':\n                this.nzOnDragEnd.emit(event);\n                break;\n            case 'drop':\n                this.renderTree();\n                this.nzOnDrop.emit(event);\n                break;\n        }\n    }\n    /**\n     * Click expand icon\n     */\n    renderTree() {\n        this.handleFlattenNodes(this.nzTreeService.rootNodes, this.getExpandedNodeList().map(v => v.key));\n        this.cdr.markForCheck();\n    }\n    ngOnInit() {\n        var _a;\n        this.nzTreeService.flattenNodes$.pipe(takeUntil(this.destroy$)).subscribe(data => {\n            this.nzFlattenNodes = data;\n            this.cdr.markForCheck();\n        });\n        this.dir = this.directionality.value;\n        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n    }\n    ngOnChanges(changes) {\n        this.renderTreeProperties(changes);\n    }\n    ngAfterViewInit() {\n        this.beforeInit = false;\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzTreeComponent.ɵfac = function NzTreeComponent_Factory(t) { return new (t || NzTreeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc5.NzTreeBaseService), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.NzNoAnimationDirective, 9)); };\nNzTreeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzTreeComponent, selectors: [[\"nz-tree\"]], contentQueries: function NzTreeComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _c2, 3);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nzTreeTemplateChild = _t.first);\n    } }, viewQuery: function NzTreeComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkVirtualScrollViewport, 1, CdkVirtualScrollViewport);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cdkVirtualScrollViewport = _t.first);\n    } }, hostVars: 20, hostBindings: function NzTreeComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ant-select-tree\", ctx.nzSelectMode)(\"ant-select-tree-show-line\", ctx.nzSelectMode && ctx.nzShowLine)(\"ant-select-tree-icon-hide\", ctx.nzSelectMode && !ctx.nzShowIcon)(\"ant-select-tree-block-node\", ctx.nzSelectMode && ctx.nzBlockNode)(\"ant-tree\", !ctx.nzSelectMode)(\"ant-tree-rtl\", ctx.dir === \"rtl\")(\"ant-tree-show-line\", !ctx.nzSelectMode && ctx.nzShowLine)(\"ant-tree-icon-hide\", !ctx.nzSelectMode && !ctx.nzShowIcon)(\"ant-tree-block-node\", !ctx.nzSelectMode && ctx.nzBlockNode)(\"draggable-tree\", ctx.nzDraggable);\n    } }, inputs: { nzShowIcon: \"nzShowIcon\", nzHideUnMatched: \"nzHideUnMatched\", nzBlockNode: \"nzBlockNode\", nzExpandAll: \"nzExpandAll\", nzSelectMode: \"nzSelectMode\", nzCheckStrictly: \"nzCheckStrictly\", nzShowExpand: \"nzShowExpand\", nzShowLine: \"nzShowLine\", nzCheckable: \"nzCheckable\", nzAsyncData: \"nzAsyncData\", nzDraggable: \"nzDraggable\", nzMultiple: \"nzMultiple\", nzVirtualItemSize: \"nzVirtualItemSize\", nzVirtualMaxBufferPx: \"nzVirtualMaxBufferPx\", nzVirtualMinBufferPx: \"nzVirtualMinBufferPx\", nzVirtualHeight: \"nzVirtualHeight\", nzData: \"nzData\", nzExpandedKeys: \"nzExpandedKeys\", nzSelectedKeys: \"nzSelectedKeys\", nzCheckedKeys: \"nzCheckedKeys\", nzSearchValue: \"nzSearchValue\", nzExpandedIcon: \"nzExpandedIcon\", nzTreeTemplate: \"nzTreeTemplate\", nzBeforeDrop: \"nzBeforeDrop\", nzSearchFunc: \"nzSearchFunc\" }, outputs: { nzExpandedKeysChange: \"nzExpandedKeysChange\", nzSelectedKeysChange: \"nzSelectedKeysChange\", nzCheckedKeysChange: \"nzCheckedKeysChange\", nzSearchValueChange: \"nzSearchValueChange\", nzClick: \"nzClick\", nzDblClick: \"nzDblClick\", nzContextMenu: \"nzContextMenu\", nzCheckBoxChange: \"nzCheckBoxChange\", nzExpandChange: \"nzExpandChange\", nzOnDragStart: \"nzOnDragStart\", nzOnDragEnter: \"nzOnDragEnter\", nzOnDragOver: \"nzOnDragOver\", nzOnDragLeave: \"nzOnDragLeave\", nzOnDrop: \"nzOnDrop\", nzOnDragEnd: \"nzOnDragEnd\" }, exportAs: [\"nzTree\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            NzTreeService,\n            {\n                provide: NzTreeBaseService,\n                useFactory: NzTreeServiceFactory,\n                deps: [[new SkipSelf(), new Optional(), NzTreeHigherOrderServiceToken], NzTreeService]\n            },\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => NzTreeComponent),\n                multi: true\n            }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], decls: 19, vars: 5, consts: [[\"role\", \"tree\"], [3, \"ngStyle\"], [1, \"ant-tree-list\"], [3, \"ant-select-tree-list-holder-inner\", \"ant-tree-list-holder-inner\", \"itemSize\", \"minBufferPx\", \"maxBufferPx\", \"height\", 4, \"ngIf\"], [3, \"ant-select-tree-list-holder-inner\", \"ant-tree-list-holder-inner\", \"nzNoAnimation\", 4, \"ngIf\"], [\"nodeTemplate\", \"\"], [3, \"itemSize\", \"minBufferPx\", \"maxBufferPx\"], [4, \"cdkVirtualFor\", \"cdkVirtualForOf\", \"cdkVirtualForTrackBy\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"nzNoAnimation\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"builtin\", \"\", 3, \"icon\", \"title\", \"isLoading\", \"isSelected\", \"isDisabled\", \"isMatched\", \"isExpanded\", \"isLeaf\", \"isStart\", \"isEnd\", \"isChecked\", \"isHalfChecked\", \"isDisableCheckbox\", \"isSelectable\", \"canHide\", \"nzTreeNode\", \"nzSelectMode\", \"nzShowLine\", \"nzExpandedIcon\", \"nzDraggable\", \"nzCheckable\", \"nzShowExpand\", \"nzAsyncData\", \"nzSearchValue\", \"nzHideUnMatched\", \"nzBeforeDrop\", \"nzShowIcon\", \"nzTreeTemplate\", \"nzExpandChange\", \"nzClick\", \"nzDblClick\", \"nzContextMenu\", \"nzCheckBoxChange\", \"nzOnDragStart\", \"nzOnDragEnter\", \"nzOnDragOver\", \"nzOnDragLeave\", \"nzOnDragEnd\", \"nzOnDrop\"]], template: function NzTreeComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtext(0, \"\\n    \");\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵtext(2, \"\\n      \");\n        ɵngcc0.ɵɵelement(3, \"input\", 1);\n        ɵngcc0.ɵɵtext(4, \"\\n    \");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtext(5, \"\\n    \");\n        ɵngcc0.ɵɵelementStart(6, \"div\", 2);\n        ɵngcc0.ɵɵtext(7, \"\\n      \");\n        ɵngcc0.ɵɵelementStart(8, \"div\");\n        ɵngcc0.ɵɵtext(9, \"\\n        \");\n        ɵngcc0.ɵɵtemplate(10, NzTreeComponent_cdk_virtual_scroll_viewport_10_Template, 4, 11, \"cdk-virtual-scroll-viewport\", 3);\n        ɵngcc0.ɵɵtext(11, \"\\n\\n        \");\n        ɵngcc0.ɵɵtemplate(12, NzTreeComponent_div_12_Template, 4, 9, \"div\", 4);\n        ɵngcc0.ɵɵtext(13, \"\\n      \");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtext(14, \"\\n    \");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtext(15, \"\\n    \");\n        ɵngcc0.ɵɵtemplate(16, NzTreeComponent_ng_template_16_Template, 3, 28, \"ng-template\", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtext(18, \"\\n  \");\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.HIDDEN_STYLE);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵclassProp(\"ant-select-tree-list\", ctx.nzSelectMode);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzVirtualHeight);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.nzVirtualHeight);\n    } }, directives: [ɵngcc1.NgStyle, ɵngcc1.NgIf, ɵngcc9.CdkVirtualScrollViewport, ɵngcc9.CdkFixedSizeVirtualScroll, ɵngcc9.CdkVirtualForOf, ɵngcc1.NgTemplateOutlet, ɵngcc6.NzNoAnimationDirective, ɵngcc1.NgForOf, NzTreeNodeBuiltinComponent], encapsulation: 2, data: { animation: [treeCollapseMotion] }, changeDetection: 0 });\nNzTreeComponent.ctorParameters = () => [\n    { type: NzTreeBaseService },\n    { type: NzConfigService },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NzNoAnimationDirective, decorators: [{ type: Host }, { type: Optional }] }\n];\nNzTreeComponent.propDecorators = {\n    nzShowIcon: [{ type: Input }],\n    nzHideUnMatched: [{ type: Input }],\n    nzBlockNode: [{ type: Input }],\n    nzExpandAll: [{ type: Input }],\n    nzSelectMode: [{ type: Input }],\n    nzCheckStrictly: [{ type: Input }],\n    nzShowExpand: [{ type: Input }],\n    nzShowLine: [{ type: Input }],\n    nzCheckable: [{ type: Input }],\n    nzAsyncData: [{ type: Input }],\n    nzDraggable: [{ type: Input }],\n    nzMultiple: [{ type: Input }],\n    nzExpandedIcon: [{ type: Input }],\n    nzVirtualItemSize: [{ type: Input }],\n    nzVirtualMaxBufferPx: [{ type: Input }],\n    nzVirtualMinBufferPx: [{ type: Input }],\n    nzVirtualHeight: [{ type: Input }],\n    nzTreeTemplate: [{ type: Input }],\n    nzBeforeDrop: [{ type: Input }],\n    nzData: [{ type: Input }],\n    nzExpandedKeys: [{ type: Input }],\n    nzSelectedKeys: [{ type: Input }],\n    nzCheckedKeys: [{ type: Input }],\n    nzSearchValue: [{ type: Input }],\n    nzSearchFunc: [{ type: Input }],\n    nzTreeTemplateChild: [{ type: ContentChild, args: ['nzTreeTemplate', { static: true },] }],\n    cdkVirtualScrollViewport: [{ type: ViewChild, args: [CdkVirtualScrollViewport, { read: CdkVirtualScrollViewport },] }],\n    nzExpandedKeysChange: [{ type: Output }],\n    nzSelectedKeysChange: [{ type: Output }],\n    nzCheckedKeysChange: [{ type: Output }],\n    nzSearchValueChange: [{ type: Output }],\n    nzClick: [{ type: Output }],\n    nzDblClick: [{ type: Output }],\n    nzContextMenu: [{ type: Output }],\n    nzCheckBoxChange: [{ type: Output }],\n    nzExpandChange: [{ type: Output }],\n    nzOnDragStart: [{ type: Output }],\n    nzOnDragEnter: [{ type: Output }],\n    nzOnDragOver: [{ type: Output }],\n    nzOnDragLeave: [{ type: Output }],\n    nzOnDrop: [{ type: Output }],\n    nzOnDragEnd: [{ type: Output }]\n};\n__decorate([\n    InputBoolean(),\n    WithConfig(),\n    __metadata(\"design:type\", Boolean)\n], NzTreeComponent.prototype, \"nzShowIcon\", void 0);\n__decorate([\n    InputBoolean(),\n    WithConfig(),\n    __metadata(\"design:type\", Boolean)\n], NzTreeComponent.prototype, \"nzHideUnMatched\", void 0);\n__decorate([\n    InputBoolean(),\n    WithConfig(),\n    __metadata(\"design:type\", Boolean)\n], NzTreeComponent.prototype, \"nzBlockNode\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzTreeComponent.prototype, \"nzExpandAll\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzTreeComponent.prototype, \"nzSelectMode\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzTreeComponent.prototype, \"nzCheckStrictly\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzTreeComponent.prototype, \"nzShowExpand\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzTreeComponent.prototype, \"nzShowLine\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzTreeComponent.prototype, \"nzCheckable\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzTreeComponent.prototype, \"nzAsyncData\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Boolean)\n], NzTreeComponent.prototype, \"nzDraggable\", void 0);\n__decorate([\n    InputBoolean(),\n    __metadata(\"design:type\", Object)\n], NzTreeComponent.prototype, \"nzMultiple\", void 0);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTreeDropIndicatorComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-tree-drop-indicator',\n                exportAs: 'NzTreeDropIndicator',\n                template: ``,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                preserveWhitespaces: false,\n                host: {\n                    '[class.ant-tree-drop-indicator]': 'true',\n                    '[style]': 'style'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { level: [{\n            type: Input\n        }], direction: [{\n            type: Input\n        }], dropPosition: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTreeIndentComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-tree-indent',\n                exportAs: 'nzTreeIndent',\n                template: `\n    <span\n      [class.ant-tree-indent-unit]=\"!nzSelectMode\"\n      [class.ant-select-tree-indent-unit]=\"nzSelectMode\"\n      [class.ant-select-tree-indent-unit-start]=\"nzSelectMode && nzIsStart[i]\"\n      [class.ant-tree-indent-unit-start]=\"!nzSelectMode && nzIsStart[i]\"\n      [class.ant-select-tree-indent-unit-end]=\"nzSelectMode && nzIsEnd[i]\"\n      [class.ant-tree-indent-unit-end]=\"!nzSelectMode && nzIsEnd[i]\"\n      *ngFor=\"let _ of listOfUnit; let i = index\"\n    ></span>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                preserveWhitespaces: false,\n                host: {\n                    '[attr.aria-hidden]': 'true',\n                    '[class.ant-tree-indent]': '!nzSelectMode',\n                    '[class.ant-select-tree-indent]': 'nzSelectMode'\n                }\n            }]\n    }], function () { return []; }, { nzTreeLevel: [{\n            type: Input\n        }], nzIsStart: [{\n            type: Input\n        }], nzIsEnd: [{\n            type: Input\n        }], nzSelectMode: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTreeNodeBuiltinCheckboxComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-tree-node-checkbox[builtin]',\n                template: `\n    <span [class.ant-tree-checkbox-inner]=\"!nzSelectMode\" [class.ant-select-tree-checkbox-inner]=\"nzSelectMode\"></span>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                preserveWhitespaces: false,\n                host: {\n                    '[class.ant-select-tree-checkbox]': `nzSelectMode`,\n                    '[class.ant-select-tree-checkbox-checked]': `nzSelectMode && isChecked`,\n                    '[class.ant-select-tree-checkbox-indeterminate]': `nzSelectMode && isHalfChecked`,\n                    '[class.ant-select-tree-checkbox-disabled]': `nzSelectMode && (isDisabled || isDisableCheckbox)`,\n                    '[class.ant-tree-checkbox]': `!nzSelectMode`,\n                    '[class.ant-tree-checkbox-checked]': `!nzSelectMode && isChecked`,\n                    '[class.ant-tree-checkbox-indeterminate]': `!nzSelectMode && isHalfChecked`,\n                    '[class.ant-tree-checkbox-disabled]': `!nzSelectMode && (isDisabled || isDisableCheckbox)`\n                }\n            }]\n    }], function () { return []; }, { nzSelectMode: [{\n            type: Input\n        }], isChecked: [{\n            type: Input\n        }], isHalfChecked: [{\n            type: Input\n        }], isDisabled: [{\n            type: Input\n        }], isDisableCheckbox: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTreeNodeSwitcherComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-tree-node-switcher',\n                template: `\n    <ng-container *ngIf=\"isShowSwitchIcon\">\n      <ng-container *ngIf=\"!isLoading; else loadingTemplate\">\n        <ng-container *nzStringTemplateOutlet=\"nzExpandedIcon; context: { $implicit: context, origin: context.origin }\">\n          <i\n            nz-icon\n            nzType=\"caret-down\"\n            [class.ant-select-tree-switcher-icon]=\"nzSelectMode\"\n            [class.ant-tree-switcher-icon]=\"!nzSelectMode\"\n          ></i>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"nzShowLine\">\n      <ng-container *ngIf=\"!isLoading; else loadingTemplate\">\n        <ng-container *nzStringTemplateOutlet=\"nzExpandedIcon; context: { $implicit: context, origin: context.origin }\">\n          <i\n            *ngIf=\"isShowLineIcon\"\n            nz-icon\n            [nzType]=\"isSwitcherOpen ? 'minus-square' : 'plus-square'\"\n            class=\"ant-tree-switcher-line-icon\"\n          ></i>\n          <i *ngIf=\"!isShowLineIcon\" nz-icon nzType=\"file\" class=\"ant-tree-switcher-line-icon\"></i>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n    <ng-template #loadingTemplate>\n      <i nz-icon nzType=\"loading\" [nzSpin]=\"true\" class=\"ant-tree-switcher-loading-icon\"></i>\n    </ng-template>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                preserveWhitespaces: false,\n                host: {\n                    '[class.ant-select-tree-switcher]': 'nzSelectMode',\n                    '[class.ant-select-tree-switcher-noop]': 'nzSelectMode && isLeaf',\n                    '[class.ant-select-tree-switcher_open]': 'nzSelectMode && isSwitcherOpen',\n                    '[class.ant-select-tree-switcher_close]': 'nzSelectMode && isSwitcherClose',\n                    '[class.ant-tree-switcher]': '!nzSelectMode',\n                    '[class.ant-tree-switcher-noop]': '!nzSelectMode && isLeaf',\n                    '[class.ant-tree-switcher_open]': '!nzSelectMode && isSwitcherOpen',\n                    '[class.ant-tree-switcher_close]': '!nzSelectMode && isSwitcherClose'\n                }\n            }]\n    }], function () { return []; }, { nzSelectMode: [{\n            type: Input\n        }], nzShowExpand: [{\n            type: Input\n        }], nzShowLine: [{\n            type: Input\n        }], nzExpandedIcon: [{\n            type: Input\n        }], context: [{\n            type: Input\n        }], isLeaf: [{\n            type: Input\n        }], isLoading: [{\n            type: Input\n        }], isExpanded: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTreeNodeTitleComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-tree-node-title',\n                template: `\n    <ng-template [ngTemplateOutlet]=\"treeTemplate\" [ngTemplateOutletContext]=\"{ $implicit: context, origin: context.origin }\"></ng-template>\n    <ng-container *ngIf=\"!treeTemplate\">\n      <span\n        *ngIf=\"icon && showIcon\"\n        [class.ant-tree-icon__open]=\"isSwitcherOpen\"\n        [class.ant-tree-icon__close]=\"isSwitcherClose\"\n        [class.ant-tree-icon_loading]=\"isLoading\"\n        [class.ant-select-tree-iconEle]=\"selectMode\"\n        [class.ant-tree-iconEle]=\"!selectMode\"\n      >\n        <span\n          [class.ant-select-tree-iconEle]=\"selectMode\"\n          [class.ant-select-tree-icon__customize]=\"selectMode\"\n          [class.ant-tree-iconEle]=\"!selectMode\"\n          [class.ant-tree-icon__customize]=\"!selectMode\"\n        >\n          <i nz-icon *ngIf=\"icon\" [nzType]=\"icon\"></i>\n        </span>\n      </span>\n      <span class=\"ant-tree-title\" [innerHTML]=\"title | nzHighlight: matchedValue:'i':'font-highlight'\"></span>\n      <nz-tree-drop-indicator *ngIf=\"showIndicator\" [dropPosition]=\"dragPosition\" [level]=\"context.level\"></nz-tree-drop-indicator>\n    </ng-container>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                preserveWhitespaces: false,\n                host: {\n                    '[attr.title]': 'title',\n                    '[attr.draggable]': 'canDraggable',\n                    '[attr.aria-grabbed]': 'canDraggable',\n                    '[class.draggable]': 'canDraggable',\n                    '[class.ant-select-tree-node-content-wrapper]': `selectMode`,\n                    '[class.ant-select-tree-node-content-wrapper-open]': `selectMode && isSwitcherOpen`,\n                    '[class.ant-select-tree-node-content-wrapper-close]': `selectMode && isSwitcherClose`,\n                    '[class.ant-select-tree-node-selected]': `selectMode && isSelected`,\n                    '[class.ant-tree-node-content-wrapper]': `!selectMode`,\n                    '[class.ant-tree-node-content-wrapper-open]': `!selectMode && isSwitcherOpen`,\n                    '[class.ant-tree-node-content-wrapper-close]': `!selectMode && isSwitcherClose`,\n                    '[class.ant-tree-node-selected]': `!selectMode && isSelected`\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { treeTemplate: [{\n            type: Input\n        }], selectMode: [{\n            type: Input\n        }], showIndicator: [{\n            type: Input\n        }], searchValue: [{\n            type: Input\n        }], draggable: [{\n            type: Input\n        }], showIcon: [{\n            type: Input\n        }], context: [{\n            type: Input\n        }], icon: [{\n            type: Input\n        }], title: [{\n            type: Input\n        }], isLoading: [{\n            type: Input\n        }], isSelected: [{\n            type: Input\n        }], isDisabled: [{\n            type: Input\n        }], isMatched: [{\n            type: Input\n        }], isExpanded: [{\n            type: Input\n        }], isLeaf: [{\n            type: Input\n        }], dragPosition: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTreeNodeBuiltinComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-tree-node[builtin]',\n                exportAs: 'nzTreeBuiltinNode',\n                template: `\n    <nz-tree-indent [nzTreeLevel]=\"nzTreeNode.level\" [nzSelectMode]=\"nzSelectMode\" [nzIsStart]=\"isStart\" [nzIsEnd]=\"isEnd\"></nz-tree-indent>\n    <nz-tree-node-switcher\n      *ngIf=\"nzShowExpand\"\n      [nzShowExpand]=\"nzShowExpand\"\n      [nzShowLine]=\"nzShowLine\"\n      [nzExpandedIcon]=\"nzExpandedIcon\"\n      [nzSelectMode]=\"nzSelectMode\"\n      [context]=\"nzTreeNode\"\n      [isLeaf]=\"isLeaf\"\n      [isExpanded]=\"isExpanded\"\n      [isLoading]=\"isLoading\"\n      (click)=\"clickExpand($event)\"\n    ></nz-tree-node-switcher>\n    <nz-tree-node-checkbox\n      builtin\n      *ngIf=\"nzCheckable\"\n      (click)=\"clickCheckBox($event)\"\n      [nzSelectMode]=\"nzSelectMode\"\n      [isChecked]=\"isChecked\"\n      [isHalfChecked]=\"isHalfChecked\"\n      [isDisabled]=\"isDisabled\"\n      [isDisableCheckbox]=\"isDisableCheckbox\"\n    ></nz-tree-node-checkbox>\n    <nz-tree-node-title\n      [icon]=\"icon\"\n      [title]=\"title\"\n      [isLoading]=\"isLoading\"\n      [isSelected]=\"isSelected\"\n      [isDisabled]=\"isDisabled\"\n      [isMatched]=\"isMatched\"\n      [isExpanded]=\"isExpanded\"\n      [isLeaf]=\"isLeaf\"\n      [searchValue]=\"nzSearchValue\"\n      [treeTemplate]=\"nzTreeTemplate\"\n      [draggable]=\"nzDraggable\"\n      [showIcon]=\"nzShowIcon\"\n      [selectMode]=\"nzSelectMode\"\n      [context]=\"nzTreeNode\"\n      [showIndicator]=\"showIndicator\"\n      [dragPosition]=\"dragPos\"\n      (dblclick)=\"dblClick($event)\"\n      (click)=\"clickSelect($event)\"\n      (contextmenu)=\"contextMenu($event)\"\n    ></nz-tree-node-title>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                preserveWhitespaces: false,\n                host: {\n                    '[class.ant-select-tree-treenode]': `nzSelectMode`,\n                    '[class.ant-select-tree-treenode-disabled]': `nzSelectMode && isDisabled`,\n                    '[class.ant-select-tree-treenode-switcher-open]': `nzSelectMode && isSwitcherOpen`,\n                    '[class.ant-select-tree-treenode-switcher-close]': `nzSelectMode && isSwitcherClose`,\n                    '[class.ant-select-tree-treenode-checkbox-checked]': `nzSelectMode && isChecked`,\n                    '[class.ant-select-tree-treenode-checkbox-indeterminate]': `nzSelectMode && isHalfChecked`,\n                    '[class.ant-select-tree-treenode-selected]': `nzSelectMode && isSelected`,\n                    '[class.ant-select-tree-treenode-loading]': `nzSelectMode && isLoading`,\n                    '[class.ant-tree-treenode]': `!nzSelectMode`,\n                    '[class.ant-tree-treenode-disabled]': `!nzSelectMode && isDisabled`,\n                    '[class.ant-tree-treenode-switcher-open]': `!nzSelectMode && isSwitcherOpen`,\n                    '[class.ant-tree-treenode-switcher-close]': `!nzSelectMode && isSwitcherClose`,\n                    '[class.ant-tree-treenode-checkbox-checked]': `!nzSelectMode && isChecked`,\n                    '[class.ant-tree-treenode-checkbox-indeterminate]': `!nzSelectMode && isHalfChecked`,\n                    '[class.ant-tree-treenode-selected]': `!nzSelectMode && isSelected`,\n                    '[class.ant-tree-treenode-loading]': `!nzSelectMode && isLoading`,\n                    '[style.display]': 'displayStyle',\n                    '(mousedown)': 'onMousedown($event)'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc5.NzTreeBaseService }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.NzNoAnimationDirective, decorators: [{\n                type: Host\n            }, {\n                type: Optional\n            }] }]; }, { icon: [{\n            type: Input\n        }], title: [{\n            type: Input\n        }], isLoading: [{\n            type: Input\n        }], isSelected: [{\n            type: Input\n        }], isDisabled: [{\n            type: Input\n        }], isMatched: [{\n            type: Input\n        }], isStart: [{\n            type: Input\n        }], isEnd: [{\n            type: Input\n        }], nzHideUnMatched: [{\n            type: Input\n        }], nzNoAnimation: [{\n            type: Input\n        }], nzSelectMode: [{\n            type: Input\n        }], nzShowIcon: [{\n            type: Input\n        }], nzTreeTemplate: [{\n            type: Input\n        }], nzSearchValue: [{\n            type: Input\n        }], nzDraggable: [{\n            type: Input\n        }], nzClick: [{\n            type: Output\n        }], nzDblClick: [{\n            type: Output\n        }], nzContextMenu: [{\n            type: Output\n        }], nzCheckBoxChange: [{\n            type: Output\n        }], nzExpandChange: [{\n            type: Output\n        }], nzOnDragStart: [{\n            type: Output\n        }], nzOnDragEnter: [{\n            type: Output\n        }], nzOnDragOver: [{\n            type: Output\n        }], nzOnDragLeave: [{\n            type: Output\n        }], nzOnDrop: [{\n            type: Output\n        }], nzOnDragEnd: [{\n            type: Output\n        }], isExpanded: [{\n            type: Input\n        }], isLeaf: [{\n            type: Input\n        }], isChecked: [{\n            type: Input\n        }], isHalfChecked: [{\n            type: Input\n        }], isDisableCheckbox: [{\n            type: Input\n        }], isSelectable: [{\n            type: Input\n        }], canHide: [{\n            type: Input\n        }], nzTreeNode: [{\n            type: Input\n        }], nzShowLine: [{\n            type: Input\n        }], nzShowExpand: [{\n            type: Input\n        }], nzCheckable: [{\n            type: Input\n        }], nzAsyncData: [{\n            type: Input\n        }], nzExpandedIcon: [{\n            type: Input\n        }], nzBeforeDrop: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTreeService, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTreeComponent, [{\n        type: Component,\n        args: [{\n                selector: 'nz-tree',\n                exportAs: 'nzTree',\n                animations: [treeCollapseMotion],\n                template: `\n    <div role=\"tree\">\n      <input [ngStyle]=\"HIDDEN_STYLE\" />\n    </div>\n    <div class=\"ant-tree-list\" [class.ant-select-tree-list]=\"nzSelectMode\">\n      <div>\n        <cdk-virtual-scroll-viewport\n          *ngIf=\"nzVirtualHeight\"\n          [class.ant-select-tree-list-holder-inner]=\"nzSelectMode\"\n          [class.ant-tree-list-holder-inner]=\"!nzSelectMode\"\n          [itemSize]=\"nzVirtualItemSize\"\n          [minBufferPx]=\"nzVirtualMinBufferPx\"\n          [maxBufferPx]=\"nzVirtualMaxBufferPx\"\n          [style.height]=\"nzVirtualHeight\"\n        >\n          <ng-container *cdkVirtualFor=\"let node of nzFlattenNodes; trackBy: trackByFlattenNode\">\n            <ng-template [ngTemplateOutlet]=\"nodeTemplate\" [ngTemplateOutletContext]=\"{ $implicit: node }\"></ng-template>\n          </ng-container>\n        </cdk-virtual-scroll-viewport>\n\n        <div\n          *ngIf=\"!nzVirtualHeight\"\n          [class.ant-select-tree-list-holder-inner]=\"nzSelectMode\"\n          [class.ant-tree-list-holder-inner]=\"!nzSelectMode\"\n          [@.disabled]=\"beforeInit || noAnimation?.nzNoAnimation\"\n          [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n          [@treeCollapseMotion]=\"nzFlattenNodes.length\"\n        >\n          <ng-container *ngFor=\"let node of nzFlattenNodes; trackBy: trackByFlattenNode\">\n            <ng-template [ngTemplateOutlet]=\"nodeTemplate\" [ngTemplateOutletContext]=\"{ $implicit: node }\"></ng-template>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n    <ng-template #nodeTemplate let-treeNode>\n      <nz-tree-node\n        builtin\n        [icon]=\"treeNode.icon\"\n        [title]=\"treeNode.title\"\n        [isLoading]=\"treeNode.isLoading\"\n        [isSelected]=\"treeNode.isSelected\"\n        [isDisabled]=\"treeNode.isDisabled\"\n        [isMatched]=\"treeNode.isMatched\"\n        [isExpanded]=\"treeNode.isExpanded\"\n        [isLeaf]=\"treeNode.isLeaf\"\n        [isStart]=\"treeNode.isStart\"\n        [isEnd]=\"treeNode.isEnd\"\n        [isChecked]=\"treeNode.isChecked\"\n        [isHalfChecked]=\"treeNode.isHalfChecked\"\n        [isDisableCheckbox]=\"treeNode.isDisableCheckbox\"\n        [isSelectable]=\"treeNode.isSelectable\"\n        [canHide]=\"treeNode.canHide\"\n        [nzTreeNode]=\"treeNode\"\n        [nzSelectMode]=\"nzSelectMode\"\n        [nzShowLine]=\"nzShowLine\"\n        [nzExpandedIcon]=\"nzExpandedIcon\"\n        [nzDraggable]=\"nzDraggable\"\n        [nzCheckable]=\"nzCheckable\"\n        [nzShowExpand]=\"nzShowExpand\"\n        [nzAsyncData]=\"nzAsyncData\"\n        [nzSearchValue]=\"nzSearchValue\"\n        [nzHideUnMatched]=\"nzHideUnMatched\"\n        [nzBeforeDrop]=\"nzBeforeDrop\"\n        [nzShowIcon]=\"nzShowIcon\"\n        [nzTreeTemplate]=\"nzTreeTemplate || nzTreeTemplateChild\"\n        (nzExpandChange)=\"eventTriggerChanged($event)\"\n        (nzClick)=\"eventTriggerChanged($event)\"\n        (nzDblClick)=\"eventTriggerChanged($event)\"\n        (nzContextMenu)=\"eventTriggerChanged($event)\"\n        (nzCheckBoxChange)=\"eventTriggerChanged($event)\"\n        (nzOnDragStart)=\"eventTriggerChanged($event)\"\n        (nzOnDragEnter)=\"eventTriggerChanged($event)\"\n        (nzOnDragOver)=\"eventTriggerChanged($event)\"\n        (nzOnDragLeave)=\"eventTriggerChanged($event)\"\n        (nzOnDragEnd)=\"eventTriggerChanged($event)\"\n        (nzOnDrop)=\"eventTriggerChanged($event)\"\n      ></nz-tree-node>\n    </ng-template>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    NzTreeService,\n                    {\n                        provide: NzTreeBaseService,\n                        useFactory: NzTreeServiceFactory,\n                        deps: [[new SkipSelf(), new Optional(), NzTreeHigherOrderServiceToken], NzTreeService]\n                    },\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef(() => NzTreeComponent),\n                        multi: true\n                    }\n                ],\n                host: {\n                    '[class.ant-select-tree]': `nzSelectMode`,\n                    '[class.ant-select-tree-show-line]': `nzSelectMode && nzShowLine`,\n                    '[class.ant-select-tree-icon-hide]': `nzSelectMode && !nzShowIcon`,\n                    '[class.ant-select-tree-block-node]': `nzSelectMode && nzBlockNode`,\n                    '[class.ant-tree]': `!nzSelectMode`,\n                    '[class.ant-tree-rtl]': `dir === 'rtl'`,\n                    '[class.ant-tree-show-line]': `!nzSelectMode && nzShowLine`,\n                    '[class.ant-tree-icon-hide]': `!nzSelectMode && !nzShowIcon`,\n                    '[class.ant-tree-block-node]': `!nzSelectMode && nzBlockNode`,\n                    '[class.draggable-tree]': `nzDraggable`\n                }\n            }]\n    }], function () { return [{ type: ɵngcc5.NzTreeBaseService }, { type: ɵngcc7.NzConfigService }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc8.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc6.NzNoAnimationDirective, decorators: [{\n                type: Host\n            }, {\n                type: Optional\n            }] }]; }, { nzShowIcon: [{\n            type: Input\n        }], nzHideUnMatched: [{\n            type: Input\n        }], nzBlockNode: [{\n            type: Input\n        }], nzExpandAll: [{\n            type: Input\n        }], nzSelectMode: [{\n            type: Input\n        }], nzCheckStrictly: [{\n            type: Input\n        }], nzShowExpand: [{\n            type: Input\n        }], nzShowLine: [{\n            type: Input\n        }], nzCheckable: [{\n            type: Input\n        }], nzAsyncData: [{\n            type: Input\n        }], nzDraggable: [{\n            type: Input\n        }], nzMultiple: [{\n            type: Input\n        }], nzVirtualItemSize: [{\n            type: Input\n        }], nzVirtualMaxBufferPx: [{\n            type: Input\n        }], nzVirtualMinBufferPx: [{\n            type: Input\n        }], nzVirtualHeight: [{\n            type: Input\n        }], nzData: [{\n            type: Input\n        }], nzExpandedKeys: [{\n            type: Input\n        }], nzSelectedKeys: [{\n            type: Input\n        }], nzCheckedKeys: [{\n            type: Input\n        }], nzSearchValue: [{\n            type: Input\n        }], nzExpandedKeysChange: [{\n            type: Output\n        }], nzSelectedKeysChange: [{\n            type: Output\n        }], nzCheckedKeysChange: [{\n            type: Output\n        }], nzSearchValueChange: [{\n            type: Output\n        }], nzClick: [{\n            type: Output\n        }], nzDblClick: [{\n            type: Output\n        }], nzContextMenu: [{\n            type: Output\n        }], nzCheckBoxChange: [{\n            type: Output\n        }], nzExpandChange: [{\n            type: Output\n        }], nzOnDragStart: [{\n            type: Output\n        }], nzOnDragEnter: [{\n            type: Output\n        }], nzOnDragOver: [{\n            type: Output\n        }], nzOnDragLeave: [{\n            type: Output\n        }], nzOnDrop: [{\n            type: Output\n        }], nzOnDragEnd: [{\n            type: Output\n        }], nzExpandedIcon: [{\n            type: Input\n        }], nzTreeTemplate: [{\n            type: Input\n        }], nzBeforeDrop: [{\n            type: Input\n        }], nzSearchFunc: [{\n            type: Input\n        }], nzTreeTemplateChild: [{\n            type: ContentChild,\n            args: ['nzTreeTemplate', { static: true }]\n        }], cdkVirtualScrollViewport: [{\n            type: ViewChild,\n            args: [CdkVirtualScrollViewport, { read: CdkVirtualScrollViewport }]\n        }] }); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTreeModule {\n}\nNzTreeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NzTreeModule });\nNzTreeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NzTreeModule_Factory(t) { return new (t || NzTreeModule)(); }, imports: [[BidiModule, CommonModule, NzOutletModule, NzIconModule, NzNoAnimationModule, NzHighlightModule, ScrollingModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzTreeModule, { declarations: function () { return [NzTreeComponent, NzTreeNodeBuiltinComponent, NzTreeIndentComponent, NzTreeNodeSwitcherComponent, NzTreeNodeBuiltinCheckboxComponent, NzTreeNodeTitleComponent, NzTreeDropIndicatorComponent]; }, imports: function () { return [BidiModule, CommonModule, NzOutletModule, NzIconModule, NzNoAnimationModule, NzHighlightModule, ScrollingModule]; }, exports: function () { return [NzTreeComponent, NzTreeNodeBuiltinComponent, NzTreeIndentComponent]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NzTreeModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, CommonModule, NzOutletModule, NzIconModule, NzNoAnimationModule, NzHighlightModule, ScrollingModule],\n                declarations: [\n                    NzTreeComponent,\n                    NzTreeNodeBuiltinComponent,\n                    NzTreeIndentComponent,\n                    NzTreeNodeSwitcherComponent,\n                    NzTreeNodeBuiltinCheckboxComponent,\n                    NzTreeNodeTitleComponent,\n                    NzTreeDropIndicatorComponent\n                ],\n                exports: [NzTreeComponent, NzTreeNodeBuiltinComponent, NzTreeIndentComponent]\n            }]\n    }], null, null); })();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzTreeComponent, NzTreeIndentComponent, NzTreeModule, NzTreeNodeBuiltinCheckboxComponent, NzTreeNodeBuiltinComponent, NzTreeNodeSwitcherComponent, NzTreeNodeTitleComponent, NzTreeService, NzTreeServiceFactory, NzTreeDropIndicatorComponent as ɵa };\n\n//# sourceMappingURL=ng-zorro-antd-tree.js.map"]}