{"version":3,"sources":["webpack:///src/app/shared/component/loading-page/loading-page.component.html","webpack:///src/app/shared/component/loading-page/loading-page.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/auth.module.ts"],"names":["LoadingPageComponent","isPageLoading","LoginComponent","authService","toast","routerService","translate","i18n","isDisabledLogin","isShowLoading","this","checkLang","deleteCacheUser","loginForm","loginFormGroup","username","required","password","remember","token","getWithExpiry","navigate","get","form","value","loginData","trim","document","getElementById","innerHTML","userLogin","subscribe","rs","result","code","data","info","parseJwt","accessToken","success","instant","cache","userFullname","userCode","sub","setWithExpiry","exp","loadUrl","warning","codeErr","error","Error","base64","split","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","langCode","localStorage","getItem","currentLang","classList","remove","add","use","setItem","setLocale","changeLanguage","routes","path","component","AuthRoutingModule","forChild","AuthModule"],"mappings":"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","file":"x","sourcesContent":["<div *ngIf=\"isPageLoading\">\n    <div class=\"d-flex justify-content-center\" style=\"padding-top: 200px;\">\n        <div class=\"spinner-border\" style=\"min-height: 75px; min-width: 75px; color: #CE7A58\" role=\"status\">\n        </div>\n    </div>\n    <div class=\"d-flex justify-content-center\">\n        <p style=\"margin-top: 10px; margin-left: 10px\">Đang tải ...</p>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'loading-page',\n  templateUrl: './loading-page.component.html',\n  styleUrls: ['./loading-page.component.scss']\n})\nexport class LoadingPageComponent implements OnInit {\n  @Input() isPageLoading: boolean = true\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"app-container\">\n    <div class=\"h-100\">\n        <div class=\"h-100 no-gutters row\">\n            <div class=\"d-none d-lg-block col-lg-4\">\n                <div class=\"slider-light\">\n                    <div class=\"slick-slider\">\n                        <div>\n                            <div class=\"position-relative h-100 d-flex justify-content-center align-items-center bg-plum-plate\"\n                                tabindex=\"-1\">\n                                <div class=\"slide-img-bg\"\n                                    style=\"background-image: url('assets/img/sidebar/abstract9.png');\"></div>\n                                <div class=\"slider-content\">\n                                    <h3>{{'project_name' | translate}}</h3>\n                                    <p>\n                                        {{'project_version' | translate}}\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"h-100 d-flex bg-white justify-content-center align-items-center col-md-12 col-lg-8\">\n                <div class=\"mx-auto app-login-box col-sm-12 col-md-10 col-lg-9\">\n                    <div class=\"form-row\" *ngIf=\"isShowLoading\">\n                        <img class=\"mx-auto d-block\" src=\"assets/images/load.gif\" />\n                    </div>\n                    <div *ngIf=\"!isShowLoading\">\n                        <form>\n                            <img class=\"mx-auto d-block\" src=\"assets/images/logo/logo-icon.png\"\n                                style=\"height: 120px;width: 120px;\">\n                            <h2 style=\"text-align: center;margin-bottom: 20px;\">{{'project_name' | translate}}</h2>\n                            <h4 class=\"mb-0\">\n                                <span class=\"d-block\">{{'project_welcome' | translate}}</span>\n                            </h4>\n                            <div class=\"divider row\"></div>\n                            <div [formGroup]='loginFormGroup'>\n                                <div class=\"form-row cls-Login\">\n                                    <div class=\"col-md-6\">\n                                        <div class=\"position-relative form-group\">\n                                            <label for=\"exampleEmail\" class=\"\"> {{'auth_username' | translate}}</label>\n                                            <input formControlName=\"username\" type=\"text\" tabindex=\"1\"\n                                                class=\"form-control\">\n                                            <div *ngIf=\"username.invalid && (username.dirty || username.touched)\"\n                                                style=\"color:red; font-size:12px; padding-bottom: .2rem; padding-top: .5rem;\">\n                                                <div *ngIf=\"username.errors.required\">\n                                                    {{'auth_username-require' | translate}}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <div class=\"position-relative form-group\">\n                                            <label for=\"examplePassword\" class=\"\">{{'auth_password' |\n                                                translate}}</label>\n                                            <input type=\"password\" formControlName=\"password\" autocomplete=\"off\"\n                                                class=\"form-control\">\n                                            <div *ngIf=\"password.invalid && (password.dirty || password.touched)\"\n                                                style=\"color:red; font-size:12px; padding-bottom: .2rem; padding-top: .5rem;\">\n                                                <div *ngIf=\"password.errors.required\">\n                                                    {{'auth_password-require' | translate}}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"position-relative form-check cls-Login\" style=\"display: none;\">\n                                    <input name=\"check\" id=\"login-remember\" formControlName=\"remember\" type=\"checkbox\"\n                                        class=\"form-check-input\">\n                                    <label for=\"exampleCheck\" class=\"form-check-label\">{{'auth_keep-signin' |\n                                        translate}}</label>\n                                </div>\n                                <div class=\"form-row cls-Login\" style=\"display: none;\">\n                                    <p id=\"loginStatus\" style='color:red; font-size:12px;'></p>\n                                </div>\n                                <div class=\"divider row cls-Login\"></div>\n                                <div class=\"d-flex align-items-center cls-Login\" *ngIf=\"!isShowLoading\">\n                                    <div class=\"ml-auto  cls-Login\">\n                                        <button class=\"btn btn-primary\"\n                                            [disabled]='loginFormGroup.invalid || isDisabledLogin'\n                                            (click)=\"submitLogin()\">{{'auth_signin' | translate}}</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n                <div class=\"text-center mt-4 font-weight-light\" style=\"position: absolute;top: 0px;right: 10px;\">\n                    <a class=\"nav-link\" id=\"languageToggle\" (click)=\"changeLanguage()\" style=\"cursor: pointer;\">\n                    </a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<loading-page [isPageLoading]=\"isPageLoading\">\n</loading-page>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { LoginModel, LoginReponseModel } from '../../shared/models/auth.model';\nimport { ApiReturn } from '../../shared/models/global.model';\nimport { AuthService } from '../../core/services/auth/auth.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Cache } from '../../core/lib/cache';\nimport { en_US, vi_VN, NzI18nService } from 'ng-zorro-antd/i18n';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  isPageLoading: boolean = true;\n  //form login\n  loginForm: LoginModel;\n  loginFormGroup: FormGroup;\n  loginData: LoginModel;\n  token: string;\n  //disable login\n  isDisabledLogin: boolean = false;\n\n  isShowLoading: boolean = false;\n\n  constructor(\n    public authService: AuthService,\n    public toast: ToastrService,\n    public routerService: Router,\n    public translate: TranslateService,\n    private i18n: NzI18nService\n  ) { }\n\n  ngOnInit() {\n    this.isPageLoading = false;\n    this.checkLang();\n    Cache.deleteCacheUser();\n    this.loginForm = new LoginModel;\n    this.loginFormGroup = new FormGroup({\n      username: new FormControl(null, [Validators.required]),\n      password: new FormControl(null, [Validators.required]),\n      remember: new FormControl(null)\n    });\n    this.token = this.authService.getWithExpiry(\"token\");\n    if (this.token) this.routerService.navigate(['/home']);\n  }\n\n  get username() {\n    return this.loginFormGroup.get('username');\n  }\n\n  get password() {\n    return this.loginFormGroup.get('password');\n  }\n\n  //login & disabled login\n  submitLogin() {\n    try {\n      const form = this.loginFormGroup.value;\n      this.isShowLoading = true;\n      this.loginData = {\n        username: form.username.trim(),\n        password: form.password.trim()\n      }\n\n      var statusTag = document.getElementById(\"loginStatus\") as HTMLElement;\n      statusTag.innerHTML = \"\";\n\n      this.authService.userLogin(this.loginData).subscribe(rs => {\n        this.isShowLoading = false;\n        let result = rs as ApiReturn;\n\n        if (result.code === 1) {\n          let data = result.data as LoginReponseModel;\n          let info = this.parseJwt(data.accessToken);\n          if (info != null) {\n            this.toast.success(this.translate.instant('auth_login-success'));\n            Cache.cache(\"userName\", info.userFullname);\n            Cache.cache(\"userCode\", info.userCode);\n            Cache.cache(\"userId\", info.sub);\n            this.authService.setWithExpiry(\"token\", data.accessToken, info.exp);\n            this.authService.loadUrl();\n          }\n        }\n        else if(result.code === 0 && result.data.codeErr === 'UNACTIVE'){\n          this.toast.warning(this.translate.instant('auth_user-unactive'));\n        }\n        else if(result.code === 0 && result.data.codeErr === 'LOCKED'){\n          this.toast.warning(this.translate.instant('auth_user-locked'));\n        }else{\n          this.toast.warning(this.translate.instant('auth_incorrect-user-pass'));\n        }\n      }, error => {\n        this.isShowLoading = false;\n        if (error.code == 401) {\n          this.toast.warning(this.translate.instant('auth_incorrect-user-pass'));\n        } else {\n          this.toast.error(this.translate.instant('error_system'));\n        }\n      })\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  parseJwt(token) {\n    var base64Url = token.split('.')[1];\n    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n\n    return JSON.parse(jsonPayload);\n  };\n\n  changeLanguage() {\n    let langCode = localStorage.getItem(\"lang\");\n    let currentLang = document.getElementById(\"languageToggle\") as HTMLAnchorElement;\n    if (langCode === \"vi\") {\n      currentLang.classList.remove(\"langVN\");\n      currentLang.classList.add(\"langEN\");\n      this.translate.use(\"en\");\n      localStorage.setItem(\"lang\", \"en\");\n      this.i18n.setLocale(en_US);\n    } else {\n      currentLang.classList.add(\"langVN\");\n      currentLang.classList.remove(\"langEN\");\n      this.translate.use(\"vi\");\n      localStorage.setItem(\"lang\", \"vi\");\n      this.i18n.setLocale(vi_VN);\n    }\n  }\n\n  checkLang() {\n    let langCode = localStorage.getItem(\"lang\");\n    if (langCode == null) {\n      langCode = \"vi\";\n      localStorage.setItem(\"lang\", \"vi\");\n      this.translate.use(\"vi\");\n      this.i18n.setLocale(vi_VN);\n    }\n    let currentLang = document.getElementById(\"languageToggle\") as HTMLAnchorElement;\n    if (langCode === \"vi\") {\n      currentLang.classList.remove(\"langEN\");\n      currentLang.classList.add(\"langVN\");\n      this.translate.use(\"vi\");\n      this.i18n.setLocale(vi_VN);\n    } else {\n      currentLang.classList.add(\"langEN\");\n      currentLang.classList.remove(\"langVN\");\n      this.translate.use(\"en\");\n      this.i18n.setLocale(en_US);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'login', component: LoginComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { LoginComponent } from './login/login.component';\n\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    SharedModule\n  ]\n})\nexport class AuthModule { }\n"]}